/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.documentation.domain.tables.DResult;
import io.zerows.extension.commerce.documentation.domain.tables.interfaces.IDResult;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record22;
import org.jooq.Row22;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DResultRecord extends UpdatableRecordImpl<DResultRecord> implements VertxPojo, Record22<String, String, String, String, String, Integer, BigDecimal, String, String, String, String, LocalDateTime, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IDResult {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached DResultRecord
     */
    public DResultRecord() {
        super(DResult.D_RESULT);
    }

    /**
     * Create a detached, initialised DResultRecord
     */
    public DResultRecord(String key, String code, String name, String content, String type, Integer sort, BigDecimal score, String scoreMark, String scoreGrade, String scoreContent, String madeName, LocalDateTime madeAt, String modelId, String modelKey, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(DResult.D_RESULT);

        setKey(key);
        setCode(code);
        setName(name);
        setContent(content);
        setType(type);
        setSort(sort);
        setScore(score);
        setScoreMark(scoreMark);
        setScoreGrade(scoreGrade);
        setScoreContent(scoreContent);
        setMadeName(madeName);
        setMadeAt(madeAt);
        setModelId(modelId);
        setModelKey(modelKey);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised DResultRecord
     */
    public DResultRecord(io.zerows.extension.commerce.documentation.domain.tables.pojos.DResult value) {
        super(DResult.D_RESULT);

        if (value != null) {
            setKey(value.getKey());
            setCode(value.getCode());
            setName(value.getName());
            setContent(value.getContent());
            setType(value.getType());
            setSort(value.getSort());
            setScore(value.getScore());
            setScoreMark(value.getScoreMark());
            setScoreGrade(value.getScoreGrade());
            setScoreContent(value.getScoreContent());
            setMadeName(value.getMadeName());
            setMadeAt(value.getMadeAt());
            setModelId(value.getModelId());
            setModelKey(value.getModelKey());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

    public DResultRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.D_RESULT.KEY</code>. 「key」- 评价主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.KEY</code>. 「key」- 评价主键
     */
    @Override
    public DResultRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CODE</code>. 「code」- 评价编号
     */
    @Override
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CODE</code>. 「code」- 评价编号
     */
    @Override
    public DResultRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.NAME</code>. 「name」- 评价标题
     */
    @Override
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.NAME</code>. 「name」- 评价标题
     */
    @Override
    public DResultRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CONTENT</code>. 「content」- 备注内容、评价内容
     */
    @Override
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CONTENT</code>. 「content」- 备注内容、评价内容
     */
    @Override
    public DResultRecord setContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.TYPE</code>. 「type」- 评价类型
     */
    @Override
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.TYPE</code>. 「type」- 评价类型
     */
    @Override
    public DResultRecord setType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SORT</code>. 「sort」- 评价排序
     */
    @Override
    public Integer getSort() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SORT</code>. 「sort」- 评价排序
     */
    @Override
    public DResultRecord setSort(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE</code>. 「score」- 分数
     */
    @Override
    public BigDecimal getScore() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE</code>. 「score」- 分数
     */
    @Override
    public DResultRecord setScore(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_MARK</code>. 「scoreMark」- 评价对应文字描述，符号
     */
    @Override
    public String getScoreMark() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_MARK</code>. 「scoreMark」- 评价对应文字描述，符号
     */
    @Override
    public DResultRecord setScoreMark(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_GRADE</code>. 「scoreGrade」- 最终评级
     * S/A/B/C/D/E
     */
    @Override
    public String getScoreGrade() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_GRADE</code>. 「scoreGrade」- 最终评级
     * S/A/B/C/D/E
     */
    @Override
    public DResultRecord setScoreGrade(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_CONTENT</code>. 「scoreContent」-
     * 评价文字，区分于原始内容
     */
    @Override
    public String getScoreContent() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_CONTENT</code>. 「scoreContent」-
     * 评价文字，区分于原始内容
     */
    @Override
    public DResultRecord setScoreContent(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MADE_NAME</code>. 「madeName」- 评价人姓名
     */
    @Override
    public String getMadeName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MADE_NAME</code>. 「madeName」- 评价人姓名
     */
    @Override
    public DResultRecord setMadeName(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MADE_AT</code>. 「madeAt」- 评价时间
     */
    @Override
    public LocalDateTime getMadeAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MADE_AT</code>. 「madeAt」- 评价时间
     */
    @Override
    public DResultRecord setMadeAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public DResultRecord setModelId(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public DResultRecord setModelKey(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public DResultRecord setSigma(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public DResultRecord setLanguage(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public DResultRecord setActive(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public DResultRecord setMetadata(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public DResultRecord setCreatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(19);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public DResultRecord setCreatedBy(String value) {
        set(19, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>ZDB.D_RESULT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(20);
    }

    // -------------------------------------------------------------------------
    // Record22 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>ZDB.D_RESULT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public DResultRecord setUpdatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(21);
    }

    /**
     * Setter for <code>ZDB.D_RESULT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public DResultRecord setUpdatedBy(String value) {
        set(21, value);
        return this;
    }

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    @Override
    public Row22<String, String, String, String, String, Integer, BigDecimal, String, String, String, String, LocalDateTime, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row22) super.fieldsRow();
    }

    @Override
    public Row22<String, String, String, String, String, Integer, BigDecimal, String, String, String, String, LocalDateTime, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row22) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return DResult.D_RESULT.KEY;
    }

    @Override
    public Field<String> field2() {
        return DResult.D_RESULT.CODE;
    }

    @Override
    public Field<String> field3() {
        return DResult.D_RESULT.NAME;
    }

    @Override
    public Field<String> field4() {
        return DResult.D_RESULT.CONTENT;
    }

    @Override
    public Field<String> field5() {
        return DResult.D_RESULT.TYPE;
    }

    @Override
    public Field<Integer> field6() {
        return DResult.D_RESULT.SORT;
    }

    @Override
    public Field<BigDecimal> field7() {
        return DResult.D_RESULT.SCORE;
    }

    @Override
    public Field<String> field8() {
        return DResult.D_RESULT.SCORE_MARK;
    }

    @Override
    public Field<String> field9() {
        return DResult.D_RESULT.SCORE_GRADE;
    }

    @Override
    public Field<String> field10() {
        return DResult.D_RESULT.SCORE_CONTENT;
    }

    @Override
    public Field<String> field11() {
        return DResult.D_RESULT.MADE_NAME;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return DResult.D_RESULT.MADE_AT;
    }

    @Override
    public Field<String> field13() {
        return DResult.D_RESULT.MODEL_ID;
    }

    @Override
    public Field<String> field14() {
        return DResult.D_RESULT.MODEL_KEY;
    }

    @Override
    public Field<String> field15() {
        return DResult.D_RESULT.SIGMA;
    }

    @Override
    public Field<String> field16() {
        return DResult.D_RESULT.LANGUAGE;
    }

    @Override
    public Field<Boolean> field17() {
        return DResult.D_RESULT.ACTIVE;
    }

    @Override
    public Field<String> field18() {
        return DResult.D_RESULT.METADATA;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return DResult.D_RESULT.CREATED_AT;
    }

    @Override
    public Field<String> field20() {
        return DResult.D_RESULT.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field21() {
        return DResult.D_RESULT.UPDATED_AT;
    }

    @Override
    public Field<String> field22() {
        return DResult.D_RESULT.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getCode();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public String component5() {
        return getType();
    }

    @Override
    public Integer component6() {
        return getSort();
    }

    @Override
    public BigDecimal component7() {
        return getScore();
    }

    @Override
    public String component8() {
        return getScoreMark();
    }

    @Override
    public String component9() {
        return getScoreGrade();
    }

    @Override
    public String component10() {
        return getScoreContent();
    }

    @Override
    public String component11() {
        return getMadeName();
    }

    @Override
    public LocalDateTime component12() {
        return getMadeAt();
    }

    @Override
    public String component13() {
        return getModelId();
    }

    @Override
    public String component14() {
        return getModelKey();
    }

    @Override
    public String component15() {
        return getSigma();
    }

    @Override
    public String component16() {
        return getLanguage();
    }

    @Override
    public Boolean component17() {
        return getActive();
    }

    @Override
    public String component18() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component19() {
        return getCreatedAt();
    }

    @Override
    public String component20() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component21() {
        return getUpdatedAt();
    }

    @Override
    public String component22() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getCode();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public String value5() {
        return getType();
    }

    @Override
    public Integer value6() {
        return getSort();
    }

    @Override
    public BigDecimal value7() {
        return getScore();
    }

    @Override
    public String value8() {
        return getScoreMark();
    }

    @Override
    public String value9() {
        return getScoreGrade();
    }

    @Override
    public String value10() {
        return getScoreContent();
    }

    @Override
    public String value11() {
        return getMadeName();
    }

    @Override
    public LocalDateTime value12() {
        return getMadeAt();
    }

    @Override
    public String value13() {
        return getModelId();
    }

    @Override
    public String value14() {
        return getModelKey();
    }

    @Override
    public String value15() {
        return getSigma();
    }

    @Override
    public String value16() {
        return getLanguage();
    }

    @Override
    public Boolean value17() {
        return getActive();
    }

    @Override
    public String value18() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value19() {
        return getCreatedAt();
    }

    @Override
    public String value20() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value21() {
        return getUpdatedAt();
    }

    @Override
    public String value22() {
        return getUpdatedBy();
    }

    @Override
    public DResultRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public DResultRecord value2(String value) {
        setCode(value);
        return this;
    }

    @Override
    public DResultRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public DResultRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public DResultRecord value5(String value) {
        setType(value);
        return this;
    }

    @Override
    public DResultRecord value6(Integer value) {
        setSort(value);
        return this;
    }

    @Override
    public DResultRecord value7(BigDecimal value) {
        setScore(value);
        return this;
    }

    @Override
    public DResultRecord value8(String value) {
        setScoreMark(value);
        return this;
    }

    @Override
    public DResultRecord value9(String value) {
        setScoreGrade(value);
        return this;
    }

    @Override
    public DResultRecord value10(String value) {
        setScoreContent(value);
        return this;
    }

    @Override
    public DResultRecord value11(String value) {
        setMadeName(value);
        return this;
    }

    @Override
    public DResultRecord value12(LocalDateTime value) {
        setMadeAt(value);
        return this;
    }

    @Override
    public DResultRecord value13(String value) {
        setModelId(value);
        return this;
    }

    @Override
    public DResultRecord value14(String value) {
        setModelKey(value);
        return this;
    }

    @Override
    public DResultRecord value15(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public DResultRecord value16(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public DResultRecord value17(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public DResultRecord value18(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public DResultRecord value19(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public DResultRecord value20(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public DResultRecord value21(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public DResultRecord value22(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public DResultRecord values(String value1, String value2, String value3, String value4, String value5, Integer value6, BigDecimal value7, String value8, String value9, String value10, String value11, LocalDateTime value12, String value13, String value14, String value15, String value16, Boolean value17, String value18, LocalDateTime value19, String value20, LocalDateTime value21, String value22) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        value22(value22);
        return this;
    }

    @Override
    public void from(IDResult from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setName(from.getName());
        setContent(from.getContent());
        setType(from.getType());
        setSort(from.getSort());
        setScore(from.getScore());
        setScoreMark(from.getScoreMark());
        setScoreGrade(from.getScoreGrade());
        setScoreContent(from.getScoreContent());
        setMadeName(from.getMadeName());
        setMadeAt(from.getMadeAt());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IDResult> E into(E into) {
        into.from(this);
        return into;
    }
}
