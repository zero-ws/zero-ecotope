/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.documentation.domain.tables.interfaces.IDReplyItem;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DReplyItem implements VertxPojo, IDReplyItem {

    private static final long serialVersionUID = 1L;

    private String replyId;
    private String questionCode;
    private String answerContent;
    private String answerFiles;
    private String answerProof;
    private Integer sort;
    private String answerComponent;

    public DReplyItem() {
    }

    public DReplyItem(IDReplyItem value) {
        this.replyId = value.getReplyId();
        this.questionCode = value.getQuestionCode();
        this.answerContent = value.getAnswerContent();
        this.answerFiles = value.getAnswerFiles();
        this.answerProof = value.getAnswerProof();
        this.sort = value.getSort();
        this.answerComponent = value.getAnswerComponent();
    }

    public DReplyItem(
        String replyId,
        String questionCode,
        String answerContent,
        String answerFiles,
        String answerProof,
        Integer sort,
        String answerComponent
    ) {
        this.replyId = replyId;
        this.questionCode = questionCode;
        this.answerContent = answerContent;
        this.answerFiles = answerFiles;
        this.answerProof = answerProof;
        this.sort = sort;
        this.answerComponent = answerComponent;
    }

    public DReplyItem(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.D_REPLY_ITEM.REPLY_ID</code>. 「replyId」- 答题卡ID
     */
    @Override
    public String getReplyId() {
        return this.replyId;
    }

    /**
     * Setter for <code>ZDB.D_REPLY_ITEM.REPLY_ID</code>. 「replyId」- 答题卡ID
     */
    @Override
    public DReplyItem setReplyId(String replyId) {
        this.replyId = replyId;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REPLY_ITEM.QUESTION_CODE</code>. 「questionCode」-
     * 问题编号
     */
    @Override
    public String getQuestionCode() {
        return this.questionCode;
    }

    /**
     * Setter for <code>ZDB.D_REPLY_ITEM.QUESTION_CODE</code>. 「questionCode」-
     * 问题编号
     */
    @Override
    public DReplyItem setQuestionCode(String questionCode) {
        this.questionCode = questionCode;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REPLY_ITEM.ANSWER_CONTENT</code>. 「answerContent」-
     * 答题内容
     */
    @Override
    public String getAnswerContent() {
        return this.answerContent;
    }

    /**
     * Setter for <code>ZDB.D_REPLY_ITEM.ANSWER_CONTENT</code>. 「answerContent」-
     * 答题内容
     */
    @Override
    public DReplyItem setAnswerContent(String answerContent) {
        this.answerContent = answerContent;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REPLY_ITEM.ANSWER_FILES</code>. 「answerFiles」-
     * 答题文件
     */
    @Override
    public String getAnswerFiles() {
        return this.answerFiles;
    }

    /**
     * Setter for <code>ZDB.D_REPLY_ITEM.ANSWER_FILES</code>. 「answerFiles」-
     * 答题文件
     */
    @Override
    public DReplyItem setAnswerFiles(String answerFiles) {
        this.answerFiles = answerFiles;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REPLY_ITEM.ANSWER_PROOF</code>. 「answerProof」-
     * 答题证明
     */
    @Override
    public String getAnswerProof() {
        return this.answerProof;
    }

    /**
     * Setter for <code>ZDB.D_REPLY_ITEM.ANSWER_PROOF</code>. 「answerProof」-
     * 答题证明
     */
    @Override
    public DReplyItem setAnswerProof(String answerProof) {
        this.answerProof = answerProof;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REPLY_ITEM.SORT</code>. 「sort」- 问题排序
     */
    @Override
    public Integer getSort() {
        return this.sort;
    }

    /**
     * Setter for <code>ZDB.D_REPLY_ITEM.SORT</code>. 「sort」- 问题排序
     */
    @Override
    public DReplyItem setSort(Integer sort) {
        this.sort = sort;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REPLY_ITEM.ANSWER_COMPONENT</code>.
     * 「answerComponent」- 关联执行组件（扩展用）
     */
    @Override
    public String getAnswerComponent() {
        return this.answerComponent;
    }

    /**
     * Setter for <code>ZDB.D_REPLY_ITEM.ANSWER_COMPONENT</code>.
     * 「answerComponent」- 关联执行组件（扩展用）
     */
    @Override
    public DReplyItem setAnswerComponent(String answerComponent) {
        this.answerComponent = answerComponent;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DReplyItem other = (DReplyItem) obj;
        if (this.replyId == null) {
            if (other.replyId != null)
                return false;
        } else if (!this.replyId.equals(other.replyId))
            return false;
        if (this.questionCode == null) {
            if (other.questionCode != null)
                return false;
        } else if (!this.questionCode.equals(other.questionCode))
            return false;
        if (this.answerContent == null) {
            if (other.answerContent != null)
                return false;
        } else if (!this.answerContent.equals(other.answerContent))
            return false;
        if (this.answerFiles == null) {
            if (other.answerFiles != null)
                return false;
        } else if (!this.answerFiles.equals(other.answerFiles))
            return false;
        if (this.answerProof == null) {
            if (other.answerProof != null)
                return false;
        } else if (!this.answerProof.equals(other.answerProof))
            return false;
        if (this.sort == null) {
            if (other.sort != null)
                return false;
        } else if (!this.sort.equals(other.sort))
            return false;
        if (this.answerComponent == null) {
            if (other.answerComponent != null)
                return false;
        } else if (!this.answerComponent.equals(other.answerComponent))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.replyId == null) ? 0 : this.replyId.hashCode());
        result = prime * result + ((this.questionCode == null) ? 0 : this.questionCode.hashCode());
        result = prime * result + ((this.answerContent == null) ? 0 : this.answerContent.hashCode());
        result = prime * result + ((this.answerFiles == null) ? 0 : this.answerFiles.hashCode());
        result = prime * result + ((this.answerProof == null) ? 0 : this.answerProof.hashCode());
        result = prime * result + ((this.sort == null) ? 0 : this.sort.hashCode());
        result = prime * result + ((this.answerComponent == null) ? 0 : this.answerComponent.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DReplyItem (");

        sb.append(replyId);
        sb.append(", ").append(questionCode);
        sb.append(", ").append(answerContent);
        sb.append(", ").append(answerFiles);
        sb.append(", ").append(answerProof);
        sb.append(", ").append(sort);
        sb.append(", ").append(answerComponent);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDReplyItem from) {
        setReplyId(from.getReplyId());
        setQuestionCode(from.getQuestionCode());
        setAnswerContent(from.getAnswerContent());
        setAnswerFiles(from.getAnswerFiles());
        setAnswerProof(from.getAnswerProof());
        setSort(from.getSort());
        setAnswerComponent(from.getAnswerComponent());
    }

    @Override
    public <E extends IDReplyItem> E into(E into) {
        into.from(this);
        return into;
    }
}
