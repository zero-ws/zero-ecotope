/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.report.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IKpReportInstance extends VertxPojo, Serializable {

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.KEY</code>. 「key」- 报表主键
     */
    public IKpReportInstance setKey(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.KEY</code>. 「key」- 报表主键
     */
    public String getKey();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.NAME</code>. 「name」- 报表名称
     */
    public IKpReportInstance setName(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.NAME</code>. 「name」- 报表名称
     */
    public String getName();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.STATUS</code>. 「status」- 报表状态
     */
    public IKpReportInstance setStatus(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.STATUS</code>. 「status」- 报表状态
     */
    public String getStatus();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.TYPE</code>. 「type」- 报表类型
     */
    public IKpReportInstance setType(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.TYPE</code>. 「type」- 报表类型
     */
    public String getType();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.TITLE</code>. 「title」- 报表标题
     */
    public IKpReportInstance setTitle(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.TITLE</code>. 「title」- 报表标题
     */
    public String getTitle();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.SUBTITLE</code>. 「subtitle」- 副标题
     */
    public IKpReportInstance setSubtitle(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.SUBTITLE</code>. 「subtitle」- 副标题
     */
    public String getSubtitle();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.EXTRA</code>. 「extra」- 额外信息
     */
    public IKpReportInstance setExtra(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.EXTRA</code>. 「extra」- 额外信息
     */
    public String getExtra();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.DESCRIPTION</code>.
     * 「description」- 报表描述
     */
    public IKpReportInstance setDescription(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.DESCRIPTION</code>.
     * 「description」- 报表描述
     */
    public String getDescription();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.MODE_EXPR</code>. 「modeExpr」-
     * 表达式（和 type 绑定）
     */
    public IKpReportInstance setModeExpr(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.MODE_EXPR</code>. 「modeExpr」-
     * 表达式（和 type 绑定）
     */
    public String getModeExpr();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_ID</code>. 「reportId」-
     * 关联报表ID
     */
    public IKpReportInstance setReportId(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_ID</code>. 「reportId」-
     * 关联报表ID
     */
    public String getReportId();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_CONTENT</code>.
     * 「reportContent」- 报表内容
     */
    public IKpReportInstance setReportContent(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_CONTENT</code>.
     * 「reportContent」- 报表内容
     */
    public String getReportContent();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_DATA</code>. 「reportData」-
     * 报表最终数据
     */
    public IKpReportInstance setReportData(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_DATA</code>. 「reportData」-
     * 报表最终数据
     */
    public String getReportData();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_BY</code>. 「reportBy」- 报表人
     */
    public IKpReportInstance setReportBy(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_BY</code>. 「reportBy」- 报表人
     */
    public String getReportBy();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_AT</code>. 「reportAt」-
     * 报表生成时间
     */
    public IKpReportInstance setReportAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_AT</code>. 「reportAt」-
     * 报表生成时间
     */
    public LocalDateTime getReportAt();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REF_TYPE</code>. 「refType」- 关联类型
     */
    public IKpReportInstance setRefType(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REF_TYPE</code>. 「refType」- 关联类型
     */
    public String getRefType();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REF_ID</code>. 「refId」- 关联ID
     */
    public IKpReportInstance setRefId(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REF_ID</code>. 「refId」- 关联ID
     */
    public String getRefId();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    public IKpReportInstance setActive(Boolean value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    public IKpReportInstance setSigma(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.METADATA</code>. 「metadata」- 附加配置
     */
    public IKpReportInstance setMetadata(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public IKpReportInstance setLanguage(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public IKpReportInstance setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public IKpReportInstance setCreatedBy(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public IKpReportInstance setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public IKpReportInstance setUpdatedBy(String value);

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IKpReportInstance
     */
    public void from(IKpReportInstance from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IKpReportInstance
     */
    public <E extends IKpReportInstance> E into(E into);

        @Override
        public default IKpReportInstance fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setStatus,json::getString,"STATUS","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setTitle,json::getString,"TITLE","java.lang.String");
                setOrThrow(this::setSubtitle,json::getString,"SUBTITLE","java.lang.String");
                setOrThrow(this::setExtra,json::getString,"EXTRA","java.lang.String");
                setOrThrow(this::setDescription,json::getString,"DESCRIPTION","java.lang.String");
                setOrThrow(this::setModeExpr,json::getString,"MODE_EXPR","java.lang.String");
                setOrThrow(this::setReportId,json::getString,"REPORT_ID","java.lang.String");
                setOrThrow(this::setReportContent,json::getString,"REPORT_CONTENT","java.lang.String");
                setOrThrow(this::setReportData,json::getString,"REPORT_DATA","java.lang.String");
                setOrThrow(this::setReportBy,json::getString,"REPORT_BY","java.lang.String");
                setOrThrow(this::setReportAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"REPORT_AT","java.time.LocalDateTime");
                setOrThrow(this::setRefType,json::getString,"REF_TYPE","java.lang.String");
                setOrThrow(this::setRefId,json::getString,"REF_ID","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("STATUS",getStatus());
                json.put("TYPE",getType());
                json.put("TITLE",getTitle());
                json.put("SUBTITLE",getSubtitle());
                json.put("EXTRA",getExtra());
                json.put("DESCRIPTION",getDescription());
                json.put("MODE_EXPR",getModeExpr());
                json.put("REPORT_ID",getReportId());
                json.put("REPORT_CONTENT",getReportContent());
                json.put("REPORT_DATA",getReportData());
                json.put("REPORT_BY",getReportBy());
                json.put("REPORT_AT",getReportAt()==null?null:getReportAt().toString());
                json.put("REF_TYPE",getRefType());
                json.put("REF_ID",getRefId());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
