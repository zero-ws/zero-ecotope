/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFTransItem extends VertxPojo, Serializable {

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.KEY</code>. 「key」- 收款明细账单主键ID
     */
    public IFTransItem setKey(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.KEY</code>. 「key」- 收款明细账单主键ID
     */
    public String getKey();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.NAME</code>. 「name」 - 收款明细单标题
     */
    public IFTransItem setName(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.NAME</code>. 「name」 - 收款明细单标题
     */
    public String getName();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.CODE</code>. 「code」 - 收款明细单编号
     */
    public IFTransItem setCode(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.CODE</code>. 「code」 - 收款明细单编号
     */
    public String getCode();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.SERIAL</code>. 「serial」 - 收款明细单据号
     */
    public IFTransItem setSerial(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.SERIAL</code>. 「serial」 - 收款明细单据号
     */
    public String getSerial();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    public IFTransItem setAmount(BigDecimal value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    public BigDecimal getAmount();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.TRANSACTION_ID</code>.
     * 「transactionId」交易ID
     */
    public IFTransItem setTransactionId(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.TRANSACTION_ID</code>.
     * 「transactionId」交易ID
     */
    public String getTransactionId();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_NAME</code>. 「payName」打款人姓名
     */
    public IFTransItem setPayName(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_NAME</code>. 「payName」打款人姓名
     */
    public String getPayName();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_MOBILE</code>. 「payMobile」打款人电话
     */
    public IFTransItem setPayMobile(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_MOBILE</code>. 「payMobile」打款人电话
     */
    public String getPayMobile();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_METHOD</code>. 「payMethod」付款方式
     */
    public IFTransItem setPayMethod(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_METHOD</code>. 「payMethod」付款方式
     */
    public String getPayMethod();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_ID</code>. 「payId」付款账号
     */
    public IFTransItem setPayId(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_ID</code>. 「payId」付款账号
     */
    public String getPayId();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.START_AT</code>. 「startAt」- 开始时间
     */
    public IFTransItem setStartAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.START_AT</code>. 「startAt」- 开始时间
     */
    public LocalDateTime getStartAt();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.END_AT</code>. 「endAt」- 结束时间
     */
    public IFTransItem setEndAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.END_AT</code>. 「endAt」- 结束时间
     */
    public LocalDateTime getEndAt();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.GROUP_BY</code>. 「groupBy」- 分组
     */
    public IFTransItem setGroupBy(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.GROUP_BY</code>. 「groupBy」- 分组
     */
    public String getGroupBy();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    public IFTransItem setSigma(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IFTransItem setLanguage(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    public IFTransItem setActive(Boolean value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IFTransItem setMetadata(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IFTransItem setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IFTransItem setCreatedBy(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IFTransItem setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IFTransItem setUpdatedBy(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IFTransItem
     */
    public void from(IFTransItem from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IFTransItem
     */
    public <E extends IFTransItem> E into(E into);

        @Override
        public default IFTransItem fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setSerial,json::getString,"SERIAL","java.lang.String");
                setOrThrow(this::setAmount,key -> {String s = json.getString(key); return s==null?null:new java.math.BigDecimal(s);},"AMOUNT","java.math.BigDecimal");
                setOrThrow(this::setTransactionId,json::getString,"TRANSACTION_ID","java.lang.String");
                setOrThrow(this::setPayName,json::getString,"PAY_NAME","java.lang.String");
                setOrThrow(this::setPayMobile,json::getString,"PAY_MOBILE","java.lang.String");
                setOrThrow(this::setPayMethod,json::getString,"PAY_METHOD","java.lang.String");
                setOrThrow(this::setPayId,json::getString,"PAY_ID","java.lang.String");
                setOrThrow(this::setStartAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"START_AT","java.time.LocalDateTime");
                setOrThrow(this::setEndAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"END_AT","java.time.LocalDateTime");
                setOrThrow(this::setGroupBy,json::getString,"GROUP_BY","java.lang.String");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("SERIAL",getSerial());
                json.put("AMOUNT",getAmount()==null?null:getAmount().toString());
                json.put("TRANSACTION_ID",getTransactionId());
                json.put("PAY_NAME",getPayName());
                json.put("PAY_MOBILE",getPayMobile());
                json.put("PAY_METHOD",getPayMethod());
                json.put("PAY_ID",getPayId());
                json.put("START_AT",getStartAt()==null?null:getStartAt().toString());
                json.put("END_AT",getEndAt()==null?null:getEndAt().toString());
                json.put("GROUP_BY",getGroupBy());
                json.put("SIGMA",getSigma());
                json.put("LANGUAGE",getLanguage());
                json.put("ACTIVE",getActive());
                json.put("METADATA",getMetadata());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
