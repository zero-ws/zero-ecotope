/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.interfaces;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;

import static io.r2mo.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IFTransOf extends VertxPojo, Serializable {

    /**
     * Setter for <code>ZDB.F_TRANS_OF.TRANS_ID</code>. 「transId」- 关联交易ID
     */
    public IFTransOf setTransId(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_OF.TRANS_ID</code>. 「transId」- 关联交易ID
     */
    public String getTransId();

    /**
     * Setter for <code>ZDB.F_TRANS_OF.OBJECT_TYPE</code>. 「objectType」- 交易目标类型
     */
    public IFTransOf setObjectType(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_OF.OBJECT_TYPE</code>. 「objectType」- 交易目标类型
     */
    public String getObjectType();

    /**
     * Setter for <code>ZDB.F_TRANS_OF.OBJECT_ID</code>. 「objectId」- 关联目标ID
     */
    public IFTransOf setObjectId(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_OF.OBJECT_ID</code>. 「objectId」- 关联目标ID
     */
    public String getObjectId();

    /**
     * Setter for <code>ZDB.F_TRANS_OF.COMMENT</code>. 「comment」 - 关联备注
     */
    public IFTransOf setComment(String value);

    /**
     * Getter for <code>ZDB.F_TRANS_OF.COMMENT</code>. 「comment」 - 关联备注
     */
    public String getComment();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IFTransOf
     */
    public void from(IFTransOf from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IFTransOf
     */
    public <E extends IFTransOf> E into(E into);

        @Override
        public default IFTransOf fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setTransId,json::getString,"TRANS_ID","java.lang.String");
                setOrThrow(this::setObjectType,json::getString,"OBJECT_TYPE","java.lang.String");
                setOrThrow(this::setObjectId,json::getString,"OBJECT_ID","java.lang.String");
                setOrThrow(this::setComment,json::getString,"COMMENT","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("TRANS_ID",getTransId());
                json.put("OBJECT_TYPE",getObjectType());
                json.put("OBJECT_ID",getObjectId());
                json.put("COMMENT",getComment());
                return json;
        }

}
