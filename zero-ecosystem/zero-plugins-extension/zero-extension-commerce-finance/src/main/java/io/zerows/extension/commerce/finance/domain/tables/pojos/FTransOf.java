/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.finance.domain.tables.interfaces.IFTransOf;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FTransOf implements VertxPojo, IFTransOf {

    private static final long serialVersionUID = 1L;

    private String transId;
    private String objectType;
    private String objectId;
    private String comment;

    public FTransOf() {}

    public FTransOf(IFTransOf value) {
        this.transId = value.getTransId();
        this.objectType = value.getObjectType();
        this.objectId = value.getObjectId();
        this.comment = value.getComment();
    }

    public FTransOf(
        String transId,
        String objectType,
        String objectId,
        String comment
    ) {
        this.transId = transId;
        this.objectType = objectType;
        this.objectId = objectId;
        this.comment = comment;
    }

        public FTransOf(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>ZDB.F_TRANS_OF.TRANS_ID</code>. 「transId」- 关联交易ID
     */
    @Override
    public String getTransId() {
        return this.transId;
    }

    /**
     * Setter for <code>ZDB.F_TRANS_OF.TRANS_ID</code>. 「transId」- 关联交易ID
     */
    @Override
    public FTransOf setTransId(String transId) {
        this.transId = transId;
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_OF.OBJECT_TYPE</code>. 「objectType」- 交易目标类型
     */
    @Override
    public String getObjectType() {
        return this.objectType;
    }

    /**
     * Setter for <code>ZDB.F_TRANS_OF.OBJECT_TYPE</code>. 「objectType」- 交易目标类型
     */
    @Override
    public FTransOf setObjectType(String objectType) {
        this.objectType = objectType;
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_OF.OBJECT_ID</code>. 「objectId」- 关联目标ID
     */
    @Override
    public String getObjectId() {
        return this.objectId;
    }

    /**
     * Setter for <code>ZDB.F_TRANS_OF.OBJECT_ID</code>. 「objectId」- 关联目标ID
     */
    @Override
    public FTransOf setObjectId(String objectId) {
        this.objectId = objectId;
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_OF.COMMENT</code>. 「comment」 - 关联备注
     */
    @Override
    public String getComment() {
        return this.comment;
    }

    /**
     * Setter for <code>ZDB.F_TRANS_OF.COMMENT</code>. 「comment」 - 关联备注
     */
    @Override
    public FTransOf setComment(String comment) {
        this.comment = comment;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FTransOf other = (FTransOf) obj;
        if (this.transId == null) {
            if (other.transId != null)
                return false;
        }
        else if (!this.transId.equals(other.transId))
            return false;
        if (this.objectType == null) {
            if (other.objectType != null)
                return false;
        }
        else if (!this.objectType.equals(other.objectType))
            return false;
        if (this.objectId == null) {
            if (other.objectId != null)
                return false;
        }
        else if (!this.objectId.equals(other.objectId))
            return false;
        if (this.comment == null) {
            if (other.comment != null)
                return false;
        }
        else if (!this.comment.equals(other.comment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.transId == null) ? 0 : this.transId.hashCode());
        result = prime * result + ((this.objectType == null) ? 0 : this.objectType.hashCode());
        result = prime * result + ((this.objectId == null) ? 0 : this.objectId.hashCode());
        result = prime * result + ((this.comment == null) ? 0 : this.comment.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FTransOf (");

        sb.append(transId);
        sb.append(", ").append(objectType);
        sb.append(", ").append(objectId);
        sb.append(", ").append(comment);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFTransOf from) {
        setTransId(from.getTransId());
        setObjectType(from.getObjectType());
        setObjectId(from.getObjectId());
        setComment(from.getComment());
    }

    @Override
    public <E extends IFTransOf> E into(E into) {
        into.from(this);
        return into;
    }
}
