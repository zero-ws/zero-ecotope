/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.finance.domain.tables.FInvoice;
import io.zerows.extension.commerce.finance.domain.tables.records.FInvoiceRecord;
import org.jooq.Configuration;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FInvoiceDao extends AbstractVertxDAO<FInvoiceRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice, String, Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>>, Future<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<FInvoiceRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public FInvoiceDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(FInvoice.F_INVOICE, io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice.class, new JDBCClassicQueryExecutor<FInvoiceRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice, String>(configuration, io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByName(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByType(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>AMOUNT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByAmount(final Collection<BigDecimal> values) {
        return findManyByCondition(FInvoice.F_INVOICE.AMOUNT.in(values));
    }

    /**
     * Find records that have <code>AMOUNT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByAmount(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.AMOUNT.in(values), limit);
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByComment(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.COMMENT.in(values));
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByComment(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.COMMENT.in(values), limit);
    }

    /**
     * Find records that have <code>INVOICE_TITLE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByInvoiceTitle(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.INVOICE_TITLE.in(values));
    }

    /**
     * Find records that have <code>INVOICE_TITLE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByInvoiceTitle(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.INVOICE_TITLE.in(values), limit);
    }

    /**
     * Find records that have <code>INVOICE_NUMBER IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByInvoiceNumber(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.INVOICE_NUMBER.in(values));
    }

    /**
     * Find records that have <code>INVOICE_NUMBER IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByInvoiceNumber(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.INVOICE_NUMBER.in(values), limit);
    }

    /**
     * Find records that have <code>INVOICE_SERIAL IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByInvoiceSerial(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.INVOICE_SERIAL.in(values));
    }

    /**
     * Find records that have <code>INVOICE_SERIAL IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByInvoiceSerial(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.INVOICE_SERIAL.in(values), limit);
    }

    /**
     * Find records that have <code>TIN IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByTin(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.TIN.in(values));
    }

    /**
     * Find records that have <code>TIN IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByTin(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.TIN.in(values), limit);
    }

    /**
     * Find records that have <code>TIN_NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByTinName(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.TIN_NAME.in(values));
    }

    /**
     * Find records that have <code>TIN_NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByTinName(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.TIN_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>PERSONAL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByPersonal(final Collection<Boolean> values) {
        return findManyByCondition(FInvoice.F_INVOICE.PERSONAL.in(values));
    }

    /**
     * Find records that have <code>PERSONAL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByPersonal(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.PERSONAL.in(values), limit);
    }

    /**
     * Find records that have <code>DESC_BANK IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescBank(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_BANK.in(values));
    }

    /**
     * Find records that have <code>DESC_BANK IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescBank(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_BANK.in(values), limit);
    }

    /**
     * Find records that have <code>DESC_COMPANY IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescCompany(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_COMPANY.in(values));
    }

    /**
     * Find records that have <code>DESC_COMPANY IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescCompany(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_COMPANY.in(values), limit);
    }

    /**
     * Find records that have <code>DESC_LOCATION IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescLocation(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_LOCATION.in(values));
    }

    /**
     * Find records that have <code>DESC_LOCATION IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescLocation(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_LOCATION.in(values), limit);
    }

    /**
     * Find records that have <code>DESC_USER IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescUser(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_USER.in(values));
    }

    /**
     * Find records that have <code>DESC_USER IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByDescUser(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.DESC_USER.in(values), limit);
    }

    /**
     * Find records that have <code>NAME_RECEIPT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameReceipt(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_RECEIPT.in(values));
    }

    /**
     * Find records that have <code>NAME_RECEIPT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameReceipt(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_RECEIPT.in(values), limit);
    }

    /**
     * Find records that have <code>NAME_RECHECK IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameRecheck(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_RECHECK.in(values));
    }

    /**
     * Find records that have <code>NAME_RECHECK IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameRecheck(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_RECHECK.in(values), limit);
    }

    /**
     * Find records that have <code>NAME_BILLING IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameBilling(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_BILLING.in(values));
    }

    /**
     * Find records that have <code>NAME_BILLING IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameBilling(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_BILLING.in(values), limit);
    }

    /**
     * Find records that have <code>NAME_SELLING IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameSelling(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_SELLING.in(values));
    }

    /**
     * Find records that have <code>NAME_SELLING IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByNameSelling(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.NAME_SELLING.in(values), limit);
    }

    /**
     * Find records that have <code>ORDER_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByOrderId(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.ORDER_ID.in(values));
    }

    /**
     * Find records that have <code>ORDER_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByOrderId(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.ORDER_ID.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByModelId(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.MODEL_ID.in(values));
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByModelId(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.MODEL_ID.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByModelKey(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.MODEL_KEY.in(values));
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByModelKey(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.MODEL_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(FInvoice.F_INVOICE.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FInvoice.F_INVOICE.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FInvoice.F_INVOICE.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(FInvoice.F_INVOICE.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(FInvoice.F_INVOICE.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<FInvoiceRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<FInvoiceRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FInvoice, String>) super.queryExecutor();
    }
}
