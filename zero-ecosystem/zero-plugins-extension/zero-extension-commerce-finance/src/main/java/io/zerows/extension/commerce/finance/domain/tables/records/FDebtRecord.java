/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.finance.domain.tables.FDebt;
import io.zerows.extension.commerce.finance.domain.tables.interfaces.IFDebt;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FDebtRecord extends UpdatableRecordImpl<FDebtRecord> implements VertxPojo, IFDebt {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.F_DEBT.KEY</code>. 「key」- 应收账单主键ID
     */
    @Override
    public FDebtRecord setKey(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.KEY</code>. 「key」- 应收账单主键ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.NAME</code>. 「name」 - 应收单标题
     */
    @Override
    public FDebtRecord setName(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.NAME</code>. 「name」 - 应收单标题
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.CODE</code>. 「code」 - 应收单编号
     */
    @Override
    public FDebtRecord setCode(final String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.CODE</code>. 「code」 - 应收单编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.SERIAL</code>. 「serial」 - 应收单据号
     */
    @Override
    public FDebtRecord setSerial(final String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.SERIAL</code>. 「serial」 - 应收单据号
     */
    @Override
    public String getSerial() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.TYPE</code>. 「type」- 类型
     */
    @Override
    public FDebtRecord setType(final String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.TYPE</code>. 「type」- 类型
     */
    @Override
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.AMOUNT</code>. 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public FDebtRecord setAmount(final BigDecimal value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.AMOUNT</code>. 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(5);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.AMOUNT_BALANCE</code>. 「amountBalance」——剩余金额
     */
    @Override
    public FDebtRecord setAmountBalance(final BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.AMOUNT_BALANCE</code>. 「amountBalance」——剩余金额
     */
    @Override
    public BigDecimal getAmountBalance() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.FINISHED</code>. 「finished」- 是否完成
     */
    @Override
    public FDebtRecord setFinished(final Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.FINISHED</code>. 「finished」- 是否完成
     */
    @Override
    public Boolean getFinished() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.FINISHED_AT</code>. 「createdAt」- 完成时间
     */
    @Override
    public FDebtRecord setFinishedAt(final LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.FINISHED_AT</code>. 「createdAt」- 完成时间
     */
    @Override
    public LocalDateTime getFinishedAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.SIGN_NAME</code>. 「signName」签单人姓名
     */
    @Override
    public FDebtRecord setSignName(final String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.SIGN_NAME</code>. 「signName」签单人姓名
     */
    @Override
    public String getSignName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.SIGN_MOBILE</code>. 「signMobile」签单人电话
     */
    @Override
    public FDebtRecord setSignMobile(final String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.SIGN_MOBILE</code>. 「signMobile」签单人电话
     */
    @Override
    public String getSignMobile() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public FDebtRecord setStartAt(final LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public LocalDateTime getStartAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public FDebtRecord setEndAt(final LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public LocalDateTime getEndAt() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public FDebtRecord setGroupBy(final String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public String getGroupBy() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.COMMENT</code>. 「comment」 - 备注
     */
    @Override
    public FDebtRecord setComment(final String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.COMMENT</code>. 「comment」 - 备注
     */
    @Override
    public String getComment() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.CUSTOMER_ID</code>. 「customerId」结算对象（单位ID）
     */
    @Override
    public FDebtRecord setCustomerId(final String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.CUSTOMER_ID</code>. 「customerId」结算对象（单位ID）
     */
    @Override
    public String getCustomerId() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FDebtRecord setSigma(final String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FDebtRecord setLanguage(final String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FDebtRecord setActive(final Boolean value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(18);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public FDebtRecord setMetadata(final String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(19);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public FDebtRecord setCreatedAt(final LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public FDebtRecord setCreatedBy(final String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(21);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public FDebtRecord setUpdatedAt(final LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for <code>ZDB.F_DEBT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public FDebtRecord setUpdatedBy(final String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_DEBT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(final IFDebt from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setSerial(from.getSerial());
        setType(from.getType());
        setAmount(from.getAmount());
        setAmountBalance(from.getAmountBalance());
        setFinished(from.getFinished());
        setFinishedAt(from.getFinishedAt());
        setSignName(from.getSignName());
        setSignMobile(from.getSignMobile());
        setStartAt(from.getStartAt());
        setEndAt(from.getEndAt());
        setGroupBy(from.getGroupBy());
        setComment(from.getComment());
        setCustomerId(from.getCustomerId());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IFDebt> E into(final E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FDebtRecord
     */
    public FDebtRecord() {
        super(FDebt.F_DEBT);
    }

    /**
     * Create a detached, initialised FDebtRecord
     */
    public FDebtRecord(final String key, final String name, final String code, final String serial, final String type, final BigDecimal amount, final BigDecimal amountBalance, final Boolean finished, final LocalDateTime finishedAt, final String signName, final String signMobile, final LocalDateTime startAt, final LocalDateTime endAt, final String groupBy, final String comment, final String customerId, final String sigma, final String language, final Boolean active, final String metadata, final LocalDateTime createdAt, final String createdBy, final LocalDateTime updatedAt, final String updatedBy) {
        super(FDebt.F_DEBT);

        setKey(key);
        setName(name);
        setCode(code);
        setSerial(serial);
        setType(type);
        setAmount(amount);
        setAmountBalance(amountBalance);
        setFinished(finished);
        setFinishedAt(finishedAt);
        setSignName(signName);
        setSignMobile(signMobile);
        setStartAt(startAt);
        setEndAt(endAt);
        setGroupBy(groupBy);
        setComment(comment);
        setCustomerId(customerId);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FDebtRecord
     */
    public FDebtRecord(final io.zerows.extension.commerce.finance.domain.tables.pojos.FDebt value) {
        super(FDebt.F_DEBT);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setSerial(value.getSerial());
            setType(value.getType());
            setAmount(value.getAmount());
            setAmountBalance(value.getAmountBalance());
            setFinished(value.getFinished());
            setFinishedAt(value.getFinishedAt());
            setSignName(value.getSignName());
            setSignMobile(value.getSignMobile());
            setStartAt(value.getStartAt());
            setEndAt(value.getEndAt());
            setGroupBy(value.getGroupBy());
            setComment(value.getComment());
            setCustomerId(value.getCustomerId());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

    public FDebtRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
