/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.finance.domain.tables.FSettlementItem;
import io.zerows.extension.commerce.finance.domain.tables.interfaces.IFSettlementItem;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FSettlementItemRecord extends UpdatableRecordImpl<FSettlementItemRecord> implements VertxPojo, IFSettlementItem {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.KEY</code>. 「key」- 结算单明细主键
     */
    @Override
    public FSettlementItemRecord setKey(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.KEY</code>. 「key」- 结算单明细主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.NAME</code>. 「name」 -  明细名称
     */
    @Override
    public FSettlementItemRecord setName(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.NAME</code>. 「name」 -  明细名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.CODE</code>. 「code」 - 明细系统代码
     */
    @Override
    public FSettlementItemRecord setCode(final String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.CODE</code>. 「code」 - 明细系统代码
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.SERIAL</code>. 「serial」 - 明细编号
     */
    @Override
    public FSettlementItemRecord setSerial(final String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.SERIAL</code>. 「serial」 - 明细编号
     */
    @Override
    public String getSerial() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.INCOME</code>. 「income」- true =
     * 消费类，false = 付款类
     */
    @Override
    public FSettlementItemRecord setIncome(final Boolean value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.INCOME</code>. 「income」- true =
     * 消费类，false = 付款类
     */
    @Override
    public Boolean getIncome() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.TYPE</code>. 「type」- 明细类型
     */
    @Override
    public FSettlementItemRecord setType(final String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.TYPE</code>. 「type」- 明细类型
     */
    @Override
    public String getType() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，实际结算金额
     */
    @Override
    public FSettlementItemRecord setAmount(final BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，实际结算金额
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.COMMENT</code>. 「comment」 - 明细备注
     */
    @Override
    public FSettlementItemRecord setComment(final String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.COMMENT</code>. 「comment」 - 明细备注
     */
    @Override
    public String getComment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public FSettlementItemRecord setStartAt(final LocalDateTime value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public LocalDateTime getStartAt() {
        return (LocalDateTime) get(8);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public FSettlementItemRecord setEndAt(final LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public LocalDateTime getEndAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public FSettlementItemRecord setGroupBy(final String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public String getGroupBy() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.MANUAL_NO</code>. 「manualNo」 -
     * 手工单号（线下单号专用）
     */
    @Override
    public FSettlementItemRecord setManualNo(final String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.MANUAL_NO</code>. 「manualNo」 -
     * 手工单号（线下单号专用）
     */
    @Override
    public String getManualNo() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.PAY_TERM_ID</code>. 「payTermId」-
     * 账单项ID
     */
    @Override
    public FSettlementItemRecord setPayTermId(final String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.PAY_TERM_ID</code>. 「payTermId」-
     * 账单项ID
     */
    @Override
    public String getPayTermId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.RELATED_ID</code>. 「relatedId」-
     * 关联BillItem ID（保留，原系统存在）
     */
    @Override
    public FSettlementItemRecord setRelatedId(final String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.RELATED_ID</code>. 「relatedId」-
     * 关联BillItem ID（保留，原系统存在）
     */
    @Override
    public String getRelatedId() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.SETTLEMENT_ID</code>.
     * 「settlementId」- 结算单ID，该字段有值标识已经结算
     */
    @Override
    public FSettlementItemRecord setSettlementId(final String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.SETTLEMENT_ID</code>.
     * 「settlementId」- 结算单ID，该字段有值标识已经结算
     */
    @Override
    public String getSettlementId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.DEBT_ID</code>. 「debtId」- 应收账单ID
     */
    @Override
    public FSettlementItemRecord setDebtId(final String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.DEBT_ID</code>. 「debtId」- 应收账单ID
     */
    @Override
    public String getDebtId() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.FINISHED_ID</code>. 「finishedId」-
     * 关联交易ID
     */
    @Override
    public FSettlementItemRecord setFinishedId(final String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.FINISHED_ID</code>. 「finishedId」-
     * 关联交易ID
     */
    @Override
    public String getFinishedId() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FSettlementItemRecord setSigma(final String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FSettlementItemRecord setLanguage(final String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(18);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FSettlementItemRecord setActive(final Boolean value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public FSettlementItemRecord setMetadata(final String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.METADATA</code>. 「metadata」-
     * 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(20);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public FSettlementItemRecord setCreatedAt(final LocalDateTime value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public FSettlementItemRecord setCreatedBy(final String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(22);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public FSettlementItemRecord setUpdatedAt(final LocalDateTime value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(23);
    }

    /**
     * Setter for <code>ZDB.F_SETTLEMENT_ITEM.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public FSettlementItemRecord setUpdatedBy(final String value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_SETTLEMENT_ITEM.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(final IFSettlementItem from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setSerial(from.getSerial());
        setIncome(from.getIncome());
        setType(from.getType());
        setAmount(from.getAmount());
        setComment(from.getComment());
        setStartAt(from.getStartAt());
        setEndAt(from.getEndAt());
        setGroupBy(from.getGroupBy());
        setManualNo(from.getManualNo());
        setPayTermId(from.getPayTermId());
        setRelatedId(from.getRelatedId());
        setSettlementId(from.getSettlementId());
        setDebtId(from.getDebtId());
        setFinishedId(from.getFinishedId());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IFSettlementItem> E into(final E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FSettlementItemRecord
     */
    public FSettlementItemRecord() {
        super(FSettlementItem.F_SETTLEMENT_ITEM);
    }

    /**
     * Create a detached, initialised FSettlementItemRecord
     */
    public FSettlementItemRecord(final String key, final String name, final String code, final String serial, final Boolean income, final String type, final BigDecimal amount, final String comment, final LocalDateTime startAt, final LocalDateTime endAt, final String groupBy, final String manualNo, final String payTermId, final String relatedId, final String settlementId, final String debtId, final String finishedId, final String sigma, final String language, final Boolean active, final String metadata, final LocalDateTime createdAt, final String createdBy, final LocalDateTime updatedAt, final String updatedBy) {
        super(FSettlementItem.F_SETTLEMENT_ITEM);

        setKey(key);
        setName(name);
        setCode(code);
        setSerial(serial);
        setIncome(income);
        setType(type);
        setAmount(amount);
        setComment(comment);
        setStartAt(startAt);
        setEndAt(endAt);
        setGroupBy(groupBy);
        setManualNo(manualNo);
        setPayTermId(payTermId);
        setRelatedId(relatedId);
        setSettlementId(settlementId);
        setDebtId(debtId);
        setFinishedId(finishedId);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FSettlementItemRecord
     */
    public FSettlementItemRecord(final io.zerows.extension.commerce.finance.domain.tables.pojos.FSettlementItem value) {
        super(FSettlementItem.F_SETTLEMENT_ITEM);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setSerial(value.getSerial());
            setIncome(value.getIncome());
            setType(value.getType());
            setAmount(value.getAmount());
            setComment(value.getComment());
            setStartAt(value.getStartAt());
            setEndAt(value.getEndAt());
            setGroupBy(value.getGroupBy());
            setManualNo(value.getManualNo());
            setPayTermId(value.getPayTermId());
            setRelatedId(value.getRelatedId());
            setSettlementId(value.getSettlementId());
            setDebtId(value.getDebtId());
            setFinishedId(value.getFinishedId());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

    public FSettlementItemRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
