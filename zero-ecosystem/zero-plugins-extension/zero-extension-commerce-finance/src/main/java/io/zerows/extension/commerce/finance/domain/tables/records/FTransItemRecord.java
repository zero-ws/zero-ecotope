/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.finance.domain.tables.FTransItem;
import io.zerows.extension.commerce.finance.domain.tables.interfaces.IFTransItem;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record21;
import org.jooq.Row21;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FTransItemRecord extends UpdatableRecordImpl<FTransItemRecord> implements VertxPojo, Record21<String, String, String, String, BigDecimal, String, String, String, String, String, LocalDateTime, LocalDateTime, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IFTransItem {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.KEY</code>. 「key」- 收款明细账单主键ID
     */
    @Override
    public FTransItemRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.KEY</code>. 「key」- 收款明细账单主键ID
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.NAME</code>. 「name」 - 收款明细单标题
     */
    @Override
    public FTransItemRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.NAME</code>. 「name」 - 收款明细单标题
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.CODE</code>. 「code」 - 收款明细单编号
     */
    @Override
    public FTransItemRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.CODE</code>. 「code」 - 收款明细单编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.SERIAL</code>. 「serial」 - 收款明细单据号
     */
    @Override
    public FTransItemRecord setSerial(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.SERIAL</code>. 「serial」 - 收款明细单据号
     */
    @Override
    public String getSerial() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public FTransItemRecord setAmount(BigDecimal value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.AMOUNT</code>.
     * 「amount」——价税合计，所有明细对应的实际结算金额
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.TRANSACTION_ID</code>.
     * 「transactionId」交易ID
     */
    @Override
    public FTransItemRecord setTransactionId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.TRANSACTION_ID</code>.
     * 「transactionId」交易ID
     */
    @Override
    public String getTransactionId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_NAME</code>. 「payName」打款人姓名
     */
    @Override
    public FTransItemRecord setPayName(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_NAME</code>. 「payName」打款人姓名
     */
    @Override
    public String getPayName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_MOBILE</code>. 「payMobile」打款人电话
     */
    @Override
    public FTransItemRecord setPayMobile(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_MOBILE</code>. 「payMobile」打款人电话
     */
    @Override
    public String getPayMobile() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_METHOD</code>. 「payMethod」付款方式
     */
    @Override
    public FTransItemRecord setPayMethod(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_METHOD</code>. 「payMethod」付款方式
     */
    @Override
    public String getPayMethod() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.PAY_ID</code>. 「payId」付款账号
     */
    @Override
    public FTransItemRecord setPayId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.PAY_ID</code>. 「payId」付款账号
     */
    @Override
    public String getPayId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public FTransItemRecord setStartAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public LocalDateTime getStartAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public FTransItemRecord setEndAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public LocalDateTime getEndAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public FTransItemRecord setGroupBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public String getGroupBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FTransItemRecord setSigma(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FTransItemRecord setLanguage(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FTransItemRecord setActive(Boolean value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public FTransItemRecord setMetadata(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public FTransItemRecord setCreatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public FTransItemRecord setCreatedBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(18);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public FTransItemRecord setUpdatedAt(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>ZDB.F_TRANS_ITEM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public FTransItemRecord setUpdatedBy(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_TRANS_ITEM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record21 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row21<String, String, String, String, BigDecimal, String, String, String, String, String, LocalDateTime, LocalDateTime, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row21) super.fieldsRow();
    }

    @Override
    public Row21<String, String, String, String, BigDecimal, String, String, String, String, String, LocalDateTime, LocalDateTime, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row21) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FTransItem.F_TRANS_ITEM.KEY;
    }

    @Override
    public Field<String> field2() {
        return FTransItem.F_TRANS_ITEM.NAME;
    }

    @Override
    public Field<String> field3() {
        return FTransItem.F_TRANS_ITEM.CODE;
    }

    @Override
    public Field<String> field4() {
        return FTransItem.F_TRANS_ITEM.SERIAL;
    }

    @Override
    public Field<BigDecimal> field5() {
        return FTransItem.F_TRANS_ITEM.AMOUNT;
    }

    @Override
    public Field<String> field6() {
        return FTransItem.F_TRANS_ITEM.TRANSACTION_ID;
    }

    @Override
    public Field<String> field7() {
        return FTransItem.F_TRANS_ITEM.PAY_NAME;
    }

    @Override
    public Field<String> field8() {
        return FTransItem.F_TRANS_ITEM.PAY_MOBILE;
    }

    @Override
    public Field<String> field9() {
        return FTransItem.F_TRANS_ITEM.PAY_METHOD;
    }

    @Override
    public Field<String> field10() {
        return FTransItem.F_TRANS_ITEM.PAY_ID;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return FTransItem.F_TRANS_ITEM.START_AT;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return FTransItem.F_TRANS_ITEM.END_AT;
    }

    @Override
    public Field<String> field13() {
        return FTransItem.F_TRANS_ITEM.GROUP_BY;
    }

    @Override
    public Field<String> field14() {
        return FTransItem.F_TRANS_ITEM.SIGMA;
    }

    @Override
    public Field<String> field15() {
        return FTransItem.F_TRANS_ITEM.LANGUAGE;
    }

    @Override
    public Field<Boolean> field16() {
        return FTransItem.F_TRANS_ITEM.ACTIVE;
    }

    @Override
    public Field<String> field17() {
        return FTransItem.F_TRANS_ITEM.METADATA;
    }

    @Override
    public Field<LocalDateTime> field18() {
        return FTransItem.F_TRANS_ITEM.CREATED_AT;
    }

    @Override
    public Field<String> field19() {
        return FTransItem.F_TRANS_ITEM.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field20() {
        return FTransItem.F_TRANS_ITEM.UPDATED_AT;
    }

    @Override
    public Field<String> field21() {
        return FTransItem.F_TRANS_ITEM.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getSerial();
    }

    @Override
    public BigDecimal component5() {
        return getAmount();
    }

    @Override
    public String component6() {
        return getTransactionId();
    }

    @Override
    public String component7() {
        return getPayName();
    }

    @Override
    public String component8() {
        return getPayMobile();
    }

    @Override
    public String component9() {
        return getPayMethod();
    }

    @Override
    public String component10() {
        return getPayId();
    }

    @Override
    public LocalDateTime component11() {
        return getStartAt();
    }

    @Override
    public LocalDateTime component12() {
        return getEndAt();
    }

    @Override
    public String component13() {
        return getGroupBy();
    }

    @Override
    public String component14() {
        return getSigma();
    }

    @Override
    public String component15() {
        return getLanguage();
    }

    @Override
    public Boolean component16() {
        return getActive();
    }

    @Override
    public String component17() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component18() {
        return getCreatedAt();
    }

    @Override
    public String component19() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component20() {
        return getUpdatedAt();
    }

    @Override
    public String component21() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getSerial();
    }

    @Override
    public BigDecimal value5() {
        return getAmount();
    }

    @Override
    public String value6() {
        return getTransactionId();
    }

    @Override
    public String value7() {
        return getPayName();
    }

    @Override
    public String value8() {
        return getPayMobile();
    }

    @Override
    public String value9() {
        return getPayMethod();
    }

    @Override
    public String value10() {
        return getPayId();
    }

    @Override
    public LocalDateTime value11() {
        return getStartAt();
    }

    @Override
    public LocalDateTime value12() {
        return getEndAt();
    }

    @Override
    public String value13() {
        return getGroupBy();
    }

    @Override
    public String value14() {
        return getSigma();
    }

    @Override
    public String value15() {
        return getLanguage();
    }

    @Override
    public Boolean value16() {
        return getActive();
    }

    @Override
    public String value17() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value18() {
        return getCreatedAt();
    }

    @Override
    public String value19() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value20() {
        return getUpdatedAt();
    }

    @Override
    public String value21() {
        return getUpdatedBy();
    }

    @Override
    public FTransItemRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public FTransItemRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public FTransItemRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public FTransItemRecord value4(String value) {
        setSerial(value);
        return this;
    }

    @Override
    public FTransItemRecord value5(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public FTransItemRecord value6(String value) {
        setTransactionId(value);
        return this;
    }

    @Override
    public FTransItemRecord value7(String value) {
        setPayName(value);
        return this;
    }

    @Override
    public FTransItemRecord value8(String value) {
        setPayMobile(value);
        return this;
    }

    @Override
    public FTransItemRecord value9(String value) {
        setPayMethod(value);
        return this;
    }

    @Override
    public FTransItemRecord value10(String value) {
        setPayId(value);
        return this;
    }

    @Override
    public FTransItemRecord value11(LocalDateTime value) {
        setStartAt(value);
        return this;
    }

    @Override
    public FTransItemRecord value12(LocalDateTime value) {
        setEndAt(value);
        return this;
    }

    @Override
    public FTransItemRecord value13(String value) {
        setGroupBy(value);
        return this;
    }

    @Override
    public FTransItemRecord value14(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public FTransItemRecord value15(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public FTransItemRecord value16(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public FTransItemRecord value17(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public FTransItemRecord value18(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public FTransItemRecord value19(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public FTransItemRecord value20(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public FTransItemRecord value21(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public FTransItemRecord values(String value1, String value2, String value3, String value4, BigDecimal value5, String value6, String value7, String value8, String value9, String value10, LocalDateTime value11, LocalDateTime value12, String value13, String value14, String value15, Boolean value16, String value17, LocalDateTime value18, String value19, LocalDateTime value20, String value21) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFTransItem from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setSerial(from.getSerial());
        setAmount(from.getAmount());
        setTransactionId(from.getTransactionId());
        setPayName(from.getPayName());
        setPayMobile(from.getPayMobile());
        setPayMethod(from.getPayMethod());
        setPayId(from.getPayId());
        setStartAt(from.getStartAt());
        setEndAt(from.getEndAt());
        setGroupBy(from.getGroupBy());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IFTransItem> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FTransItemRecord
     */
    public FTransItemRecord() {
        super(FTransItem.F_TRANS_ITEM);
    }

    /**
     * Create a detached, initialised FTransItemRecord
     */
    public FTransItemRecord(String key, String name, String code, String serial, BigDecimal amount, String transactionId, String payName, String payMobile, String payMethod, String payId, LocalDateTime startAt, LocalDateTime endAt, String groupBy, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(FTransItem.F_TRANS_ITEM);

        setKey(key);
        setName(name);
        setCode(code);
        setSerial(serial);
        setAmount(amount);
        setTransactionId(transactionId);
        setPayName(payName);
        setPayMobile(payMobile);
        setPayMethod(payMethod);
        setPayId(payId);
        setStartAt(startAt);
        setEndAt(endAt);
        setGroupBy(groupBy);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FTransItemRecord
     */
    public FTransItemRecord(io.zerows.extension.commerce.finance.domain.tables.pojos.FTransItem value) {
        super(FTransItem.F_TRANS_ITEM);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setSerial(value.getSerial());
            setAmount(value.getAmount());
            setTransactionId(value.getTransactionId());
            setPayName(value.getPayName());
            setPayMobile(value.getPayMobile());
            setPayMethod(value.getPayMethod());
            setPayId(value.getPayId());
            setStartAt(value.getStartAt());
            setEndAt(value.getEndAt());
            setGroupBy(value.getGroupBy());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

        public FTransItemRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
