/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.finance.domain.tables.FBank;
import io.zerows.extension.commerce.finance.domain.tables.records.FBankRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FBankDao extends AbstractVertxDAO<FBankRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBank, String, Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>>, Future<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<FBankRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBank, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public FBankDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(FBank.F_BANK, io.zerows.extension.commerce.finance.domain.tables.pojos.FBank.class, new JDBCClassicQueryExecutor<FBankRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBank, String>(configuration, io.zerows.extension.commerce.finance.domain.tables.pojos.FBank.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.finance.domain.tables.pojos.FBank object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByName(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>ALIAS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByAlias(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.ALIAS.in(values));
    }

    /**
     * Find records that have <code>ALIAS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByAlias(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.ALIAS.in(values), limit);
    }

    /**
     * Find records that have <code>LOGO IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByLogo(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.LOGO.in(values));
    }

    /**
     * Find records that have <code>LOGO IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByLogo(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.LOGO.in(values), limit);
    }

    /**
     * Find records that have <code>WEBSITE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByWebsite(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.WEBSITE.in(values));
    }

    /**
     * Find records that have <code>WEBSITE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByWebsite(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.WEBSITE.in(values), limit);
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByComment(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.COMMENT.in(values));
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByComment(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.COMMENT.in(values), limit);
    }

    /**
     * Find records that have <code>BRANCH_NAME IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBranchName(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.BRANCH_NAME.in(values));
    }

    /**
     * Find records that have <code>BRANCH_NAME IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBranchName(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.BRANCH_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>BRANCH_CODE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBranchCode(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.BRANCH_CODE.in(values));
    }

    /**
     * Find records that have <code>BRANCH_CODE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBranchCode(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.BRANCH_CODE.in(values), limit);
    }

    /**
     * Find records that have <code>BRANCH IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBranch(final Collection<Boolean> values) {
        return findManyByCondition(FBank.F_BANK.BRANCH.in(values));
    }

    /**
     * Find records that have <code>BRANCH IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBranch(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.BRANCH.in(values), limit);
    }

    /**
     * Find records that have <code>BANK_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBankId(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.BANK_ID.in(values));
    }

    /**
     * Find records that have <code>BANK_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByBankId(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.BANK_ID.in(values), limit);
    }

    /**
     * Find records that have <code>LOCATION_ID IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByLocationId(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.LOCATION_ID.in(values));
    }

    /**
     * Find records that have <code>LOCATION_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByLocationId(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.LOCATION_ID.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(FBank.F_BANK.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FBank.F_BANK.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FBank.F_BANK.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(FBank.F_BANK.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBank>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(FBank.F_BANK.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<FBankRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBank, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<FBankRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBank, String>) super.queryExecutor();
    }
}
