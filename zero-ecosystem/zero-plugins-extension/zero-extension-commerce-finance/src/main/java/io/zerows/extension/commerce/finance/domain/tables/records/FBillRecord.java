/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.finance.domain.tables.FBill;
import io.zerows.extension.commerce.finance.domain.tables.interfaces.IFBill;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FBillRecord extends UpdatableRecordImpl<FBillRecord> implements VertxPojo, IFBill {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.F_BILL.KEY</code>. 「key」- 账单主键
     */
    @Override
    public FBillRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.KEY</code>. 「key」- 账单主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.F_BILL.NAME</code>. 「name」- 账单标题
     */
    @Override
    public FBillRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.NAME</code>. 「name」- 账单标题
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.F_BILL.CODE</code>. 「code」- 账单系统编号
     */
    @Override
    public FBillRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.CODE</code>. 「code」- 账单系统编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.F_BILL.SERIAL</code>. 「serial」- 账单流水线号
     */
    @Override
    public FBillRecord setSerial(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.SERIAL</code>. 「serial」- 账单流水线号
     */
    @Override
    public String getSerial() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.F_BILL.TYPE</code>. 「type」- 账单类型
     */
    @Override
    public FBillRecord setType(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.TYPE</code>. 「type」- 账单类型
     */
    @Override
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.F_BILL.CATEGORY</code>. 「category」- 账单类别
     */
    @Override
    public FBillRecord setCategory(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.CATEGORY</code>. 「category」- 账单类别
     */
    @Override
    public String getCategory() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.F_BILL.AMOUNT</code>. 「amount」- 账单金额
     */
    @Override
    public FBillRecord setAmount(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.AMOUNT</code>. 「amount」- 账单金额
     */
    @Override
    public BigDecimal getAmount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>ZDB.F_BILL.INCOME</code>. 「income」- true = 消费类，false =
     * 付款类
     */
    @Override
    public FBillRecord setIncome(Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.INCOME</code>. 「income」- true = 消费类，false =
     * 付款类
     */
    @Override
    public Boolean getIncome() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>ZDB.F_BILL.COMMENT</code>. 「comment」 - 账单备注
     */
    @Override
    public FBillRecord setComment(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.COMMENT</code>. 「comment」 - 账单备注
     */
    @Override
    public String getComment() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.F_BILL.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public FBillRecord setStartAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.START_AT</code>. 「startAt」- 开始时间
     */
    @Override
    public LocalDateTime getStartAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>ZDB.F_BILL.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public FBillRecord setEndAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.END_AT</code>. 「endAt」- 结束时间
     */
    @Override
    public LocalDateTime getEndAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>ZDB.F_BILL.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public FBillRecord setGroupBy(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.GROUP_BY</code>. 「groupBy」- 分组
     */
    @Override
    public String getGroupBy() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.F_BILL.ORDER_ID</code>. 「orderId」- 订单对应的订单ID
     */
    @Override
    public FBillRecord setOrderId(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.ORDER_ID</code>. 「orderId」- 订单对应的订单ID
     */
    @Override
    public String getOrderId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.F_BILL.BOOK_ID</code>. 「bookId」- 关联账本ID
     */
    @Override
    public FBillRecord setBookId(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.BOOK_ID</code>. 「bookId」- 关联账本ID
     */
    @Override
    public String getBookId() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.F_BILL.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public FBillRecord setModelId(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.F_BILL.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public FBillRecord setModelKey(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ZDB.F_BILL.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FBillRecord setSigma(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.F_BILL.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FBillRecord setLanguage(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ZDB.F_BILL.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FBillRecord setActive(Boolean value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(18);
    }

    /**
     * Setter for <code>ZDB.F_BILL.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public FBillRecord setMetadata(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(19);
    }

    /**
     * Setter for <code>ZDB.F_BILL.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public FBillRecord setCreatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>ZDB.F_BILL.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public FBillRecord setCreatedBy(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(21);
    }

    /**
     * Setter for <code>ZDB.F_BILL.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public FBillRecord setUpdatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for <code>ZDB.F_BILL.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public FBillRecord setUpdatedBy(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_BILL.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IFBill from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setSerial(from.getSerial());
        setType(from.getType());
        setCategory(from.getCategory());
        setAmount(from.getAmount());
        setIncome(from.getIncome());
        setComment(from.getComment());
        setStartAt(from.getStartAt());
        setEndAt(from.getEndAt());
        setGroupBy(from.getGroupBy());
        setOrderId(from.getOrderId());
        setBookId(from.getBookId());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IFBill> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FBillRecord
     */
    public FBillRecord() {
        super(FBill.F_BILL);
    }

    /**
     * Create a detached, initialised FBillRecord
     */
    public FBillRecord(String key, String name, String code, String serial, String type, String category, BigDecimal amount, Boolean income, String comment, LocalDateTime startAt, LocalDateTime endAt, String groupBy, String orderId, String bookId, String modelId, String modelKey, String sigma, String language, Boolean active, String metadata, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(FBill.F_BILL);

        setKey(key);
        setName(name);
        setCode(code);
        setSerial(serial);
        setType(type);
        setCategory(category);
        setAmount(amount);
        setIncome(income);
        setComment(comment);
        setStartAt(startAt);
        setEndAt(endAt);
        setGroupBy(groupBy);
        setOrderId(orderId);
        setBookId(bookId);
        setModelId(modelId);
        setModelKey(modelKey);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FBillRecord
     */
    public FBillRecord(io.zerows.extension.commerce.finance.domain.tables.pojos.FBill value) {
        super(FBill.F_BILL);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setSerial(value.getSerial());
            setType(value.getType());
            setCategory(value.getCategory());
            setAmount(value.getAmount());
            setIncome(value.getIncome());
            setComment(value.getComment());
            setStartAt(value.getStartAt());
            setEndAt(value.getEndAt());
            setGroupBy(value.getGroupBy());
            setOrderId(value.getOrderId());
            setBookId(value.getBookId());
            setModelId(value.getModelId());
            setModelKey(value.getModelKey());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

        public FBillRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
