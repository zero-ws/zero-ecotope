/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.finance.domain.tables.FBill;
import io.zerows.extension.commerce.finance.domain.tables.records.FBillRecord;
import org.jooq.Configuration;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FBillDao extends AbstractVertxDAO<FBillRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBill, String, Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>>, Future<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<FBillRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBill, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public FBillDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(FBill.F_BILL, io.zerows.extension.commerce.finance.domain.tables.pojos.FBill.class, new JDBCClassicQueryExecutor<FBillRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBill, String>(configuration, io.zerows.extension.commerce.finance.domain.tables.pojos.FBill.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.finance.domain.tables.pojos.FBill object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByName(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyBySerial(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.SERIAL.in(values));
    }

    /**
     * Find records that have <code>SERIAL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyBySerial(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.SERIAL.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByType(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>CATEGORY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCategory(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.CATEGORY.in(values));
    }

    /**
     * Find records that have <code>CATEGORY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCategory(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.CATEGORY.in(values), limit);
    }

    /**
     * Find records that have <code>AMOUNT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByAmount(final Collection<BigDecimal> values) {
        return findManyByCondition(FBill.F_BILL.AMOUNT.in(values));
    }

    /**
     * Find records that have <code>AMOUNT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByAmount(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.AMOUNT.in(values), limit);
    }

    /**
     * Find records that have <code>INCOME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByIncome(final Collection<Boolean> values) {
        return findManyByCondition(FBill.F_BILL.INCOME.in(values));
    }

    /**
     * Find records that have <code>INCOME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByIncome(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.INCOME.in(values), limit);
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByComment(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.COMMENT.in(values));
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByComment(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.COMMENT.in(values), limit);
    }

    /**
     * Find records that have <code>START_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByStartAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FBill.F_BILL.START_AT.in(values));
    }

    /**
     * Find records that have <code>START_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByStartAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.START_AT.in(values), limit);
    }

    /**
     * Find records that have <code>END_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByEndAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FBill.F_BILL.END_AT.in(values));
    }

    /**
     * Find records that have <code>END_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByEndAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.END_AT.in(values), limit);
    }

    /**
     * Find records that have <code>GROUP_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByGroupBy(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.GROUP_BY.in(values));
    }

    /**
     * Find records that have <code>GROUP_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByGroupBy(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.GROUP_BY.in(values), limit);
    }

    /**
     * Find records that have <code>ORDER_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByOrderId(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.ORDER_ID.in(values));
    }

    /**
     * Find records that have <code>ORDER_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByOrderId(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.ORDER_ID.in(values), limit);
    }

    /**
     * Find records that have <code>BOOK_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByBookId(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.BOOK_ID.in(values));
    }

    /**
     * Find records that have <code>BOOK_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByBookId(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.BOOK_ID.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByModelId(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.MODEL_ID.in(values));
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByModelId(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.MODEL_ID.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByModelKey(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.MODEL_KEY.in(values));
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByModelKey(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.MODEL_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(FBill.F_BILL.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FBill.F_BILL.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(FBill.F_BILL.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(FBill.F_BILL.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.finance.domain.tables.pojos.FBill>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(FBill.F_BILL.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<FBillRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBill, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<FBillRecord, io.zerows.extension.commerce.finance.domain.tables.pojos.FBill, String>) super.queryExecutor();
    }
}
