/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.finance.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.finance.domain.tables.FPayTerm;
import io.zerows.extension.commerce.finance.domain.tables.interfaces.IFPayTerm;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class FPayTermRecord extends UpdatableRecordImpl<FPayTermRecord> implements VertxPojo, Record19<String, String, String, String, String, String, Boolean, String, String, String, Boolean, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IFPayTerm {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.F_PAY_TERM.KEY</code>. 「key」- 账单项
     */
    @Override
    public FPayTermRecord setKey(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.KEY</code>. 「key」- 账单项
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.NAME</code>. 「name」- 账单项名称
     */
    @Override
    public FPayTermRecord setName(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.NAME</code>. 「name」- 账单项名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.CODE</code>. 「code」- 账单项编号
     */
    @Override
    public FPayTermRecord setCode(final String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.CODE</code>. 「code」- 账单项编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.TYPE</code>. 「type」- 账单项类型：付款类/消费类
     */
    @Override
    public FPayTermRecord setType(final String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.TYPE</code>. 「type」- 账单项类型：付款类/消费类
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.CATEGORY</code>. 「category」- 账单项类别
     */
    @Override
    public FPayTermRecord setCategory(final String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.CATEGORY</code>. 「category」- 账单项类别
     */
    @Override
    public String getCategory() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.HELP_CODE</code>. 「helpCode」- 助记码
     */
    @Override
    public FPayTermRecord setHelpCode(final String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.HELP_CODE</code>. 「helpCode」- 助记码
     */
    @Override
    public String getHelpCode() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.LEAF</code>. 「leaf」- 是否明细
     */
    @Override
    public FPayTermRecord setLeaf(final Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.LEAF</code>. 「leaf」- 是否明细
     */
    @Override
    public Boolean getLeaf() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.COMMENT</code>. 「comment」 - 账单项备注
     */
    @Override
    public FPayTermRecord setComment(final String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.COMMENT</code>. 「comment」 - 账单项备注
     */
    @Override
    public String getComment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.PARENT_ID</code>. 「parentId」- 父账单项
     */
    @Override
    public FPayTermRecord setParentId(final String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.PARENT_ID</code>. 「parentId」- 父账单项
     */
    @Override
    public String getParentId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.SUBJECT_ID</code>. 「subjectId」- 会计科目关联ID
     */
    @Override
    public FPayTermRecord setSubjectId(final String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.SUBJECT_ID</code>. 「subjectId」- 会计科目关联ID
     */
    @Override
    public String getSubjectId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.LOCKED</code>. 「locked」- 是否锁定
     */
    @Override
    public FPayTermRecord setLocked(final Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.LOCKED</code>. 「locked」- 是否锁定
     */
    @Override
    public Boolean getLocked() {
        return (Boolean) get(10);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public FPayTermRecord setSigma(final String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public FPayTermRecord setLanguage(final String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public FPayTermRecord setActive(final Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public FPayTermRecord setMetadata(final String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public FPayTermRecord setCreatedAt(final LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public FPayTermRecord setCreatedBy(final String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public FPayTermRecord setUpdatedAt(final LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>ZDB.F_PAY_TERM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public FPayTermRecord setUpdatedBy(final String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.F_PAY_TERM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row19<String, String, String, String, String, String, Boolean, String, String, String, Boolean, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    @Override
    public Row19<String, String, String, String, String, String, Boolean, String, String, String, Boolean, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return FPayTerm.F_PAY_TERM.KEY;
    }

    @Override
    public Field<String> field2() {
        return FPayTerm.F_PAY_TERM.NAME;
    }

    @Override
    public Field<String> field3() {
        return FPayTerm.F_PAY_TERM.CODE;
    }

    @Override
    public Field<String> field4() {
        return FPayTerm.F_PAY_TERM.TYPE;
    }

    @Override
    public Field<String> field5() {
        return FPayTerm.F_PAY_TERM.CATEGORY;
    }

    @Override
    public Field<String> field6() {
        return FPayTerm.F_PAY_TERM.HELP_CODE;
    }

    @Override
    public Field<Boolean> field7() {
        return FPayTerm.F_PAY_TERM.LEAF;
    }

    @Override
    public Field<String> field8() {
        return FPayTerm.F_PAY_TERM.COMMENT;
    }

    @Override
    public Field<String> field9() {
        return FPayTerm.F_PAY_TERM.PARENT_ID;
    }

    @Override
    public Field<String> field10() {
        return FPayTerm.F_PAY_TERM.SUBJECT_ID;
    }

    @Override
    public Field<Boolean> field11() {
        return FPayTerm.F_PAY_TERM.LOCKED;
    }

    @Override
    public Field<String> field12() {
        return FPayTerm.F_PAY_TERM.SIGMA;
    }

    @Override
    public Field<String> field13() {
        return FPayTerm.F_PAY_TERM.LANGUAGE;
    }

    @Override
    public Field<Boolean> field14() {
        return FPayTerm.F_PAY_TERM.ACTIVE;
    }

    @Override
    public Field<String> field15() {
        return FPayTerm.F_PAY_TERM.METADATA;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return FPayTerm.F_PAY_TERM.CREATED_AT;
    }

    @Override
    public Field<String> field17() {
        return FPayTerm.F_PAY_TERM.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field18() {
        return FPayTerm.F_PAY_TERM.UPDATED_AT;
    }

    @Override
    public Field<String> field19() {
        return FPayTerm.F_PAY_TERM.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getType();
    }

    @Override
    public String component5() {
        return getCategory();
    }

    @Override
    public String component6() {
        return getHelpCode();
    }

    @Override
    public Boolean component7() {
        return getLeaf();
    }

    @Override
    public String component8() {
        return getComment();
    }

    @Override
    public String component9() {
        return getParentId();
    }

    @Override
    public String component10() {
        return getSubjectId();
    }

    @Override
    public Boolean component11() {
        return getLocked();
    }

    @Override
    public String component12() {
        return getSigma();
    }

    @Override
    public String component13() {
        return getLanguage();
    }

    @Override
    public Boolean component14() {
        return getActive();
    }

    @Override
    public String component15() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component16() {
        return getCreatedAt();
    }

    @Override
    public String component17() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component18() {
        return getUpdatedAt();
    }

    @Override
    public String component19() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getType();
    }

    @Override
    public String value5() {
        return getCategory();
    }

    @Override
    public String value6() {
        return getHelpCode();
    }

    @Override
    public Boolean value7() {
        return getLeaf();
    }

    @Override
    public String value8() {
        return getComment();
    }

    @Override
    public String value9() {
        return getParentId();
    }

    @Override
    public String value10() {
        return getSubjectId();
    }

    @Override
    public Boolean value11() {
        return getLocked();
    }

    @Override
    public String value12() {
        return getSigma();
    }

    @Override
    public String value13() {
        return getLanguage();
    }

    @Override
    public Boolean value14() {
        return getActive();
    }

    @Override
    public String value15() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value16() {
        return getCreatedAt();
    }

    @Override
    public String value17() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value18() {
        return getUpdatedAt();
    }

    @Override
    public String value19() {
        return getUpdatedBy();
    }

    @Override
    public FPayTermRecord value1(final String value) {
        setKey(value);
        return this;
    }

    @Override
    public FPayTermRecord value2(final String value) {
        setName(value);
        return this;
    }

    @Override
    public FPayTermRecord value3(final String value) {
        setCode(value);
        return this;
    }

    @Override
    public FPayTermRecord value4(final String value) {
        setType(value);
        return this;
    }

    @Override
    public FPayTermRecord value5(final String value) {
        setCategory(value);
        return this;
    }

    @Override
    public FPayTermRecord value6(final String value) {
        setHelpCode(value);
        return this;
    }

    @Override
    public FPayTermRecord value7(final Boolean value) {
        setLeaf(value);
        return this;
    }

    @Override
    public FPayTermRecord value8(final String value) {
        setComment(value);
        return this;
    }

    @Override
    public FPayTermRecord value9(final String value) {
        setParentId(value);
        return this;
    }

    @Override
    public FPayTermRecord value10(final String value) {
        setSubjectId(value);
        return this;
    }

    @Override
    public FPayTermRecord value11(final Boolean value) {
        setLocked(value);
        return this;
    }

    @Override
    public FPayTermRecord value12(final String value) {
        setSigma(value);
        return this;
    }

    @Override
    public FPayTermRecord value13(final String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public FPayTermRecord value14(final Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public FPayTermRecord value15(final String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public FPayTermRecord value16(final LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public FPayTermRecord value17(final String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public FPayTermRecord value18(final LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public FPayTermRecord value19(final String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public FPayTermRecord values(final String value1, final String value2, final String value3, final String value4, final String value5, final String value6, final Boolean value7, final String value8, final String value9, final String value10, final Boolean value11, final String value12, final String value13, final Boolean value14, final String value15, final LocalDateTime value16, final String value17, final LocalDateTime value18, final String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(final IFPayTerm from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setType(from.getType());
        setCategory(from.getCategory());
        setHelpCode(from.getHelpCode());
        setLeaf(from.getLeaf());
        setComment(from.getComment());
        setParentId(from.getParentId());
        setSubjectId(from.getSubjectId());
        setLocked(from.getLocked());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IFPayTerm> E into(final E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FPayTermRecord
     */
    public FPayTermRecord() {
        super(FPayTerm.F_PAY_TERM);
    }

    /**
     * Create a detached, initialised FPayTermRecord
     */
    public FPayTermRecord(final String key, final String name, final String code, final String type, final String category, final String helpCode, final Boolean leaf, final String comment, final String parentId, final String subjectId, final Boolean locked, final String sigma, final String language, final Boolean active, final String metadata, final LocalDateTime createdAt, final String createdBy, final LocalDateTime updatedAt, final String updatedBy) {
        super(FPayTerm.F_PAY_TERM);

        setKey(key);
        setName(name);
        setCode(code);
        setType(type);
        setCategory(category);
        setHelpCode(helpCode);
        setLeaf(leaf);
        setComment(comment);
        setParentId(parentId);
        setSubjectId(subjectId);
        setLocked(locked);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FPayTermRecord
     */
    public FPayTermRecord(final io.zerows.extension.commerce.finance.domain.tables.pojos.FPayTerm value) {
        super(FPayTerm.F_PAY_TERM);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setType(value.getType());
            setCategory(value.getCategory());
            setHelpCode(value.getHelpCode());
            setLeaf(value.getLeaf());
            setComment(value.getComment());
            setParentId(value.getParentId());
            setSubjectId(value.getSubjectId());
            setLocked(value.getLocked());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

    public FPayTermRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
