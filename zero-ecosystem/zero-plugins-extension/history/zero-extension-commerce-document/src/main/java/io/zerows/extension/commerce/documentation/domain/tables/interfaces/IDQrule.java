/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public interface IDQrule extends VertxPojo, Serializable {

    /**
     * Getter for <code>ZDB.D_QRULE.REF_ID</code>. 「refId」- 关联考卷中问题实例，对应
     * D_PAPER_REF 表中内容
     */
    public String getRefId();

    /**
     * Setter for <code>ZDB.D_QRULE.REF_ID</code>. 「refId」- 关联考卷中问题实例，对应
     * D_PAPER_REF 表中内容
     */
    public IDQrule setRefId(String value);

    /**
     * Getter for <code>ZDB.D_QRULE.ANSWER_ID</code>. 「answerId」- 考卷ID
     */
    public String getAnswerId();

    /**
     * Setter for <code>ZDB.D_QRULE.ANSWER_ID</code>. 「answerId」- 考卷ID
     */
    public IDQrule setAnswerId(String value);

    /**
     * Getter for <code>ZDB.D_QRULE.PAPER_ID</code>. 「paperId」- 规则所属考卷ID
     */
    public String getPaperId();

    /**
     * Setter for <code>ZDB.D_QRULE.PAPER_ID</code>. 「paperId」- 规则所属考卷ID
     */
    public IDQrule setPaperId(String value);

    /**
     * Getter for <code>ZDB.D_QRULE.TYPE</code>. 「type」- 规则类型
     */
    public String getType();

    /**
     * Setter for <code>ZDB.D_QRULE.TYPE</code>. 「type」- 规则类型
     */
    public IDQrule setType(String value);

    /**
     * Getter for <code>ZDB.D_QRULE.QUESTION_ID</code>. 「questionId」- 问题ID
     */
    public String getQuestionId();

    /**
     * Setter for <code>ZDB.D_QRULE.QUESTION_ID</code>. 「questionId」- 问题ID
     */
    public IDQrule setQuestionId(String value);

    /**
     * Getter for <code>ZDB.D_QRULE.IS_REQUIRED</code>. 「isRequired」- 必答题
     */
    public Boolean getIsRequired();

    /**
     * Setter for <code>ZDB.D_QRULE.IS_REQUIRED</code>. 「isRequired」- 必答题
     */
    public IDQrule setIsRequired(Boolean value);

    /**
     * Getter for <code>ZDB.D_QRULE.IS_ATTACHED</code>. 「isAttached」- 附件必须
     */
    public Boolean getIsAttached();

    /**
     * Setter for <code>ZDB.D_QRULE.IS_ATTACHED</code>. 「isAttached」- 附件必须
     */
    public IDQrule setIsAttached(Boolean value);

    /**
     * Getter for <code>ZDB.D_QRULE.IS_PROOF</code>. 「isProof」- 证据必须
     */
    public Boolean getIsProof();

    /**
     * Setter for <code>ZDB.D_QRULE.IS_PROOF</code>. 「isProof」- 证据必须
     */
    public IDQrule setIsProof(Boolean value);

    /**
     * Getter for <code>ZDB.D_QRULE.RULE_SET</code>. 「ruleSet」- 规则分批执行
     */
    public String getRuleSet();

    /**
     * Setter for <code>ZDB.D_QRULE.RULE_SET</code>. 「ruleSet」- 规则分批执行
     */
    public IDQrule setRuleSet(String value);

    /**
     * Getter for <code>ZDB.D_QRULE.RULE_CONFIG</code>. 「ruleConfig」- 规则相关配置
     */
    public String getRuleConfig();

    /**
     * Setter for <code>ZDB.D_QRULE.RULE_CONFIG</code>. 「ruleConfig」- 规则相关配置
     */
    public IDQrule setRuleConfig(String value);

    /**
     * Getter for <code>ZDB.D_QRULE.RULE_COMPONENT</code>. 「ruleComponent」-
     * 规则执行组件（扩展用）
     */
    public String getRuleComponent();

    /**
     * Setter for <code>ZDB.D_QRULE.RULE_COMPONENT</code>. 「ruleComponent」-
     * 规则执行组件（扩展用）
     */
    public IDQrule setRuleComponent(String value);

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IDQrule
     */
    public void from(IDQrule from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IDQrule
     */
    public <E extends IDQrule> E into(E into);

    @Override
    public default IDQrule fromJson(io.vertx.core.json.JsonObject json) {
        setOrThrow(this::setRefId, json::getString, "REF_ID", "java.lang.String");
        setOrThrow(this::setAnswerId, json::getString, "ANSWER_ID", "java.lang.String");
        setOrThrow(this::setPaperId, json::getString, "PAPER_ID", "java.lang.String");
        setOrThrow(this::setType, json::getString, "TYPE", "java.lang.String");
        setOrThrow(this::setQuestionId, json::getString, "QUESTION_ID", "java.lang.String");
        setOrThrow(this::setIsRequired, json::getBoolean, "IS_REQUIRED", "java.lang.Boolean");
        setOrThrow(this::setIsAttached, json::getBoolean, "IS_ATTACHED", "java.lang.Boolean");
        setOrThrow(this::setIsProof, json::getBoolean, "IS_PROOF", "java.lang.Boolean");
        setOrThrow(this::setRuleSet, json::getString, "RULE_SET", "java.lang.String");
        setOrThrow(this::setRuleConfig, json::getString, "RULE_CONFIG", "java.lang.String");
        setOrThrow(this::setRuleComponent, json::getString, "RULE_COMPONENT", "java.lang.String");
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("REF_ID", getRefId());
        json.put("ANSWER_ID", getAnswerId());
        json.put("PAPER_ID", getPaperId());
        json.put("TYPE", getType());
        json.put("QUESTION_ID", getQuestionId());
        json.put("IS_REQUIRED", getIsRequired());
        json.put("IS_ATTACHED", getIsAttached());
        json.put("IS_PROOF", getIsProof());
        json.put("RULE_SET", getRuleSet());
        json.put("RULE_CONFIG", getRuleConfig());
        json.put("RULE_COMPONENT", getRuleComponent());
        return json;
    }

}
