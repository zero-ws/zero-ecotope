/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public interface IDPaperRef extends VertxPojo, Serializable {

    /**
     * Getter for <code>ZDB.D_PAPER_REF.PAPER_ID</code>. 「paperId」- 考卷ID
     */
    public String getPaperId();

    /**
     * Setter for <code>ZDB.D_PAPER_REF.PAPER_ID</code>. 「paperId」- 考卷ID
     */
    public IDPaperRef setPaperId(String value);

    /**
     * Getter for <code>ZDB.D_PAPER_REF.QUESTION_ID</code>. 「questionId」- 问题ID
     */
    public String getQuestionId();

    /**
     * Setter for <code>ZDB.D_PAPER_REF.QUESTION_ID</code>. 「questionId」- 问题ID
     */
    public IDPaperRef setQuestionId(String value);

    /**
     * Getter for <code>ZDB.D_PAPER_REF.SORT</code>. 「sort」- 问题排序
     */
    public Integer getSort();

    /**
     * Setter for <code>ZDB.D_PAPER_REF.SORT</code>. 「sort」- 问题排序
     */
    public IDPaperRef setSort(Integer value);

    /**
     * Getter for <code>ZDB.D_PAPER_REF.REQUIRED</code>. 「required」- 必答题
     */
    public Boolean getRequired();

    /**
     * Setter for <code>ZDB.D_PAPER_REF.REQUIRED</code>. 「required」- 必答题
     */
    public IDPaperRef setRequired(Boolean value);

    /**
     * Getter for <code>ZDB.D_PAPER_REF.RULE_COMPONENT</code>. 「ruleComponent」-
     * 关联执行组件（扩展用）
     */
    public String getRuleComponent();

    /**
     * Setter for <code>ZDB.D_PAPER_REF.RULE_COMPONENT</code>. 「ruleComponent」-
     * 关联执行组件（扩展用）
     */
    public IDPaperRef setRuleComponent(String value);

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IDPaperRef
     */
    public void from(IDPaperRef from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IDPaperRef
     */
    public <E extends IDPaperRef> E into(E into);

    @Override
    public default IDPaperRef fromJson(io.vertx.core.json.JsonObject json) {
        setOrThrow(this::setPaperId, json::getString, "PAPER_ID", "java.lang.String");
        setOrThrow(this::setQuestionId, json::getString, "QUESTION_ID", "java.lang.String");
        setOrThrow(this::setSort, json::getInteger, "SORT", "java.lang.Integer");
        setOrThrow(this::setRequired, json::getBoolean, "REQUIRED", "java.lang.Boolean");
        setOrThrow(this::setRuleComponent, json::getString, "RULE_COMPONENT", "java.lang.String");
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("PAPER_ID", getPaperId());
        json.put("QUESTION_ID", getQuestionId());
        json.put("SORT", getSort());
        json.put("REQUIRED", getRequired());
        json.put("RULE_COMPONENT", getRuleComponent());
        return json;
    }

}
