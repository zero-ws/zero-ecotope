/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.documentation.domain.tables.interfaces.IDRefer;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DRefer implements VertxPojo, IDRefer {

    private static final long serialVersionUID = 1L;

    private String fromId;
    private String fromType;
    private String toId;
    private String toType;
    private Boolean inline;
    private String comment;
    private String referComponent;

    public DRefer() {
    }

    public DRefer(IDRefer value) {
        this.fromId = value.getFromId();
        this.fromType = value.getFromType();
        this.toId = value.getToId();
        this.toType = value.getToType();
        this.inline = value.getInline();
        this.comment = value.getComment();
        this.referComponent = value.getReferComponent();
    }

    public DRefer(
        String fromId,
        String fromType,
        String toId,
        String toType,
        Boolean inline,
        String comment,
        String referComponent
    ) {
        this.fromId = fromId;
        this.fromType = fromType;
        this.toId = toId;
        this.toType = toType;
        this.inline = inline;
        this.comment = comment;
        this.referComponent = referComponent;
    }

    public DRefer(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.D_REFER.FROM_ID</code>. 「fromId」- 从ID
     */
    @Override
    public String getFromId() {
        return this.fromId;
    }

    /**
     * Setter for <code>ZDB.D_REFER.FROM_ID</code>. 「fromId」- 从ID
     */
    @Override
    public DRefer setFromId(String fromId) {
        this.fromId = fromId;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REFER.FROM_TYPE</code>. 「fromType」- 从类型
     */
    @Override
    public String getFromType() {
        return this.fromType;
    }

    /**
     * Setter for <code>ZDB.D_REFER.FROM_TYPE</code>. 「fromType」- 从类型
     */
    @Override
    public DRefer setFromType(String fromType) {
        this.fromType = fromType;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REFER.TO_ID</code>. 「toId」- 到ID
     */
    @Override
    public String getToId() {
        return this.toId;
    }

    /**
     * Setter for <code>ZDB.D_REFER.TO_ID</code>. 「toId」- 到ID
     */
    @Override
    public DRefer setToId(String toId) {
        this.toId = toId;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REFER.TO_TYPE</code>. 「toType」- 到类型
     */
    @Override
    public String getToType() {
        return this.toType;
    }

    /**
     * Setter for <code>ZDB.D_REFER.TO_TYPE</code>. 「toType」- 到类型
     */
    @Override
    public DRefer setToType(String toType) {
        this.toType = toType;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REFER.INLINE</code>. 「inline」- 是否内联
     */
    @Override
    public Boolean getInline() {
        return this.inline;
    }

    /**
     * Setter for <code>ZDB.D_REFER.INLINE</code>. 「inline」- 是否内联
     */
    @Override
    public DRefer setInline(Boolean inline) {
        this.inline = inline;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REFER.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return this.comment;
    }

    /**
     * Setter for <code>ZDB.D_REFER.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public DRefer setComment(String comment) {
        this.comment = comment;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_REFER.REFER_COMPONENT</code>. 「referComponent」-
     * 关联执行组件（扩展用）
     */
    @Override
    public String getReferComponent() {
        return this.referComponent;
    }

    /**
     * Setter for <code>ZDB.D_REFER.REFER_COMPONENT</code>. 「referComponent」-
     * 关联执行组件（扩展用）
     */
    @Override
    public DRefer setReferComponent(String referComponent) {
        this.referComponent = referComponent;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DRefer other = (DRefer) obj;
        if (this.fromId == null) {
            if (other.fromId != null)
                return false;
        } else if (!this.fromId.equals(other.fromId))
            return false;
        if (this.fromType == null) {
            if (other.fromType != null)
                return false;
        } else if (!this.fromType.equals(other.fromType))
            return false;
        if (this.toId == null) {
            if (other.toId != null)
                return false;
        } else if (!this.toId.equals(other.toId))
            return false;
        if (this.toType == null) {
            if (other.toType != null)
                return false;
        } else if (!this.toType.equals(other.toType))
            return false;
        if (this.inline == null) {
            if (other.inline != null)
                return false;
        } else if (!this.inline.equals(other.inline))
            return false;
        if (this.comment == null) {
            if (other.comment != null)
                return false;
        } else if (!this.comment.equals(other.comment))
            return false;
        if (this.referComponent == null) {
            if (other.referComponent != null)
                return false;
        } else if (!this.referComponent.equals(other.referComponent))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.fromId == null) ? 0 : this.fromId.hashCode());
        result = prime * result + ((this.fromType == null) ? 0 : this.fromType.hashCode());
        result = prime * result + ((this.toId == null) ? 0 : this.toId.hashCode());
        result = prime * result + ((this.toType == null) ? 0 : this.toType.hashCode());
        result = prime * result + ((this.inline == null) ? 0 : this.inline.hashCode());
        result = prime * result + ((this.comment == null) ? 0 : this.comment.hashCode());
        result = prime * result + ((this.referComponent == null) ? 0 : this.referComponent.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DRefer (");

        sb.append(fromId);
        sb.append(", ").append(fromType);
        sb.append(", ").append(toId);
        sb.append(", ").append(toType);
        sb.append(", ").append(inline);
        sb.append(", ").append(comment);
        sb.append(", ").append(referComponent);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDRefer from) {
        setFromId(from.getFromId());
        setFromType(from.getFromType());
        setToId(from.getToId());
        setToType(from.getToType());
        setInline(from.getInline());
        setComment(from.getComment());
        setReferComponent(from.getReferComponent());
    }

    @Override
    public <E extends IDRefer> E into(E into) {
        into.from(this);
        return into;
    }
}
