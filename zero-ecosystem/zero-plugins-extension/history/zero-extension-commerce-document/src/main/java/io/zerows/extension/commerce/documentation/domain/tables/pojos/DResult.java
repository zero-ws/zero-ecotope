/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.documentation.domain.tables.interfaces.IDResult;

import java.math.BigDecimal;
import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class DResult implements VertxPojo, IDResult {

    private static final long serialVersionUID = 1L;

    private String key;
    private String code;
    private String name;
    private String content;
    private String type;
    private Integer sort;
    private BigDecimal score;
    private String scoreMark;
    private String scoreGrade;
    private String scoreContent;
    private String madeName;
    private LocalDateTime madeAt;
    private String modelId;
    private String modelKey;
    private String sigma;
    private String language;
    private Boolean active;
    private String metadata;
    private LocalDateTime createdAt;
    private String createdBy;
    private LocalDateTime updatedAt;
    private String updatedBy;

    public DResult() {
    }

    public DResult(IDResult value) {
        this.key = value.getKey();
        this.code = value.getCode();
        this.name = value.getName();
        this.content = value.getContent();
        this.type = value.getType();
        this.sort = value.getSort();
        this.score = value.getScore();
        this.scoreMark = value.getScoreMark();
        this.scoreGrade = value.getScoreGrade();
        this.scoreContent = value.getScoreContent();
        this.madeName = value.getMadeName();
        this.madeAt = value.getMadeAt();
        this.modelId = value.getModelId();
        this.modelKey = value.getModelKey();
        this.sigma = value.getSigma();
        this.language = value.getLanguage();
        this.active = value.getActive();
        this.metadata = value.getMetadata();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public DResult(
        String key,
        String code,
        String name,
        String content,
        String type,
        Integer sort,
        BigDecimal score,
        String scoreMark,
        String scoreGrade,
        String scoreContent,
        String madeName,
        LocalDateTime madeAt,
        String modelId,
        String modelKey,
        String sigma,
        String language,
        Boolean active,
        String metadata,
        LocalDateTime createdAt,
        String createdBy,
        LocalDateTime updatedAt,
        String updatedBy
    ) {
        this.key = key;
        this.code = code;
        this.name = name;
        this.content = content;
        this.type = type;
        this.sort = sort;
        this.score = score;
        this.scoreMark = scoreMark;
        this.scoreGrade = scoreGrade;
        this.scoreContent = scoreContent;
        this.madeName = madeName;
        this.madeAt = madeAt;
        this.modelId = modelId;
        this.modelKey = modelKey;
        this.sigma = sigma;
        this.language = language;
        this.active = active;
        this.metadata = metadata;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    public DResult(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.D_RESULT.KEY</code>. 「key」- 评价主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.KEY</code>. 「key」- 评价主键
     */
    @Override
    public DResult setKey(String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CODE</code>. 「code」- 评价编号
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CODE</code>. 「code」- 评价编号
     */
    @Override
    public DResult setCode(String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.NAME</code>. 「name」- 评价标题
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.NAME</code>. 「name」- 评价标题
     */
    @Override
    public DResult setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CONTENT</code>. 「content」- 备注内容、评价内容
     */
    @Override
    public String getContent() {
        return this.content;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CONTENT</code>. 「content」- 备注内容、评价内容
     */
    @Override
    public DResult setContent(String content) {
        this.content = content;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.TYPE</code>. 「type」- 评价类型
     */
    @Override
    public String getType() {
        return this.type;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.TYPE</code>. 「type」- 评价类型
     */
    @Override
    public DResult setType(String type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SORT</code>. 「sort」- 评价排序
     */
    @Override
    public Integer getSort() {
        return this.sort;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SORT</code>. 「sort」- 评价排序
     */
    @Override
    public DResult setSort(Integer sort) {
        this.sort = sort;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE</code>. 「score」- 分数
     */
    @Override
    public BigDecimal getScore() {
        return this.score;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE</code>. 「score」- 分数
     */
    @Override
    public DResult setScore(BigDecimal score) {
        this.score = score;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_MARK</code>. 「scoreMark」- 评价对应文字描述，符号
     */
    @Override
    public String getScoreMark() {
        return this.scoreMark;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_MARK</code>. 「scoreMark」- 评价对应文字描述，符号
     */
    @Override
    public DResult setScoreMark(String scoreMark) {
        this.scoreMark = scoreMark;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_GRADE</code>. 「scoreGrade」- 最终评级
     * S/A/B/C/D/E
     */
    @Override
    public String getScoreGrade() {
        return this.scoreGrade;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_GRADE</code>. 「scoreGrade」- 最终评级
     * S/A/B/C/D/E
     */
    @Override
    public DResult setScoreGrade(String scoreGrade) {
        this.scoreGrade = scoreGrade;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_CONTENT</code>. 「scoreContent」-
     * 评价文字，区分于原始内容
     */
    @Override
    public String getScoreContent() {
        return this.scoreContent;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_CONTENT</code>. 「scoreContent」-
     * 评价文字，区分于原始内容
     */
    @Override
    public DResult setScoreContent(String scoreContent) {
        this.scoreContent = scoreContent;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MADE_NAME</code>. 「madeName」- 评价人姓名
     */
    @Override
    public String getMadeName() {
        return this.madeName;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MADE_NAME</code>. 「madeName」- 评价人姓名
     */
    @Override
    public DResult setMadeName(String madeName) {
        this.madeName = madeName;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MADE_AT</code>. 「madeAt」- 评价时间
     */
    @Override
    public LocalDateTime getMadeAt() {
        return this.madeAt;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MADE_AT</code>. 「madeAt」- 评价时间
     */
    @Override
    public DResult setMadeAt(LocalDateTime madeAt) {
        this.madeAt = madeAt;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return this.modelId;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    @Override
    public DResult setModelId(String modelId) {
        this.modelId = modelId;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return this.modelKey;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public DResult setModelKey(String modelKey) {
        this.modelKey = modelKey;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public DResult setSigma(String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public DResult setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public DResult setActive(Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public DResult setMetadata(String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public DResult setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public DResult setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public DResult setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>ZDB.D_RESULT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>ZDB.D_RESULT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public DResult setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final DResult other = (DResult) obj;
        if (this.key == null) {
            if (other.key != null)
                return false;
        } else if (!this.key.equals(other.key))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        } else if (!this.code.equals(other.code))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        } else if (!this.name.equals(other.name))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        } else if (!this.content.equals(other.content))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        } else if (!this.type.equals(other.type))
            return false;
        if (this.sort == null) {
            if (other.sort != null)
                return false;
        } else if (!this.sort.equals(other.sort))
            return false;
        if (this.score == null) {
            if (other.score != null)
                return false;
        } else if (!this.score.equals(other.score))
            return false;
        if (this.scoreMark == null) {
            if (other.scoreMark != null)
                return false;
        } else if (!this.scoreMark.equals(other.scoreMark))
            return false;
        if (this.scoreGrade == null) {
            if (other.scoreGrade != null)
                return false;
        } else if (!this.scoreGrade.equals(other.scoreGrade))
            return false;
        if (this.scoreContent == null) {
            if (other.scoreContent != null)
                return false;
        } else if (!this.scoreContent.equals(other.scoreContent))
            return false;
        if (this.madeName == null) {
            if (other.madeName != null)
                return false;
        } else if (!this.madeName.equals(other.madeName))
            return false;
        if (this.madeAt == null) {
            if (other.madeAt != null)
                return false;
        } else if (!this.madeAt.equals(other.madeAt))
            return false;
        if (this.modelId == null) {
            if (other.modelId != null)
                return false;
        } else if (!this.modelId.equals(other.modelId))
            return false;
        if (this.modelKey == null) {
            if (other.modelKey != null)
                return false;
        } else if (!this.modelKey.equals(other.modelKey))
            return false;
        if (this.sigma == null) {
            if (other.sigma != null)
                return false;
        } else if (!this.sigma.equals(other.sigma))
            return false;
        if (this.language == null) {
            if (other.language != null)
                return false;
        } else if (!this.language.equals(other.language))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        } else if (!this.active.equals(other.active))
            return false;
        if (this.metadata == null) {
            if (other.metadata != null)
                return false;
        } else if (!this.metadata.equals(other.metadata))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        } else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        } else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        } else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        } else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.key == null) ? 0 : this.key.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.sort == null) ? 0 : this.sort.hashCode());
        result = prime * result + ((this.score == null) ? 0 : this.score.hashCode());
        result = prime * result + ((this.scoreMark == null) ? 0 : this.scoreMark.hashCode());
        result = prime * result + ((this.scoreGrade == null) ? 0 : this.scoreGrade.hashCode());
        result = prime * result + ((this.scoreContent == null) ? 0 : this.scoreContent.hashCode());
        result = prime * result + ((this.madeName == null) ? 0 : this.madeName.hashCode());
        result = prime * result + ((this.madeAt == null) ? 0 : this.madeAt.hashCode());
        result = prime * result + ((this.modelId == null) ? 0 : this.modelId.hashCode());
        result = prime * result + ((this.modelKey == null) ? 0 : this.modelKey.hashCode());
        result = prime * result + ((this.sigma == null) ? 0 : this.sigma.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.metadata == null) ? 0 : this.metadata.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("DResult (");

        sb.append(key);
        sb.append(", ").append(code);
        sb.append(", ").append(name);
        sb.append(", ").append(content);
        sb.append(", ").append(type);
        sb.append(", ").append(sort);
        sb.append(", ").append(score);
        sb.append(", ").append(scoreMark);
        sb.append(", ").append(scoreGrade);
        sb.append(", ").append(scoreContent);
        sb.append(", ").append(madeName);
        sb.append(", ").append(madeAt);
        sb.append(", ").append(modelId);
        sb.append(", ").append(modelKey);
        sb.append(", ").append(sigma);
        sb.append(", ").append(language);
        sb.append(", ").append(active);
        sb.append(", ").append(metadata);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IDResult from) {
        setKey(from.getKey());
        setCode(from.getCode());
        setName(from.getName());
        setContent(from.getContent());
        setType(from.getType());
        setSort(from.getSort());
        setScore(from.getScore());
        setScoreMark(from.getScoreMark());
        setScoreGrade(from.getScoreGrade());
        setScoreContent(from.getScoreContent());
        setMadeName(from.getMadeName());
        setMadeAt(from.getMadeAt());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends IDResult> E into(E into) {
        into.from(this);
        return into;
    }
}
