/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain;


import io.zerows.extension.commerce.documentation.domain.tables.*;
import io.zerows.extension.commerce.documentation.domain.tables.records.*;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in ZDB.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DCommentRecord> KEY_D_COMMENT_CODE = Internal.createUniqueKey(DComment.D_COMMENT, DSL.name("KEY_D_COMMENT_CODE"), new TableField[]{DComment.D_COMMENT.CODE, DComment.D_COMMENT.SIGMA}, true);
    public static final UniqueKey<DCommentRecord> KEY_D_COMMENT_PRIMARY = Internal.createUniqueKey(DComment.D_COMMENT, DSL.name("KEY_D_COMMENT_PRIMARY"), new TableField[]{DComment.D_COMMENT.KEY}, true);
    public static final UniqueKey<DDocRecord> KEY_D_DOC_CODE = Internal.createUniqueKey(DDoc.D_DOC, DSL.name("KEY_D_DOC_CODE"), new TableField[]{DDoc.D_DOC.CODE, DDoc.D_DOC.SIGMA, DDoc.D_DOC.VERSION}, true);
    public static final UniqueKey<DDocRecord> KEY_D_DOC_FILE_KEY = Internal.createUniqueKey(DDoc.D_DOC, DSL.name("KEY_D_DOC_FILE_KEY"), new TableField[]{DDoc.D_DOC.FILE_KEY}, true);
    public static final UniqueKey<DDocRecord> KEY_D_DOC_NAME = Internal.createUniqueKey(DDoc.D_DOC, DSL.name("KEY_D_DOC_NAME"), new TableField[]{DDoc.D_DOC.NAME, DDoc.D_DOC.SIGMA, DDoc.D_DOC.VERSION}, true);
    public static final UniqueKey<DDocRecord> KEY_D_DOC_PRIMARY = Internal.createUniqueKey(DDoc.D_DOC, DSL.name("KEY_D_DOC_PRIMARY"), new TableField[]{DDoc.D_DOC.KEY}, true);
    public static final UniqueKey<DDocClauseRecord> KEY_D_DOC_CLAUSE_CODE = Internal.createUniqueKey(DDocClause.D_DOC_CLAUSE, DSL.name("KEY_D_DOC_CLAUSE_CODE"), new TableField[]{DDocClause.D_DOC_CLAUSE.CODE, DDocClause.D_DOC_CLAUSE.SIGMA}, true);
    public static final UniqueKey<DDocClauseRecord> KEY_D_DOC_CLAUSE_PRIMARY = Internal.createUniqueKey(DDocClause.D_DOC_CLAUSE, DSL.name("KEY_D_DOC_CLAUSE_PRIMARY"), new TableField[]{DDocClause.D_DOC_CLAUSE.KEY}, true);
    public static final UniqueKey<DDocSegmentRecord> KEY_D_DOC_SEGMENT_CODE = Internal.createUniqueKey(DDocSegment.D_DOC_SEGMENT, DSL.name("KEY_D_DOC_SEGMENT_CODE"), new TableField[]{DDocSegment.D_DOC_SEGMENT.CODE, DDocSegment.D_DOC_SEGMENT.SIGMA}, true);
    public static final UniqueKey<DDocSegmentRecord> KEY_D_DOC_SEGMENT_NAME = Internal.createUniqueKey(DDocSegment.D_DOC_SEGMENT, DSL.name("KEY_D_DOC_SEGMENT_NAME"), new TableField[]{DDocSegment.D_DOC_SEGMENT.NAME, DDocSegment.D_DOC_SEGMENT.DOC_ID, DDocSegment.D_DOC_SEGMENT.PARENT_ID}, true);
    public static final UniqueKey<DDocSegmentRecord> KEY_D_DOC_SEGMENT_PRIMARY = Internal.createUniqueKey(DDocSegment.D_DOC_SEGMENT, DSL.name("KEY_D_DOC_SEGMENT_PRIMARY"), new TableField[]{DDocSegment.D_DOC_SEGMENT.KEY}, true);
    public static final UniqueKey<DExamRecord> KEY_D_EXAM_CODE = Internal.createUniqueKey(DExam.D_EXAM, DSL.name("KEY_D_EXAM_CODE"), new TableField[]{DExam.D_EXAM.CODE, DExam.D_EXAM.SIGMA}, true);
    public static final UniqueKey<DExamRecord> KEY_D_EXAM_PRIMARY = Internal.createUniqueKey(DExam.D_EXAM, DSL.name("KEY_D_EXAM_PRIMARY"), new TableField[]{DExam.D_EXAM.KEY}, true);
    public static final UniqueKey<DPaperRecord> KEY_D_PAPER_CODE = Internal.createUniqueKey(DPaper.D_PAPER, DSL.name("KEY_D_PAPER_CODE"), new TableField[]{DPaper.D_PAPER.CODE, DPaper.D_PAPER.SIGMA}, true);
    public static final UniqueKey<DPaperRecord> KEY_D_PAPER_NAME = Internal.createUniqueKey(DPaper.D_PAPER, DSL.name("KEY_D_PAPER_NAME"), new TableField[]{DPaper.D_PAPER.NAME, DPaper.D_PAPER.EXAM_ID, DPaper.D_PAPER.VERSION}, true);
    public static final UniqueKey<DPaperRecord> KEY_D_PAPER_PRIMARY = Internal.createUniqueKey(DPaper.D_PAPER, DSL.name("KEY_D_PAPER_PRIMARY"), new TableField[]{DPaper.D_PAPER.KEY}, true);
    public static final UniqueKey<DPaperRefRecord> KEY_D_PAPER_REF_PRIMARY = Internal.createUniqueKey(DPaperRef.D_PAPER_REF, DSL.name("KEY_D_PAPER_REF_PRIMARY"), new TableField[]{DPaperRef.D_PAPER_REF.PAPER_ID, DPaperRef.D_PAPER_REF.QUESTION_ID}, true);
    public static final UniqueKey<DQanswerRecord> KEY_D_QANSWER_CODE = Internal.createUniqueKey(DQanswer.D_QANSWER, DSL.name("KEY_D_QANSWER_CODE"), new TableField[]{DQanswer.D_QANSWER.CODE, DQanswer.D_QANSWER.SIGMA}, true);
    public static final UniqueKey<DQanswerRecord> KEY_D_QANSWER_NAME = Internal.createUniqueKey(DQanswer.D_QANSWER, DSL.name("KEY_D_QANSWER_NAME"), new TableField[]{DQanswer.D_QANSWER.NAME, DQanswer.D_QANSWER.QUESTION_ID}, true);
    public static final UniqueKey<DQanswerRecord> KEY_D_QANSWER_PRIMARY = Internal.createUniqueKey(DQanswer.D_QANSWER, DSL.name("KEY_D_QANSWER_PRIMARY"), new TableField[]{DQanswer.D_QANSWER.KEY}, true);
    public static final UniqueKey<DQruleRecord> KEY_D_QRULE_PRIMARY = Internal.createUniqueKey(DQrule.D_QRULE, DSL.name("KEY_D_QRULE_PRIMARY"), new TableField[]{DQrule.D_QRULE.RULE_SET, DQrule.D_QRULE.REF_ID, DQrule.D_QRULE.TYPE}, true);
    public static final UniqueKey<DQstoreRecord> KEY_D_QSTORE_CODE = Internal.createUniqueKey(DQstore.D_QSTORE, DSL.name("KEY_D_QSTORE_CODE"), new TableField[]{DQstore.D_QSTORE.CODE, DQstore.D_QSTORE.SIGMA, DQstore.D_QSTORE.VERSION}, true);
    public static final UniqueKey<DQstoreRecord> KEY_D_QSTORE_NAME = Internal.createUniqueKey(DQstore.D_QSTORE, DSL.name("KEY_D_QSTORE_NAME"), new TableField[]{DQstore.D_QSTORE.NAME, DQstore.D_QSTORE.SIGMA, DQstore.D_QSTORE.VERSION}, true);
    public static final UniqueKey<DQstoreRecord> KEY_D_QSTORE_PRIMARY = Internal.createUniqueKey(DQstore.D_QSTORE, DSL.name("KEY_D_QSTORE_PRIMARY"), new TableField[]{DQstore.D_QSTORE.KEY}, true);
    public static final UniqueKey<DQuestionRecord> KEY_D_QUESTION_CODE = Internal.createUniqueKey(DQuestion.D_QUESTION, DSL.name("KEY_D_QUESTION_CODE"), new TableField[]{DQuestion.D_QUESTION.CODE, DQuestion.D_QUESTION.SIGMA}, true);
    public static final UniqueKey<DQuestionRecord> KEY_D_QUESTION_PRIMARY = Internal.createUniqueKey(DQuestion.D_QUESTION, DSL.name("KEY_D_QUESTION_PRIMARY"), new TableField[]{DQuestion.D_QUESTION.KEY}, true);
    public static final UniqueKey<DQuestionRecord> KEY_D_QUESTION_STORE_ID = Internal.createUniqueKey(DQuestion.D_QUESTION, DSL.name("KEY_D_QUESTION_STORE_ID"), new TableField[]{DQuestion.D_QUESTION.STORE_ID, DQuestion.D_QUESTION.NAME}, true);
    public static final UniqueKey<DReferRecord> KEY_D_REFER_PRIMARY = Internal.createUniqueKey(DRefer.D_REFER, DSL.name("KEY_D_REFER_PRIMARY"), new TableField[]{DRefer.D_REFER.FROM_ID, DRefer.D_REFER.FROM_TYPE, DRefer.D_REFER.TO_ID, DRefer.D_REFER.TO_TYPE}, true);
    public static final UniqueKey<DReplyRecord> KEY_D_REPLY_CODE = Internal.createUniqueKey(DReply.D_REPLY, DSL.name("KEY_D_REPLY_CODE"), new TableField[]{DReply.D_REPLY.CODE, DReply.D_REPLY.SIGMA}, true);
    public static final UniqueKey<DReplyRecord> KEY_D_REPLY_PRIMARY = Internal.createUniqueKey(DReply.D_REPLY, DSL.name("KEY_D_REPLY_PRIMARY"), new TableField[]{DReply.D_REPLY.KEY}, true);
    public static final UniqueKey<DReplyItemRecord> KEY_D_REPLY_ITEM_PRIMARY = Internal.createUniqueKey(DReplyItem.D_REPLY_ITEM, DSL.name("KEY_D_REPLY_ITEM_PRIMARY"), new TableField[]{DReplyItem.D_REPLY_ITEM.REPLY_ID, DReplyItem.D_REPLY_ITEM.QUESTION_CODE}, true);
    public static final UniqueKey<DResultRecord> KEY_D_RESULT_CODE = Internal.createUniqueKey(DResult.D_RESULT, DSL.name("KEY_D_RESULT_CODE"), new TableField[]{DResult.D_RESULT.CODE, DResult.D_RESULT.SIGMA}, true);
    public static final UniqueKey<DResultRecord> KEY_D_RESULT_PRIMARY = Internal.createUniqueKey(DResult.D_RESULT, DSL.name("KEY_D_RESULT_PRIMARY"), new TableField[]{DResult.D_RESULT.KEY}, true);
}
