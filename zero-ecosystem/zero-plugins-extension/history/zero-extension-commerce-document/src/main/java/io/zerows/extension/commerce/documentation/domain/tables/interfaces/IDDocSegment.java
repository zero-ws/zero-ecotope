/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public interface IDDocSegment extends VertxPojo, Serializable {

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.KEY</code>. 「key」- 文档主键，唯一标识
     */
    public String getKey();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.KEY</code>. 「key」- 文档主键，唯一标识
     */
    public IDDocSegment setKey(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.CODE</code>. 「code」- 章节编号
     */
    public String getCode();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.CODE</code>. 「code」- 章节编号
     */
    public IDDocSegment setCode(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.PREFIX</code>. 「prefix」- 章节前缀
     */
    public String getPrefix();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.PREFIX</code>. 「prefix」- 章节前缀
     */
    public IDDocSegment setPrefix(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.NAME</code>. 「name」- 章节标题
     */
    public String getName();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.NAME</code>. 「name」- 章节标题
     */
    public IDDocSegment setName(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.TITLE</code>. 「title」- 章节标题（理论上 prefix
     * + name）
     */
    public String getTitle();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.TITLE</code>. 「title」- 章节标题（理论上 prefix
     * + name）
     */
    public IDDocSegment setTitle(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.TYPE</code>. 「type」- 章节类型
     */
    public String getType();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.TYPE</code>. 「type」- 章节类型
     */
    public IDDocSegment setType(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.STATUS</code>. 「status」- 状态
     */
    public String getStatus();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.STATUS</code>. 「status」- 状态
     */
    public IDDocSegment setStatus(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.CONTENT</code>. 「content」- 章节内容（带格式）
     */
    public String getContent();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.CONTENT</code>. 「content」- 章节内容（带格式）
     */
    public IDDocSegment setContent(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.CONTENT_TEXT</code>. 「contentText」-
     * 无格式章节内容
     */
    public String getContentText();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.CONTENT_TEXT</code>. 「contentText」-
     * 无格式章节内容
     */
    public IDDocSegment setContentText(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.CONTENT_META</code>. 「contentMeta」-
     * 存储格式
     */
    public String getContentMeta();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.CONTENT_META</code>. 「contentMeta」-
     * 存储格式
     */
    public IDDocSegment setContentMeta(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.SORT</code>. 「sort」- 排序
     */
    public Integer getSort();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.SORT</code>. 「sort」- 排序
     */
    public IDDocSegment setSort(Integer value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.LEVEL</code>. 「level」- 章节层级
     */
    public Integer getLevel();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.LEVEL</code>. 「level」- 章节层级
     */
    public IDDocSegment setLevel(Integer value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.DOC_ID</code>. 「docId」- 章节所属文档ID
     */
    public String getDocId();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.DOC_ID</code>. 「docId」- 章节所属文档ID
     */
    public IDDocSegment setDocId(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.PARENT_ID</code>. 「parentId」- 父章节ID
     */
    public String getParentId();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.PARENT_ID</code>. 「parentId」- 父章节ID
     */
    public IDDocSegment setParentId(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.SIGMA</code>. 「sigma」- 统一标识
     */
    public IDDocSegment setSigma(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IDDocSegment setLanguage(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.ACTIVE</code>. 「active」- 是否启用
     */
    public IDDocSegment setActive(Boolean value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IDDocSegment setMetadata(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IDDocSegment setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IDDocSegment setCreatedBy(String value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IDDocSegment setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.D_DOC_SEGMENT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    /**
     * Setter for <code>ZDB.D_DOC_SEGMENT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IDDocSegment setUpdatedBy(String value);

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IDDocSegment
     */
    public void from(IDDocSegment from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IDDocSegment
     */
    public <E extends IDDocSegment> E into(E into);

    @Override
    public default IDDocSegment fromJson(io.vertx.core.json.JsonObject json) {
        setOrThrow(this::setKey, json::getString, "KEY", "java.lang.String");
        setOrThrow(this::setCode, json::getString, "CODE", "java.lang.String");
        setOrThrow(this::setPrefix, json::getString, "PREFIX", "java.lang.String");
        setOrThrow(this::setName, json::getString, "NAME", "java.lang.String");
        setOrThrow(this::setTitle, json::getString, "TITLE", "java.lang.String");
        setOrThrow(this::setType, json::getString, "TYPE", "java.lang.String");
        setOrThrow(this::setStatus, json::getString, "STATUS", "java.lang.String");
        setOrThrow(this::setContent, json::getString, "CONTENT", "java.lang.String");
        setOrThrow(this::setContentText, json::getString, "CONTENT_TEXT", "java.lang.String");
        setOrThrow(this::setContentMeta, json::getString, "CONTENT_META", "java.lang.String");
        setOrThrow(this::setSort, json::getInteger, "SORT", "java.lang.Integer");
        setOrThrow(this::setLevel, json::getInteger, "LEVEL", "java.lang.Integer");
        setOrThrow(this::setDocId, json::getString, "DOC_ID", "java.lang.String");
        setOrThrow(this::setParentId, json::getString, "PARENT_ID", "java.lang.String");
        setOrThrow(this::setSigma, json::getString, "SIGMA", "java.lang.String");
        setOrThrow(this::setLanguage, json::getString, "LANGUAGE", "java.lang.String");
        setOrThrow(this::setActive, json::getBoolean, "ACTIVE", "java.lang.Boolean");
        setOrThrow(this::setMetadata, json::getString, "METADATA", "java.lang.String");
        setOrThrow(this::setCreatedAt, key -> {
            String s = json.getString(key);
            return s == null ? null : java.time.LocalDateTime.parse(s);
        }, "CREATED_AT", "java.time.LocalDateTime");
        setOrThrow(this::setCreatedBy, json::getString, "CREATED_BY", "java.lang.String");
        setOrThrow(this::setUpdatedAt, key -> {
            String s = json.getString(key);
            return s == null ? null : java.time.LocalDateTime.parse(s);
        }, "UPDATED_AT", "java.time.LocalDateTime");
        setOrThrow(this::setUpdatedBy, json::getString, "UPDATED_BY", "java.lang.String");
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY", getKey());
        json.put("CODE", getCode());
        json.put("PREFIX", getPrefix());
        json.put("NAME", getName());
        json.put("TITLE", getTitle());
        json.put("TYPE", getType());
        json.put("STATUS", getStatus());
        json.put("CONTENT", getContent());
        json.put("CONTENT_TEXT", getContentText());
        json.put("CONTENT_META", getContentMeta());
        json.put("SORT", getSort());
        json.put("LEVEL", getLevel());
        json.put("DOC_ID", getDocId());
        json.put("PARENT_ID", getParentId());
        json.put("SIGMA", getSigma());
        json.put("LANGUAGE", getLanguage());
        json.put("ACTIVE", getActive());
        json.put("METADATA", getMetadata());
        json.put("CREATED_AT", getCreatedAt() == null ? null : getCreatedAt().toString());
        json.put("CREATED_BY", getCreatedBy());
        json.put("UPDATED_AT", getUpdatedAt() == null ? null : getUpdatedAt().toString());
        json.put("UPDATED_BY", getUpdatedBy());
        return json;
    }

}
