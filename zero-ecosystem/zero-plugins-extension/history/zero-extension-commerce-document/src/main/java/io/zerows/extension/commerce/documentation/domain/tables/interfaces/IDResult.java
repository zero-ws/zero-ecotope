/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.documentation.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.math.BigDecimal;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public interface IDResult extends VertxPojo, Serializable {

    /**
     * Getter for <code>ZDB.D_RESULT.KEY</code>. 「key」- 评价主键
     */
    public String getKey();

    /**
     * Setter for <code>ZDB.D_RESULT.KEY</code>. 「key」- 评价主键
     */
    public IDResult setKey(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.CODE</code>. 「code」- 评价编号
     */
    public String getCode();

    /**
     * Setter for <code>ZDB.D_RESULT.CODE</code>. 「code」- 评价编号
     */
    public IDResult setCode(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.NAME</code>. 「name」- 评价标题
     */
    public String getName();

    /**
     * Setter for <code>ZDB.D_RESULT.NAME</code>. 「name」- 评价标题
     */
    public IDResult setName(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.CONTENT</code>. 「content」- 备注内容、评价内容
     */
    public String getContent();

    /**
     * Setter for <code>ZDB.D_RESULT.CONTENT</code>. 「content」- 备注内容、评价内容
     */
    public IDResult setContent(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.TYPE</code>. 「type」- 评价类型
     */
    public String getType();

    /**
     * Setter for <code>ZDB.D_RESULT.TYPE</code>. 「type」- 评价类型
     */
    public IDResult setType(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.SORT</code>. 「sort」- 评价排序
     */
    public Integer getSort();

    /**
     * Setter for <code>ZDB.D_RESULT.SORT</code>. 「sort」- 评价排序
     */
    public IDResult setSort(Integer value);

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE</code>. 「score」- 分数
     */
    public BigDecimal getScore();

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE</code>. 「score」- 分数
     */
    public IDResult setScore(BigDecimal value);

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_MARK</code>. 「scoreMark」- 评价对应文字描述，符号
     */
    public String getScoreMark();

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_MARK</code>. 「scoreMark」- 评价对应文字描述，符号
     */
    public IDResult setScoreMark(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_GRADE</code>. 「scoreGrade」- 最终评级
     * S/A/B/C/D/E
     */
    public String getScoreGrade();

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_GRADE</code>. 「scoreGrade」- 最终评级
     * S/A/B/C/D/E
     */
    public IDResult setScoreGrade(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.SCORE_CONTENT</code>. 「scoreContent」-
     * 评价文字，区分于原始内容
     */
    public String getScoreContent();

    /**
     * Setter for <code>ZDB.D_RESULT.SCORE_CONTENT</code>. 「scoreContent」-
     * 评价文字，区分于原始内容
     */
    public IDResult setScoreContent(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.MADE_NAME</code>. 「madeName」- 评价人姓名
     */
    public String getMadeName();

    /**
     * Setter for <code>ZDB.D_RESULT.MADE_NAME</code>. 「madeName」- 评价人姓名
     */
    public IDResult setMadeName(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.MADE_AT</code>. 「madeAt」- 评价时间
     */
    public LocalDateTime getMadeAt();

    /**
     * Setter for <code>ZDB.D_RESULT.MADE_AT</code>. 「madeAt」- 评价时间
     */
    public IDResult setMadeAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.D_RESULT.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    public String getModelId();

    /**
     * Setter for <code>ZDB.D_RESULT.MODEL_ID</code>. 「modelId」-
     * 关联的模型identifier，用于描述
     */
    public IDResult setModelId(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    public String getModelKey();

    /**
     * Setter for <code>ZDB.D_RESULT.MODEL_KEY</code>. 「modelKey」-
     * 关联的模型记录ID，用于描述哪一个Model中的记录
     */
    public IDResult setModelKey(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>ZDB.D_RESULT.SIGMA</code>. 「sigma」- 统一标识
     */
    public IDResult setSigma(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>ZDB.D_RESULT.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IDResult setLanguage(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>ZDB.D_RESULT.ACTIVE</code>. 「active」- 是否启用
     */
    public IDResult setActive(Boolean value);

    /**
     * Getter for <code>ZDB.D_RESULT.METADATA</code>. 「metadata」- 附加配置数据
     */
    public String getMetadata();

    /**
     * Setter for <code>ZDB.D_RESULT.METADATA</code>. 「metadata」- 附加配置数据
     */
    public IDResult setMetadata(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>ZDB.D_RESULT.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IDResult setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.D_RESULT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>ZDB.D_RESULT.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IDResult setCreatedBy(String value);

    /**
     * Getter for <code>ZDB.D_RESULT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>ZDB.D_RESULT.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IDResult setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.D_RESULT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    /**
     * Setter for <code>ZDB.D_RESULT.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IDResult setUpdatedBy(String value);

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IDResult
     */
    public void from(IDResult from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IDResult
     */
    public <E extends IDResult> E into(E into);

    @Override
    public default IDResult fromJson(io.vertx.core.json.JsonObject json) {
        setOrThrow(this::setKey, json::getString, "KEY", "java.lang.String");
        setOrThrow(this::setCode, json::getString, "CODE", "java.lang.String");
        setOrThrow(this::setName, json::getString, "NAME", "java.lang.String");
        setOrThrow(this::setContent, json::getString, "CONTENT", "java.lang.String");
        setOrThrow(this::setType, json::getString, "TYPE", "java.lang.String");
        setOrThrow(this::setSort, json::getInteger, "SORT", "java.lang.Integer");
        setOrThrow(this::setScore, key -> {
            String s = json.getString(key);
            return s == null ? null : new java.math.BigDecimal(s);
        }, "SCORE", "java.math.BigDecimal");
        setOrThrow(this::setScoreMark, json::getString, "SCORE_MARK", "java.lang.String");
        setOrThrow(this::setScoreGrade, json::getString, "SCORE_GRADE", "java.lang.String");
        setOrThrow(this::setScoreContent, json::getString, "SCORE_CONTENT", "java.lang.String");
        setOrThrow(this::setMadeName, json::getString, "MADE_NAME", "java.lang.String");
        setOrThrow(this::setMadeAt, key -> {
            String s = json.getString(key);
            return s == null ? null : java.time.LocalDateTime.parse(s);
        }, "MADE_AT", "java.time.LocalDateTime");
        setOrThrow(this::setModelId, json::getString, "MODEL_ID", "java.lang.String");
        setOrThrow(this::setModelKey, json::getString, "MODEL_KEY", "java.lang.String");
        setOrThrow(this::setSigma, json::getString, "SIGMA", "java.lang.String");
        setOrThrow(this::setLanguage, json::getString, "LANGUAGE", "java.lang.String");
        setOrThrow(this::setActive, json::getBoolean, "ACTIVE", "java.lang.Boolean");
        setOrThrow(this::setMetadata, json::getString, "METADATA", "java.lang.String");
        setOrThrow(this::setCreatedAt, key -> {
            String s = json.getString(key);
            return s == null ? null : java.time.LocalDateTime.parse(s);
        }, "CREATED_AT", "java.time.LocalDateTime");
        setOrThrow(this::setCreatedBy, json::getString, "CREATED_BY", "java.lang.String");
        setOrThrow(this::setUpdatedAt, key -> {
            String s = json.getString(key);
            return s == null ? null : java.time.LocalDateTime.parse(s);
        }, "UPDATED_AT", "java.time.LocalDateTime");
        setOrThrow(this::setUpdatedBy, json::getString, "UPDATED_BY", "java.lang.String");
        return this;
    }


    @Override
    public default io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("KEY", getKey());
        json.put("CODE", getCode());
        json.put("NAME", getName());
        json.put("CONTENT", getContent());
        json.put("TYPE", getType());
        json.put("SORT", getSort());
        json.put("SCORE", getScore() == null ? null : getScore().toString());
        json.put("SCORE_MARK", getScoreMark());
        json.put("SCORE_GRADE", getScoreGrade());
        json.put("SCORE_CONTENT", getScoreContent());
        json.put("MADE_NAME", getMadeName());
        json.put("MADE_AT", getMadeAt() == null ? null : getMadeAt().toString());
        json.put("MODEL_ID", getModelId());
        json.put("MODEL_KEY", getModelKey());
        json.put("SIGMA", getSigma());
        json.put("LANGUAGE", getLanguage());
        json.put("ACTIVE", getActive());
        json.put("METADATA", getMetadata());
        json.put("CREATED_AT", getCreatedAt() == null ? null : getCreatedAt().toString());
        json.put("CREATED_BY", getCreatedBy());
        json.put("UPDATED_AT", getUpdatedAt() == null ? null : getUpdatedAt().toString());
        json.put("UPDATED_BY", getUpdatedBy());
        return json;
    }

}
