/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.workflow.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.workflow.domain.tables.WTodo;
import io.zerows.extension.runtime.workflow.domain.tables.records.WTodoRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class WTodoDao extends AbstractVertxDAO<WTodoRecord, io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo, String, Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>>, Future<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<WTodoRecord, io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public WTodoDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(WTodo.W_TODO, io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo.class, new JDBCClassicQueryExecutor<WTodoRecord, io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo, String>(configuration, io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>SERIAL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyBySerial(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.SERIAL.in(values));
    }

    /**
     * Find records that have <code>SERIAL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyBySerial(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.SERIAL.in(values), limit);
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByName(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>ICON IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByIcon(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.ICON.in(values));
    }

    /**
     * Find records that have <code>ICON IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByIcon(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ICON.in(values), limit);
    }

    /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByStatus(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.STATUS.in(values));
    }

    /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByStatus(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.STATUS.in(values), limit);
    }

    /**
     * Find records that have <code>TODO_URL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTodoUrl(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TODO_URL.in(values));
    }

    /**
     * Find records that have <code>TODO_URL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTodoUrl(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TODO_URL.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByType(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>EXPIRED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByExpiredAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(WTodo.W_TODO.EXPIRED_AT.in(values));
    }

    /**
     * Find records that have <code>EXPIRED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByExpiredAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.EXPIRED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByModelId(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.MODEL_ID.in(values));
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByModelId(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.MODEL_ID.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByModelKey(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.MODEL_KEY.in(values));
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByModelKey(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.MODEL_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_CATEGORY IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByModelCategory(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.MODEL_CATEGORY.in(values));
    }

    /**
     * Find records that have <code>MODEL_CATEGORY IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByModelCategory(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.MODEL_CATEGORY.in(values), limit);
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByParentId(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.PARENT_ID.in(values));
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByParentId(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.PARENT_ID.in(values), limit);
    }

    /**
     * Find records that have <code>SERIAL_FORK IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyBySerialFork(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.SERIAL_FORK.in(values));
    }

    /**
     * Find records that have <code>SERIAL_FORK IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyBySerialFork(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.SERIAL_FORK.in(values), limit);
    }

    /**
     * Find records that have <code>TRACE_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTraceId(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TRACE_ID.in(values));
    }

    /**
     * Find records that have <code>TRACE_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTraceId(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TRACE_ID.in(values), limit);
    }

    /**
     * Find records that have <code>TRACE_ORDER IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTraceOrder(final Collection<Integer> values) {
        return findManyByCondition(WTodo.W_TODO.TRACE_ORDER.in(values));
    }

    /**
     * Find records that have <code>TRACE_ORDER IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTraceOrder(final Collection<Integer> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TRACE_ORDER.in(values), limit);
    }

    /**
     * Find records that have <code>TASK_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTaskId(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TASK_ID.in(values));
    }

    /**
     * Find records that have <code>TASK_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTaskId(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TASK_ID.in(values), limit);
    }

    /**
     * Find records that have <code>TASK_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTaskKey(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TASK_KEY.in(values));
    }

    /**
     * Find records that have <code>TASK_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByTaskKey(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TASK_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByComment(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.COMMENT.in(values));
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByComment(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.COMMENT.in(values), limit);
    }

    /**
     * Find records that have <code>COMMENT_APPROVAL IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCommentApproval(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.COMMENT_APPROVAL.in(values));
    }

    /**
     * Find records that have <code>COMMENT_APPROVAL IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCommentApproval(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.COMMENT_APPROVAL.in(values), limit);
    }

    /**
     * Find records that have <code>COMMENT_REJECT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCommentReject(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.COMMENT_REJECT.in(values));
    }

    /**
     * Find records that have <code>COMMENT_REJECT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCommentReject(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.COMMENT_REJECT.in(values), limit);
    }

    /**
     * Find records that have <code>TO_LOCATION IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToLocation(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TO_LOCATION.in(values));
    }

    /**
     * Find records that have <code>TO_LOCATION IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToLocation(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TO_LOCATION.in(values), limit);
    }

    /**
     * Find records that have <code>TO_GROUP IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToGroup(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TO_GROUP.in(values));
    }

    /**
     * Find records that have <code>TO_GROUP IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToGroup(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TO_GROUP.in(values), limit);
    }

    /**
     * Find records that have <code>TO_TEAM IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToTeam(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TO_TEAM.in(values));
    }

    /**
     * Find records that have <code>TO_TEAM IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToTeam(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TO_TEAM.in(values), limit);
    }

    /**
     * Find records that have <code>TO_ROLE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToRole(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TO_ROLE.in(values));
    }

    /**
     * Find records that have <code>TO_ROLE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToRole(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TO_ROLE.in(values), limit);
    }

    /**
     * Find records that have <code>TO_USER IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToUser(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TO_USER.in(values));
    }

    /**
     * Find records that have <code>TO_USER IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToUser(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TO_USER.in(values), limit);
    }

    /**
     * Find records that have <code>TO_DEPT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToDept(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.TO_DEPT.in(values));
    }

    /**
     * Find records that have <code>TO_DEPT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByToDept(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.TO_DEPT.in(values), limit);
    }

    /**
     * Find records that have <code>ESCALATE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByEscalate(final Collection<Boolean> values) {
        return findManyByCondition(WTodo.W_TODO.ESCALATE.in(values));
    }

    /**
     * Find records that have <code>ESCALATE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByEscalate(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ESCALATE.in(values), limit);
    }

    /**
     * Find records that have <code>ESCALATE_DATA IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByEscalateData(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.ESCALATE_DATA.in(values));
    }

    /**
     * Find records that have <code>ESCALATE_DATA IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByEscalateData(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ESCALATE_DATA.in(values), limit);
    }

    /**
     * Find records that have <code>ASSIGNED_BY IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAssignedBy(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.ASSIGNED_BY.in(values));
    }

    /**
     * Find records that have <code>ASSIGNED_BY IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAssignedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ASSIGNED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>ASSIGNED_AT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAssignedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(WTodo.W_TODO.ASSIGNED_AT.in(values));
    }

    /**
     * Find records that have <code>ASSIGNED_AT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAssignedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ASSIGNED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>ACCEPTED_BY IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAcceptedBy(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.ACCEPTED_BY.in(values));
    }

    /**
     * Find records that have <code>ACCEPTED_BY IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAcceptedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ACCEPTED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>ACCEPTED_GROUP IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAcceptedGroup(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.ACCEPTED_GROUP.in(values));
    }

    /**
     * Find records that have <code>ACCEPTED_GROUP IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAcceptedGroup(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ACCEPTED_GROUP.in(values), limit);
    }

    /**
     * Find records that have <code>ACCEPTED_AT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAcceptedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(WTodo.W_TODO.ACCEPTED_AT.in(values));
    }

    /**
     * Find records that have <code>ACCEPTED_AT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByAcceptedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ACCEPTED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>FINISHED_BY IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByFinishedBy(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.FINISHED_BY.in(values));
    }

    /**
     * Find records that have <code>FINISHED_BY IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByFinishedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.FINISHED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>FINISHED_AT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByFinishedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(WTodo.W_TODO.FINISHED_AT.in(values));
    }

    /**
     * Find records that have <code>FINISHED_AT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByFinishedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.FINISHED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(WTodo.W_TODO.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(WTodo.W_TODO.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(WTodo.W_TODO.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(WTodo.W_TODO.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(WTodo.W_TODO.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<WTodoRecord, io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<WTodoRecord, io.zerows.extension.runtime.workflow.domain.tables.pojos.WTodo, String>) super.queryExecutor();
    }
}
