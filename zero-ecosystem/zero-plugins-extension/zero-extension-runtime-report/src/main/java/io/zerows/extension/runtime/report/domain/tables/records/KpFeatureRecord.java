/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.report.domain.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.runtime.report.domain.tables.KpFeature;
import io.zerows.extension.runtime.report.domain.tables.interfaces.IKpFeature;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record20;
import org.jooq.Row20;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KpFeatureRecord extends UpdatableRecordImpl<KpFeatureRecord> implements VertxPojo, Record20<String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String>, IKpFeature {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.KP_FEATURE.KEY</code>. 「key」- 特征主键
     */
    @Override
    public KpFeatureRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.KEY</code>. 「key」- 特征主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.NAME</code>. 「name」- 特征名称
     */
    @Override
    public KpFeatureRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.NAME</code>. 「name」- 特征名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.TYPE</code>. 「type」- 特征类型
     */
    @Override
    public KpFeatureRecord setType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.TYPE</code>. 「type」- 特征类型
     */
    @Override
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.STATUS</code>. 「status」- 特征状态
     */
    @Override
    public KpFeatureRecord setStatus(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.STATUS</code>. 「status」- 特征状态
     */
    @Override
    public String getStatus() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.VALUE_PATH</code>. 「valuePath」- 特征名称
     */
    @Override
    public KpFeatureRecord setValuePath(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.VALUE_PATH</code>. 「valuePath」- 特征名称
     */
    @Override
    public String getValuePath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.VALUE_CONFIG</code>. 「valueConfig」- 特征配置
     */
    @Override
    public KpFeatureRecord setValueConfig(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.VALUE_CONFIG</code>. 「valueConfig」- 特征配置
     */
    @Override
    public String getValueConfig() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.VALUE_DISPLAY</code>. 「valueDisplay」-
     * 特征显示名称
     */
    @Override
    public KpFeatureRecord setValueDisplay(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.VALUE_DISPLAY</code>. 「valueDisplay」-
     * 特征显示名称
     */
    @Override
    public String getValueDisplay() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.IN_CONFIG</code>. 「inConfig」- 特殊输出配置
     */
    @Override
    public KpFeatureRecord setInConfig(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.IN_CONFIG</code>. 「inConfig」- 特殊输出配置
     */
    @Override
    public String getInConfig() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.IN_COMPONENT</code>. 「inComponent」-
     * 特殊输出组件
     */
    @Override
    public KpFeatureRecord setInComponent(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.IN_COMPONENT</code>. 「inComponent」-
     * 特殊输出组件
     */
    @Override
    public String getInComponent() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.OUT_CONFIG</code>. 「outConfig」- 特殊输出配置
     */
    @Override
    public KpFeatureRecord setOutConfig(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.OUT_CONFIG</code>. 「outConfig」- 特殊输出配置
     */
    @Override
    public String getOutConfig() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.OUT_COMPONENT</code>. 「outComponent」-
     * 特殊输出组件
     */
    @Override
    public KpFeatureRecord setOutComponent(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.OUT_COMPONENT</code>. 「outComponent」-
     * 特殊输出组件
     */
    @Override
    public String getOutComponent() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.REPORT_ID</code>. 「reportId」- 关联报表ID
     */
    @Override
    public KpFeatureRecord setReportId(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.REPORT_ID</code>. 「reportId」- 关联报表ID
     */
    @Override
    public String getReportId() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public KpFeatureRecord setActive(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public KpFeatureRecord setSigma(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public KpFeatureRecord setMetadata(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public KpFeatureRecord setLanguage(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public KpFeatureRecord setCreatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public KpFeatureRecord setCreatedBy(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public KpFeatureRecord setUpdatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>ZDB.KP_FEATURE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public KpFeatureRecord setUpdatedBy(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_FEATURE.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(19);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record20 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row20) super.fieldsRow();
    }

    @Override
    public Row20<String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, String, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row20) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return KpFeature.KP_FEATURE.KEY;
    }

    @Override
    public Field<String> field2() {
        return KpFeature.KP_FEATURE.NAME;
    }

    @Override
    public Field<String> field3() {
        return KpFeature.KP_FEATURE.TYPE;
    }

    @Override
    public Field<String> field4() {
        return KpFeature.KP_FEATURE.STATUS;
    }

    @Override
    public Field<String> field5() {
        return KpFeature.KP_FEATURE.VALUE_PATH;
    }

    @Override
    public Field<String> field6() {
        return KpFeature.KP_FEATURE.VALUE_CONFIG;
    }

    @Override
    public Field<String> field7() {
        return KpFeature.KP_FEATURE.VALUE_DISPLAY;
    }

    @Override
    public Field<String> field8() {
        return KpFeature.KP_FEATURE.IN_CONFIG;
    }

    @Override
    public Field<String> field9() {
        return KpFeature.KP_FEATURE.IN_COMPONENT;
    }

    @Override
    public Field<String> field10() {
        return KpFeature.KP_FEATURE.OUT_CONFIG;
    }

    @Override
    public Field<String> field11() {
        return KpFeature.KP_FEATURE.OUT_COMPONENT;
    }

    @Override
    public Field<String> field12() {
        return KpFeature.KP_FEATURE.REPORT_ID;
    }

    @Override
    public Field<Boolean> field13() {
        return KpFeature.KP_FEATURE.ACTIVE;
    }

    @Override
    public Field<String> field14() {
        return KpFeature.KP_FEATURE.SIGMA;
    }

    @Override
    public Field<String> field15() {
        return KpFeature.KP_FEATURE.METADATA;
    }

    @Override
    public Field<String> field16() {
        return KpFeature.KP_FEATURE.LANGUAGE;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return KpFeature.KP_FEATURE.CREATED_AT;
    }

    @Override
    public Field<String> field18() {
        return KpFeature.KP_FEATURE.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return KpFeature.KP_FEATURE.UPDATED_AT;
    }

    @Override
    public Field<String> field20() {
        return KpFeature.KP_FEATURE.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getStatus();
    }

    @Override
    public String component5() {
        return getValuePath();
    }

    @Override
    public String component6() {
        return getValueConfig();
    }

    @Override
    public String component7() {
        return getValueDisplay();
    }

    @Override
    public String component8() {
        return getInConfig();
    }

    @Override
    public String component9() {
        return getInComponent();
    }

    @Override
    public String component10() {
        return getOutConfig();
    }

    @Override
    public String component11() {
        return getOutComponent();
    }

    @Override
    public String component12() {
        return getReportId();
    }

    @Override
    public Boolean component13() {
        return getActive();
    }

    @Override
    public String component14() {
        return getSigma();
    }

    @Override
    public String component15() {
        return getMetadata();
    }

    @Override
    public String component16() {
        return getLanguage();
    }

    @Override
    public LocalDateTime component17() {
        return getCreatedAt();
    }

    @Override
    public String component18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component19() {
        return getUpdatedAt();
    }

    @Override
    public String component20() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getStatus();
    }

    @Override
    public String value5() {
        return getValuePath();
    }

    @Override
    public String value6() {
        return getValueConfig();
    }

    @Override
    public String value7() {
        return getValueDisplay();
    }

    @Override
    public String value8() {
        return getInConfig();
    }

    @Override
    public String value9() {
        return getInComponent();
    }

    @Override
    public String value10() {
        return getOutConfig();
    }

    @Override
    public String value11() {
        return getOutComponent();
    }

    @Override
    public String value12() {
        return getReportId();
    }

    @Override
    public Boolean value13() {
        return getActive();
    }

    @Override
    public String value14() {
        return getSigma();
    }

    @Override
    public String value15() {
        return getMetadata();
    }

    @Override
    public String value16() {
        return getLanguage();
    }

    @Override
    public LocalDateTime value17() {
        return getCreatedAt();
    }

    @Override
    public String value18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value19() {
        return getUpdatedAt();
    }

    @Override
    public String value20() {
        return getUpdatedBy();
    }

    @Override
    public KpFeatureRecord value1(String value) {
        setKey(value);
        return this;
    }

    @Override
    public KpFeatureRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public KpFeatureRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public KpFeatureRecord value4(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public KpFeatureRecord value5(String value) {
        setValuePath(value);
        return this;
    }

    @Override
    public KpFeatureRecord value6(String value) {
        setValueConfig(value);
        return this;
    }

    @Override
    public KpFeatureRecord value7(String value) {
        setValueDisplay(value);
        return this;
    }

    @Override
    public KpFeatureRecord value8(String value) {
        setInConfig(value);
        return this;
    }

    @Override
    public KpFeatureRecord value9(String value) {
        setInComponent(value);
        return this;
    }

    @Override
    public KpFeatureRecord value10(String value) {
        setOutConfig(value);
        return this;
    }

    @Override
    public KpFeatureRecord value11(String value) {
        setOutComponent(value);
        return this;
    }

    @Override
    public KpFeatureRecord value12(String value) {
        setReportId(value);
        return this;
    }

    @Override
    public KpFeatureRecord value13(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public KpFeatureRecord value14(String value) {
        setSigma(value);
        return this;
    }

    @Override
    public KpFeatureRecord value15(String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public KpFeatureRecord value16(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public KpFeatureRecord value17(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public KpFeatureRecord value18(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public KpFeatureRecord value19(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public KpFeatureRecord value20(String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public KpFeatureRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, String value11, String value12, Boolean value13, String value14, String value15, String value16, LocalDateTime value17, String value18, LocalDateTime value19, String value20) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IKpFeature from) {
        setKey(from.getKey());
        setName(from.getName());
        setType(from.getType());
        setStatus(from.getStatus());
        setValuePath(from.getValuePath());
        setValueConfig(from.getValueConfig());
        setValueDisplay(from.getValueDisplay());
        setInConfig(from.getInConfig());
        setInComponent(from.getInComponent());
        setOutConfig(from.getOutConfig());
        setOutComponent(from.getOutComponent());
        setReportId(from.getReportId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IKpFeature> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KpFeatureRecord
     */
    public KpFeatureRecord() {
        super(KpFeature.KP_FEATURE);
    }

    /**
     * Create a detached, initialised KpFeatureRecord
     */
    public KpFeatureRecord(String key, String name, String type, String status, String valuePath, String valueConfig, String valueDisplay, String inConfig, String inComponent, String outConfig, String outComponent, String reportId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(KpFeature.KP_FEATURE);

        setKey(key);
        setName(name);
        setType(type);
        setStatus(status);
        setValuePath(valuePath);
        setValueConfig(valueConfig);
        setValueDisplay(valueDisplay);
        setInConfig(inConfig);
        setInComponent(inComponent);
        setOutConfig(outConfig);
        setOutComponent(outComponent);
        setReportId(reportId);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised KpFeatureRecord
     */
    public KpFeatureRecord(io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature value) {
        super(KpFeature.KP_FEATURE);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setType(value.getType());
            setStatus(value.getStatus());
            setValuePath(value.getValuePath());
            setValueConfig(value.getValueConfig());
            setValueDisplay(value.getValueDisplay());
            setInConfig(value.getInConfig());
            setInComponent(value.getInComponent());
            setOutConfig(value.getOutConfig());
            setOutComponent(value.getOutComponent());
            setReportId(value.getReportId());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

        public KpFeatureRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
