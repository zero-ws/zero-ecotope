/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.report.domain.tables.records;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.runtime.report.domain.tables.KpReportInstance;
import io.zerows.extension.runtime.report.domain.tables.interfaces.IKpReportInstance;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KpReportInstanceRecord extends UpdatableRecordImpl<KpReportInstanceRecord> implements VertxPojo, IKpReportInstance {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.KEY</code>. 「key」- 报表主键
     */
    @Override
    public KpReportInstanceRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.KEY</code>. 「key」- 报表主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.NAME</code>. 「name」- 报表名称
     */
    @Override
    public KpReportInstanceRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.NAME</code>. 「name」- 报表名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.STATUS</code>. 「status」- 报表状态
     */
    @Override
    public KpReportInstanceRecord setStatus(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.STATUS</code>. 「status」- 报表状态
     */
    @Override
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.TYPE</code>. 「type」- 报表类型
     */
    @Override
    public KpReportInstanceRecord setType(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.TYPE</code>. 「type」- 报表类型
     */
    @Override
    public String getType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.TITLE</code>. 「title」- 报表标题
     */
    @Override
    public KpReportInstanceRecord setTitle(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.TITLE</code>. 「title」- 报表标题
     */
    @Override
    public String getTitle() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.SUBTITLE</code>. 「subtitle」- 副标题
     */
    @Override
    public KpReportInstanceRecord setSubtitle(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.SUBTITLE</code>. 「subtitle」- 副标题
     */
    @Override
    public String getSubtitle() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.EXTRA</code>. 「extra」- 额外信息
     */
    @Override
    public KpReportInstanceRecord setExtra(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.EXTRA</code>. 「extra」- 额外信息
     */
    @Override
    public String getExtra() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.DESCRIPTION</code>.
     * 「description」- 报表描述
     */
    @Override
    public KpReportInstanceRecord setDescription(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.DESCRIPTION</code>.
     * 「description」- 报表描述
     */
    @Override
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.MODE_EXPR</code>. 「modeExpr」-
     * 表达式（和 type 绑定）
     */
    @Override
    public KpReportInstanceRecord setModeExpr(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.MODE_EXPR</code>. 「modeExpr」-
     * 表达式（和 type 绑定）
     */
    @Override
    public String getModeExpr() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_ID</code>. 「reportId」-
     * 关联报表ID
     */
    @Override
    public KpReportInstanceRecord setReportId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_ID</code>. 「reportId」-
     * 关联报表ID
     */
    @Override
    public String getReportId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_CONTENT</code>.
     * 「reportContent」- 报表内容
     */
    @Override
    public KpReportInstanceRecord setReportContent(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_CONTENT</code>.
     * 「reportContent」- 报表内容
     */
    @Override
    public String getReportContent() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_DATA</code>. 「reportData」-
     * 报表最终数据
     */
    @Override
    public KpReportInstanceRecord setReportData(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_DATA</code>. 「reportData」-
     * 报表最终数据
     */
    @Override
    public String getReportData() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_BY</code>. 「reportBy」- 报表人
     */
    @Override
    public KpReportInstanceRecord setReportBy(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_BY</code>. 「reportBy」- 报表人
     */
    @Override
    public String getReportBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_AT</code>. 「reportAt」-
     * 报表生成时间
     */
    @Override
    public KpReportInstanceRecord setReportAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REPORT_AT</code>. 「reportAt」-
     * 报表生成时间
     */
    @Override
    public LocalDateTime getReportAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REF_TYPE</code>. 「refType」- 关联类型
     */
    @Override
    public KpReportInstanceRecord setRefType(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REF_TYPE</code>. 「refType」- 关联类型
     */
    @Override
    public String getRefType() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.REF_ID</code>. 「refId」- 关联ID
     */
    @Override
    public KpReportInstanceRecord setRefId(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.REF_ID</code>. 「refId」- 关联ID
     */
    @Override
    public String getRefId() {
        return (String) get(15);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public KpReportInstanceRecord setActive(Boolean value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(16);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public KpReportInstanceRecord setSigma(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public KpReportInstanceRecord setMetadata(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(18);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public KpReportInstanceRecord setLanguage(String value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.LANGUAGE</code>. 「language」-
     * 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(19);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public KpReportInstanceRecord setCreatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_AT</code>. 「createdAt」-
     * 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public KpReportInstanceRecord setCreatedBy(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.CREATED_BY</code>. 「createdBy」-
     * 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(21);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public KpReportInstanceRecord setUpdatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_AT</code>. 「updatedAt」-
     * 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public KpReportInstanceRecord setUpdatedBy(String value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.KP_REPORT_INSTANCE.UPDATED_BY</code>. 「updatedBy」-
     * 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(23);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IKpReportInstance from) {
        setKey(from.getKey());
        setName(from.getName());
        setStatus(from.getStatus());
        setType(from.getType());
        setTitle(from.getTitle());
        setSubtitle(from.getSubtitle());
        setExtra(from.getExtra());
        setDescription(from.getDescription());
        setModeExpr(from.getModeExpr());
        setReportId(from.getReportId());
        setReportContent(from.getReportContent());
        setReportData(from.getReportData());
        setReportBy(from.getReportBy());
        setReportAt(from.getReportAt());
        setRefType(from.getRefType());
        setRefId(from.getRefId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IKpReportInstance> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached KpReportInstanceRecord
     */
    public KpReportInstanceRecord() {
        super(KpReportInstance.KP_REPORT_INSTANCE);
    }

    /**
     * Create a detached, initialised KpReportInstanceRecord
     */
    public KpReportInstanceRecord(String key, String name, String status, String type, String title, String subtitle, String extra, String description, String modeExpr, String reportId, String reportContent, String reportData, String reportBy, LocalDateTime reportAt, String refType, String refId, Boolean active, String sigma, String metadata, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(KpReportInstance.KP_REPORT_INSTANCE);

        setKey(key);
        setName(name);
        setStatus(status);
        setType(type);
        setTitle(title);
        setSubtitle(subtitle);
        setExtra(extra);
        setDescription(description);
        setModeExpr(modeExpr);
        setReportId(reportId);
        setReportContent(reportContent);
        setReportData(reportData);
        setReportBy(reportBy);
        setReportAt(reportAt);
        setRefType(refType);
        setRefId(refId);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised KpReportInstanceRecord
     */
    public KpReportInstanceRecord(io.zerows.extension.runtime.report.domain.tables.pojos.KpReportInstance value) {
        super(KpReportInstance.KP_REPORT_INSTANCE);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setStatus(value.getStatus());
            setType(value.getType());
            setTitle(value.getTitle());
            setSubtitle(value.getSubtitle());
            setExtra(value.getExtra());
            setDescription(value.getDescription());
            setModeExpr(value.getModeExpr());
            setReportId(value.getReportId());
            setReportContent(value.getReportContent());
            setReportData(value.getReportData());
            setReportBy(value.getReportBy());
            setReportAt(value.getReportAt());
            setRefType(value.getRefType());
            setRefId(value.getRefId());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

        public KpReportInstanceRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
