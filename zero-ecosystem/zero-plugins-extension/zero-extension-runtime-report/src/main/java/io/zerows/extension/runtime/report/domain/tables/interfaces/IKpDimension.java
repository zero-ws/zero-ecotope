/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.report.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;


import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IKpDimension extends VertxPojo, Serializable {

    /**
     * Setter for <code>ZDB.KP_DIMENSION.KEY</code>. 「key」- 维度主键
     */
    public IKpDimension setKey(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.KEY</code>. 「key」- 维度主键
     */
    public String getKey();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.NAME</code>. 「name」- 维度名称
     */
    public IKpDimension setName(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.NAME</code>. 「name」- 维度名称
     */
    public String getName();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.CODE</code>. 「code」- 维度代码
     */
    public IKpDimension setCode(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.CODE</code>. 「code」- 维度代码
     */
    public String getCode();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.TYPE</code>. 「type」- 维度类型
     */
    public IKpDimension setType(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.TYPE</code>. 「type」- 维度类型
     */
    public String getType();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.STATUS</code>. 「status」- 维度状态
     */
    public IKpDimension setStatus(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.STATUS</code>. 「status」- 维度状态
     */
    public String getStatus();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.DATA_SET_ID</code>. 「dataSetId」- 数据源ID
     */
    public IKpDimension setDataSetId(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.DATA_SET_ID</code>. 「dataSetId」- 数据源ID
     */
    public String getDataSetId();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.DATA_QUERY</code>. 「dataQuery」- 数据查询配置
     */
    public IKpDimension setDataQuery(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.DATA_QUERY</code>. 「dataQuery」- 数据查询配置
     */
    public String getDataQuery();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.DATA_SORT</code>. 「dataSort」- 排序维度处理
     */
    public IKpDimension setDataSort(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.DATA_SORT</code>. 「dataSort」- 排序维度处理
     */
    public String getDataSort();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.DATA_GROUP</code>. 「dataGroup」- 分组维度处理
     */
    public IKpDimension setDataGroup(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.DATA_GROUP</code>. 「dataGroup」- 分组维度处理
     */
    public String getDataGroup();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.DATA_OUTPUT</code>. 「dataOutput」-
     * 输出专用配置
     */
    public IKpDimension setDataOutput(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.DATA_OUTPUT</code>. 「dataOutput」-
     * 输出专用配置
     */
    public String getDataOutput();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.DATA_FIELD</code>. 「dataField」-
     * 当前报表对应字段
     */
    public IKpDimension setDataField(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.DATA_FIELD</code>. 「dataField」-
     * 当前报表对应字段
     */
    public String getDataField();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.CHART_TYPE</code>. 「chartType」- 图表类型
     */
    public IKpDimension setChartType(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.CHART_TYPE</code>. 「chartType」- 图表类型
     */
    public String getChartType();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.CHART_CONFIG</code>. 「chartConfig」-
     * 若当前报表是图表，则使用此配置
     */
    public IKpDimension setChartConfig(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.CHART_CONFIG</code>. 「chartConfig」-
     * 若当前报表是图表，则使用此配置
     */
    public String getChartConfig();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.REPORT_ID</code>. 「reportId」- 关联报表ID
     */
    public IKpDimension setReportId(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.REPORT_ID</code>. 「reportId」- 关联报表ID
     */
    public String getReportId();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.ACTIVE</code>. 「active」- 是否启用
     */
    public IKpDimension setActive(Boolean value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.SIGMA</code>. 「sigma」- 统一标识
     */
    public IKpDimension setSigma(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.METADATA</code>. 「metadata」- 附加配置
     */
    public IKpDimension setMetadata(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IKpDimension setLanguage(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IKpDimension setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IKpDimension setCreatedBy(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IKpDimension setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>ZDB.KP_DIMENSION.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IKpDimension setUpdatedBy(String value);

    /**
     * Getter for <code>ZDB.KP_DIMENSION.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IKpDimension
     */
    public void from(IKpDimension from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IKpDimension
     */
    public <E extends IKpDimension> E into(E into);

        @Override
        public default IKpDimension fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setName,json::getString,"NAME","java.lang.String");
                setOrThrow(this::setCode,json::getString,"CODE","java.lang.String");
                setOrThrow(this::setType,json::getString,"TYPE","java.lang.String");
                setOrThrow(this::setStatus,json::getString,"STATUS","java.lang.String");
                setOrThrow(this::setDataSetId,json::getString,"DATA_SET_ID","java.lang.String");
                setOrThrow(this::setDataQuery,json::getString,"DATA_QUERY","java.lang.String");
                setOrThrow(this::setDataSort,json::getString,"DATA_SORT","java.lang.String");
                setOrThrow(this::setDataGroup,json::getString,"DATA_GROUP","java.lang.String");
                setOrThrow(this::setDataOutput,json::getString,"DATA_OUTPUT","java.lang.String");
                setOrThrow(this::setDataField,json::getString,"DATA_FIELD","java.lang.String");
                setOrThrow(this::setChartType,json::getString,"CHART_TYPE","java.lang.String");
                setOrThrow(this::setChartConfig,json::getString,"CHART_CONFIG","java.lang.String");
                setOrThrow(this::setReportId,json::getString,"REPORT_ID","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("NAME",getName());
                json.put("CODE",getCode());
                json.put("TYPE",getType());
                json.put("STATUS",getStatus());
                json.put("DATA_SET_ID",getDataSetId());
                json.put("DATA_QUERY",getDataQuery());
                json.put("DATA_SORT",getDataSort());
                json.put("DATA_GROUP",getDataGroup());
                json.put("DATA_OUTPUT",getDataOutput());
                json.put("DATA_FIELD",getDataField());
                json.put("CHART_TYPE",getChartType());
                json.put("CHART_CONFIG",getChartConfig());
                json.put("REPORT_ID",getReportId());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
