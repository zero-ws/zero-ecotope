/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.report.domain.tables.daos;


import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.report.domain.tables.KpFeature;
import io.zerows.extension.runtime.report.domain.tables.records.KpFeatureRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KpFeatureDao extends AbstractVertxDAO<KpFeatureRecord, io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature, String, Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>>, Future<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<KpFeatureRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public KpFeatureDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(KpFeature.KP_FEATURE, io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature.class, new JDBCClassicQueryExecutor<KpFeatureRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature,String>(configuration,io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature.class,vertx));
        }

        @Override
        protected String getId(io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByName(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.NAME.in(values));
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByName(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.NAME.in(values),limit);
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByType(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.TYPE.in(values));
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByType(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.TYPE.in(values),limit);
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByStatus(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.STATUS.in(values));
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByStatus(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.STATUS.in(values),limit);
        }

        /**
     * Find records that have <code>VALUE_PATH IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByValuePath(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.VALUE_PATH.in(values));
        }

        /**
     * Find records that have <code>VALUE_PATH IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByValuePath(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.VALUE_PATH.in(values),limit);
        }

        /**
     * Find records that have <code>VALUE_CONFIG IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByValueConfig(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.VALUE_CONFIG.in(values));
        }

        /**
     * Find records that have <code>VALUE_CONFIG IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByValueConfig(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.VALUE_CONFIG.in(values),limit);
        }

        /**
     * Find records that have <code>VALUE_DISPLAY IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByValueDisplay(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.VALUE_DISPLAY.in(values));
        }

        /**
     * Find records that have <code>VALUE_DISPLAY IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByValueDisplay(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.VALUE_DISPLAY.in(values),limit);
        }

        /**
     * Find records that have <code>IN_CONFIG IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByInConfig(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.IN_CONFIG.in(values));
        }

        /**
     * Find records that have <code>IN_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByInConfig(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.IN_CONFIG.in(values),limit);
        }

        /**
     * Find records that have <code>IN_COMPONENT IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByInComponent(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.IN_COMPONENT.in(values));
        }

        /**
     * Find records that have <code>IN_COMPONENT IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByInComponent(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.IN_COMPONENT.in(values),limit);
        }

        /**
     * Find records that have <code>OUT_CONFIG IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByOutConfig(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.OUT_CONFIG.in(values));
        }

        /**
     * Find records that have <code>OUT_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByOutConfig(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.OUT_CONFIG.in(values),limit);
        }

        /**
     * Find records that have <code>OUT_COMPONENT IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByOutComponent(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.OUT_COMPONENT.in(values));
        }

        /**
     * Find records that have <code>OUT_COMPONENT IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByOutComponent(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.OUT_COMPONENT.in(values),limit);
        }

        /**
     * Find records that have <code>REPORT_ID IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByReportId(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.REPORT_ID.in(values));
        }

        /**
     * Find records that have <code>REPORT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByReportId(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.REPORT_ID.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(KpFeature.KP_FEATURE.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(KpFeature.KP_FEATURE.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<KpFeatureRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<KpFeatureRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpFeature,String>) super.queryExecutor();
        }
}
