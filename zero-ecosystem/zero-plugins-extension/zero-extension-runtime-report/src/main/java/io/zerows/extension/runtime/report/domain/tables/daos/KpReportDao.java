/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.report.domain.tables.daos;


import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.report.domain.tables.KpReport;
import io.zerows.extension.runtime.report.domain.tables.records.KpReportRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class KpReportDao extends AbstractVertxDAO<KpReportRecord, io.zerows.extension.runtime.report.domain.tables.pojos.KpReport, String, Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>>, Future<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<KpReportRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpReport,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public KpReportDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(KpReport.KP_REPORT, io.zerows.extension.runtime.report.domain.tables.pojos.KpReport.class, new JDBCClassicQueryExecutor<KpReportRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpReport,String>(configuration,io.zerows.extension.runtime.report.domain.tables.pojos.KpReport.class,vertx));
        }

        @Override
        protected String getId(io.zerows.extension.runtime.report.domain.tables.pojos.KpReport object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByName(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.NAME.in(values));
        }

        /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByName(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.NAME.in(values),limit);
        }

        /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByCode(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.CODE.in(values));
        }

        /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByCode(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.CODE.in(values),limit);
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByStatus(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.STATUS.in(values));
        }

        /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByStatus(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.STATUS.in(values),limit);
        }

        /**
     * Find records that have <code>TITLE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByTitle(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.TITLE.in(values));
        }

        /**
     * Find records that have <code>TITLE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByTitle(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.TITLE.in(values),limit);
        }

        /**
     * Find records that have <code>REPORT_PARAM IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportParam(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_PARAM.in(values));
        }

        /**
     * Find records that have <code>REPORT_PARAM IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportParam(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_PARAM.in(values),limit);
        }

        /**
     * Find records that have <code>REPORT_CONFIG IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportConfig(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_CONFIG.in(values));
        }

        /**
     * Find records that have <code>REPORT_CONFIG IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportConfig(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_CONFIG.in(values),limit);
        }

        /**
     * Find records that have <code>REPORT_BY IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportBy(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_BY.in(values));
        }

        /**
     * Find records that have <code>REPORT_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportBy(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_BY.in(values),limit);
        }

        /**
     * Find records that have <code>REPORT_AT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportAt(Collection<LocalDateTime> values) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_AT.in(values));
        }

        /**
     * Find records that have <code>REPORT_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByReportAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.REPORT_AT.in(values),limit);
        }

        /**
     * Find records that have <code>DATA_SET_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByDataSetId(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.DATA_SET_ID.in(values));
        }

        /**
     * Find records that have <code>DATA_SET_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByDataSetId(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.DATA_SET_ID.in(values),limit);
        }

        /**
     * Find records that have <code>DATA_TPL_ID IN (values)</code>
     * asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByDataTplId(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.DATA_TPL_ID.in(values));
        }

        /**
     * Find records that have <code>DATA_TPL_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByDataTplId(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.DATA_TPL_ID.in(values),limit);
        }

        /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByAppId(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.APP_ID.in(values));
        }

        /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByAppId(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.APP_ID.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(KpReport.KP_REPORT.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(KpReport.KP_REPORT.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(KpReport.KP_REPORT.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(KpReport.KP_REPORT.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.report.domain.tables.pojos.KpReport>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(KpReport.KP_REPORT.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<KpReportRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpReport,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<KpReportRecord,io.zerows.extension.runtime.report.domain.tables.pojos.KpReport,String>) super.queryExecutor();
        }
}
