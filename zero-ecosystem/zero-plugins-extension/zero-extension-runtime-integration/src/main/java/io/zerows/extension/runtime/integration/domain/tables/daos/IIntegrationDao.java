/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.integration.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.integration.domain.tables.IIntegration;
import io.zerows.extension.runtime.integration.domain.tables.records.IIntegrationRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class IIntegrationDao extends AbstractVertxDAO<IIntegrationRecord, io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration, String, Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>>, Future<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<IIntegrationRecord, io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public IIntegrationDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(IIntegration.I_INTEGRATION, io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration.class, new JDBCClassicQueryExecutor<IIntegrationRecord, io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration, String>(configuration, io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByName(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByType(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>IP_V4 IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByIpV4(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.IP_V4.in(values));
    }

    /**
     * Find records that have <code>IP_V4 IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByIpV4(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.IP_V4.in(values), limit);
    }

    /**
     * Find records that have <code>IP_V6 IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByIpV6(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.IP_V6.in(values));
    }

    /**
     * Find records that have <code>IP_V6 IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByIpV6(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.IP_V6.in(values), limit);
    }

    /**
     * Find records that have <code>HOSTNAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByHostname(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.HOSTNAME.in(values));
    }

    /**
     * Find records that have <code>HOSTNAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByHostname(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.HOSTNAME.in(values), limit);
    }

    /**
     * Find records that have <code>PORT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPort(final Collection<Integer> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PORT.in(values));
    }

    /**
     * Find records that have <code>PORT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPort(final Collection<Integer> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PORT.in(values), limit);
    }

    /**
     * Find records that have <code>PROTOCOL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByProtocol(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PROTOCOL.in(values));
    }

    /**
     * Find records that have <code>PROTOCOL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByProtocol(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PROTOCOL.in(values), limit);
    }

    /**
     * Find records that have <code>SECURE_PORT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyBySecurePort(final Collection<Integer> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.SECURE_PORT.in(values));
    }

    /**
     * Find records that have <code>SECURE_PORT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyBySecurePort(final Collection<Integer> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.SECURE_PORT.in(values), limit);
    }

    /**
     * Find records that have <code>SECURE_PROTOCOL IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyBySecureProtocol(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.SECURE_PROTOCOL.in(values));
    }

    /**
     * Find records that have <code>SECURE_PROTOCOL IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyBySecureProtocol(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.SECURE_PROTOCOL.in(values), limit);
    }

    /**
     * Find records that have <code>ENDPOINT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByEndpoint(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.ENDPOINT.in(values));
    }

    /**
     * Find records that have <code>ENDPOINT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByEndpoint(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.ENDPOINT.in(values), limit);
    }

    /**
     * Find records that have <code>PATH IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPath(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PATH.in(values));
    }

    /**
     * Find records that have <code>PATH IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPath(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PATH.in(values), limit);
    }

    /**
     * Find records that have <code>OS_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsKey(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_KEY.in(values));
    }

    /**
     * Find records that have <code>OS_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsKey(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>OS_SECRET IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsSecret(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_SECRET.in(values));
    }

    /**
     * Find records that have <code>OS_SECRET IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsSecret(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_SECRET.in(values), limit);
    }

    /**
     * Find records that have <code>OS_AUTHORIZE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsAuthorize(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_AUTHORIZE.in(values));
    }

    /**
     * Find records that have <code>OS_AUTHORIZE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsAuthorize(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_AUTHORIZE.in(values), limit);
    }

    /**
     * Find records that have <code>OS_TOKEN IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsToken(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_TOKEN.in(values));
    }

    /**
     * Find records that have <code>OS_TOKEN IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOsToken(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OS_TOKEN.in(values), limit);
    }

    /**
     * Find records that have <code>USERNAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByUsername(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.USERNAME.in(values));
    }

    /**
     * Find records that have <code>USERNAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByUsername(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.USERNAME.in(values), limit);
    }

    /**
     * Find records that have <code>PASSWORD IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPassword(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PASSWORD.in(values));
    }

    /**
     * Find records that have <code>PASSWORD IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPassword(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PASSWORD.in(values), limit);
    }

    /**
     * Find records that have <code>PUBLIC_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPublicKey(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PUBLIC_KEY.in(values));
    }

    /**
     * Find records that have <code>PUBLIC_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByPublicKey(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.PUBLIC_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>OPTIONS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOptions(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OPTIONS.in(values));
    }

    /**
     * Find records that have <code>OPTIONS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByOptions(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.OPTIONS.in(values), limit);
    }

    /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByAppId(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.APP_ID.in(values));
    }

    /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByAppId(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.APP_ID.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(IIntegration.I_INTEGRATION.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(IIntegration.I_INTEGRATION.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<IIntegrationRecord, io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<IIntegrationRecord, io.zerows.extension.runtime.integration.domain.tables.pojos.IIntegration, String>) super.queryExecutor();
    }
}
