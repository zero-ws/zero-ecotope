/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.tpl.domain.tables.daos;


import io.github.jklingsporn.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.github.jklingsporn.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.tpl.domain.tables.MyApp;
import io.zerows.extension.runtime.tpl.domain.tables.records.MyAppRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MyAppDao extends AbstractVertxDAO<MyAppRecord, io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp, String, Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>>, Future<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>, Future<Integer>, Future<String>> implements io.github.jklingsporn.vertx.jooq.classic.VertxDAO<MyAppRecord,io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp,String> {

        /**
     * @param configuration The Configuration used for rendering and query
     * execution.
     * @param vertx the vertx instance
     */
        public MyAppDao(Configuration configuration, io.vertx.core.Vertx vertx) {
                super(MyApp.MY_APP, io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp.class, new JDBCClassicQueryExecutor<MyAppRecord,io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp,String>(configuration,io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp.class,vertx));
        }

        @Override
        protected String getId(io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp object) {
                return object.getKey();
        }

        /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByAppId(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.APP_ID.in(values));
        }

        /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByAppId(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.APP_ID.in(values),limit);
        }

        /**
     * Find records that have <code>BAG_ID IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByBagId(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.BAG_ID.in(values));
        }

        /**
     * Find records that have <code>BAG_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByBagId(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.BAG_ID.in(values),limit);
        }

        /**
     * Find records that have <code>OWNER IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByOwner(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.OWNER.in(values));
        }

        /**
     * Find records that have <code>OWNER IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByOwner(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.OWNER.in(values),limit);
        }

        /**
     * Find records that have <code>OWNER_TYPE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByOwnerType(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.OWNER_TYPE.in(values));
        }

        /**
     * Find records that have <code>OWNER_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByOwnerType(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.OWNER_TYPE.in(values),limit);
        }

        /**
     * Find records that have <code>UI_SORT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByUiSort(Collection<Long> values) {
                return findManyByCondition(MyApp.MY_APP.UI_SORT.in(values));
        }

        /**
     * Find records that have <code>UI_SORT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByUiSort(Collection<Long> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.UI_SORT.in(values),limit);
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByType(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.TYPE.in(values));
        }

        /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByType(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.TYPE.in(values),limit);
        }

        /**
     * Find records that have <code>POSITION IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByPosition(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.POSITION.in(values));
        }

        /**
     * Find records that have <code>POSITION IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByPosition(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.POSITION.in(values),limit);
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByActive(Collection<Boolean> values) {
                return findManyByCondition(MyApp.MY_APP.ACTIVE.in(values));
        }

        /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByActive(Collection<Boolean> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.ACTIVE.in(values),limit);
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyBySigma(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.SIGMA.in(values));
        }

        /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyBySigma(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.SIGMA.in(values),limit);
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByMetadata(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.METADATA.in(values));
        }

        /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByMetadata(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.METADATA.in(values),limit);
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByLanguage(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.LANGUAGE.in(values));
        }

        /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByLanguage(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.LANGUAGE.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByCreatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(MyApp.MY_APP.CREATED_AT.in(values));
        }

        /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByCreatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.CREATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByCreatedBy(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.CREATED_BY.in(values));
        }

        /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByCreatedBy(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.CREATED_BY.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByUpdatedAt(Collection<LocalDateTime> values) {
                return findManyByCondition(MyApp.MY_APP.UPDATED_AT.in(values));
        }

        /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByUpdatedAt(Collection<LocalDateTime> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.UPDATED_AT.in(values),limit);
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByUpdatedBy(Collection<String> values) {
                return findManyByCondition(MyApp.MY_APP.UPDATED_BY.in(values));
        }

        /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
        public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp>> findManyByUpdatedBy(Collection<String> values, int limit) {
                return findManyByCondition(MyApp.MY_APP.UPDATED_BY.in(values),limit);
        }

        @Override
        public JDBCClassicQueryExecutor<MyAppRecord,io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp,String> queryExecutor(){
                return (JDBCClassicQueryExecutor<MyAppRecord,io.zerows.extension.runtime.tpl.domain.tables.pojos.MyApp,String>) super.queryExecutor();
        }
}
