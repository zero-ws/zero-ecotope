/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.tpl.domain.tables.interfaces;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.io.Serializable;
import java.time.LocalDateTime;

import static io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo.setOrThrow;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public interface IMyNotify extends VertxPojo, Serializable {

    /**
     * Setter for <code>ZDB.MY_NOTIFY.KEY</code>. 「key」- 设置主键
     */
    public IMyNotify setKey(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.KEY</code>. 「key」- 设置主键
     */
    public String getKey();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.OWNER_TYPE</code>. 「ownerType」- 拥有者类型
     */
    public IMyNotify setOwnerType(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.OWNER_TYPE</code>. 「ownerType」- 拥有者类型
     */
    public String getOwnerType();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.OWNER_ID</code>. 「ownerId」- 拥有者ID
     */
    public IMyNotify setOwnerId(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.OWNER_ID</code>. 「ownerId」- 拥有者ID
     */
    public String getOwnerId();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.CONFIG_INTERNAL</code>. 「configInternal」-
     * 站内信配置
     */
    public IMyNotify setConfigInternal(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.CONFIG_INTERNAL</code>. 「configInternal」-
     * 站内信配置
     */
    public String getConfigInternal();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.CONFIG_EMAIL</code>. 「configEmail」- 邮件配置
     */
    public IMyNotify setConfigEmail(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.CONFIG_EMAIL</code>. 「configEmail」- 邮件配置
     */
    public String getConfigEmail();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.CONFIG_SMS</code>. 「configSms」- 短信配置
     */
    public IMyNotify setConfigSms(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.CONFIG_SMS</code>. 「configSms」- 短信配置
     */
    public String getConfigSms();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.APP_ID</code>. 「id」- 所属应用ID
     */
    public IMyNotify setAppId(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.APP_ID</code>. 「id」- 所属应用ID
     */
    public String getAppId();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.ACTIVE</code>. 「active」- 是否启用
     */
    public IMyNotify setActive(Boolean value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.ACTIVE</code>. 「active」- 是否启用
     */
    public Boolean getActive();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.SIGMA</code>. 「sigma」- 统一标识
     */
    public IMyNotify setSigma(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.SIGMA</code>. 「sigma」- 统一标识
     */
    public String getSigma();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.METADATA</code>. 「metadata」- 附加配置
     */
    public IMyNotify setMetadata(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.METADATA</code>. 「metadata」- 附加配置
     */
    public String getMetadata();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.LANGUAGE</code>. 「language」- 使用的语言
     */
    public IMyNotify setLanguage(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.LANGUAGE</code>. 「language」- 使用的语言
     */
    public String getLanguage();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public IMyNotify setCreatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    public LocalDateTime getCreatedAt();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public IMyNotify setCreatedBy(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    public String getCreatedBy();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public IMyNotify setUpdatedAt(LocalDateTime value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    public LocalDateTime getUpdatedAt();

    /**
     * Setter for <code>ZDB.MY_NOTIFY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public IMyNotify setUpdatedBy(String value);

    /**
     * Getter for <code>ZDB.MY_NOTIFY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    public String getUpdatedBy();

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * Load data from another generated Record/POJO implementing the common
     * interface IMyNotify
     */
    public void from(IMyNotify from);

    /**
     * Copy data into another generated Record/POJO implementing the common
     * interface IMyNotify
     */
    public <E extends IMyNotify> E into(E into);

        @Override
        public default IMyNotify fromJson(io.vertx.core.json.JsonObject json) {
                setOrThrow(this::setKey,json::getString,"KEY","java.lang.String");
                setOrThrow(this::setOwnerType,json::getString,"OWNER_TYPE","java.lang.String");
                setOrThrow(this::setOwnerId,json::getString,"OWNER_ID","java.lang.String");
                setOrThrow(this::setConfigInternal,json::getString,"CONFIG_INTERNAL","java.lang.String");
                setOrThrow(this::setConfigEmail,json::getString,"CONFIG_EMAIL","java.lang.String");
                setOrThrow(this::setConfigSms,json::getString,"CONFIG_SMS","java.lang.String");
                setOrThrow(this::setAppId,json::getString,"APP_ID","java.lang.String");
                setOrThrow(this::setActive,json::getBoolean,"ACTIVE","java.lang.Boolean");
                setOrThrow(this::setSigma,json::getString,"SIGMA","java.lang.String");
                setOrThrow(this::setMetadata,json::getString,"METADATA","java.lang.String");
                setOrThrow(this::setLanguage,json::getString,"LANGUAGE","java.lang.String");
                setOrThrow(this::setCreatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"CREATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setCreatedBy,json::getString,"CREATED_BY","java.lang.String");
                setOrThrow(this::setUpdatedAt,key -> {String s = json.getString(key); return s==null?null:java.time.LocalDateTime.parse(s);},"UPDATED_AT","java.time.LocalDateTime");
                setOrThrow(this::setUpdatedBy,json::getString,"UPDATED_BY","java.lang.String");
                return this;
        }


        @Override
        public default io.vertx.core.json.JsonObject toJson() {
                io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
                json.put("KEY",getKey());
                json.put("OWNER_TYPE",getOwnerType());
                json.put("OWNER_ID",getOwnerId());
                json.put("CONFIG_INTERNAL",getConfigInternal());
                json.put("CONFIG_EMAIL",getConfigEmail());
                json.put("CONFIG_SMS",getConfigSms());
                json.put("APP_ID",getAppId());
                json.put("ACTIVE",getActive());
                json.put("SIGMA",getSigma());
                json.put("METADATA",getMetadata());
                json.put("LANGUAGE",getLanguage());
                json.put("CREATED_AT",getCreatedAt()==null?null:getCreatedAt().toString());
                json.put("CREATED_BY",getCreatedBy());
                json.put("UPDATED_AT",getUpdatedAt()==null?null:getUpdatedAt().toString());
                json.put("UPDATED_BY",getUpdatedBy());
                return json;
        }

}
