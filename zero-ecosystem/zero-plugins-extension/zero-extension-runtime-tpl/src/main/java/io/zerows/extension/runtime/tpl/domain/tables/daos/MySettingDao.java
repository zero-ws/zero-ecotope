/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.tpl.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.tpl.domain.tables.MySetting;
import io.zerows.extension.runtime.tpl.domain.tables.records.MySettingRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MySettingDao extends AbstractVertxDAO<MySettingRecord, io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting, String, Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>>, Future<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<MySettingRecord, io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public MySettingDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(MySetting.MY_SETTING, io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting.class, new JDBCClassicQueryExecutor<MySettingRecord, io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting, String>(configuration, io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>P_NAV_THEME IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPNavTheme(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_NAV_THEME.in(values));
    }

    /**
     * Find records that have <code>P_NAV_THEME IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPNavTheme(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_NAV_THEME.in(values), limit);
    }

    /**
     * Find records that have <code>P_COLOR_PRIMARY IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPColorPrimary(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_COLOR_PRIMARY.in(values));
    }

    /**
     * Find records that have <code>P_COLOR_PRIMARY IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPColorPrimary(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_COLOR_PRIMARY.in(values), limit);
    }

    /**
     * Find records that have <code>P_LAYOUT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPLayout(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_LAYOUT.in(values));
    }

    /**
     * Find records that have <code>P_LAYOUT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPLayout(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_LAYOUT.in(values), limit);
    }

    /**
     * Find records that have <code>P_CONTENT_WIDTH IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPContentWidth(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_CONTENT_WIDTH.in(values));
    }

    /**
     * Find records that have <code>P_CONTENT_WIDTH IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPContentWidth(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_CONTENT_WIDTH.in(values), limit);
    }

    /**
     * Find records that have <code>P_FIXED_HEADER IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPFixedHeader(final Collection<Boolean> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_FIXED_HEADER.in(values));
    }

    /**
     * Find records that have <code>P_FIXED_HEADER IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPFixedHeader(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_FIXED_HEADER.in(values), limit);
    }

    /**
     * Find records that have <code>P_FIX_SIDER_BAR IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPFixSiderBar(final Collection<Boolean> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_FIX_SIDER_BAR.in(values));
    }

    /**
     * Find records that have <code>P_FIX_SIDER_BAR IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPFixSiderBar(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_FIX_SIDER_BAR.in(values), limit);
    }

    /**
     * Find records that have <code>P_COLOR_WEAK IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPColorWeak(final Collection<Boolean> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_COLOR_WEAK.in(values));
    }

    /**
     * Find records that have <code>P_COLOR_WEAK IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPColorWeak(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_COLOR_WEAK.in(values), limit);
    }

    /**
     * Find records that have <code>P_PWA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPPwa(final Collection<Boolean> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_PWA.in(values));
    }

    /**
     * Find records that have <code>P_PWA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPPwa(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_PWA.in(values), limit);
    }

    /**
     * Find records that have <code>P_TOKEN IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPToken(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.P_TOKEN.in(values));
    }

    /**
     * Find records that have <code>P_TOKEN IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByPToken(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.P_TOKEN.in(values), limit);
    }

    /**
     * Find records that have <code>MY_BAG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByMyBag(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.MY_BAG.in(values));
    }

    /**
     * Find records that have <code>MY_BAG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByMyBag(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.MY_BAG.in(values), limit);
    }

    /**
     * Find records that have <code>OWNER IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByOwner(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.OWNER.in(values));
    }

    /**
     * Find records that have <code>OWNER IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByOwner(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.OWNER.in(values), limit);
    }

    /**
     * Find records that have <code>OWNER_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByOwnerType(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.OWNER_TYPE.in(values));
    }

    /**
     * Find records that have <code>OWNER_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByOwnerType(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.OWNER_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByType(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(MySetting.MY_SETTING.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(MySetting.MY_SETTING.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(MySetting.MY_SETTING.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(MySetting.MY_SETTING.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(MySetting.MY_SETTING.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<MySettingRecord, io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<MySettingRecord, io.zerows.extension.runtime.tpl.domain.tables.pojos.MySetting, String>) super.queryExecutor();
    }
}
