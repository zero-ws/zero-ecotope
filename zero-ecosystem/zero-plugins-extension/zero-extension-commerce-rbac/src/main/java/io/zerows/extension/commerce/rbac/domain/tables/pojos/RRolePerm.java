/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.rbac.domain.tables.pojos;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.rbac.domain.tables.interfaces.IRRolePerm;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RRolePerm implements VertxPojo, IRRolePerm {

    private static final long serialVersionUID = 1L;

    private String permId;
    private String roleId;

    public RRolePerm() {
    }

    public RRolePerm(final IRRolePerm value) {
        this.permId = value.getPermId();
        this.roleId = value.getRoleId();
    }

    public RRolePerm(
        final String permId,
        final String roleId
    ) {
        this.permId = permId;
        this.roleId = roleId;
    }

    public RRolePerm(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.R_ROLE_PERM.PERM_ID</code>. 「permId」- 关联权限ID
     */
    @Override
    public String getPermId() {
        return this.permId;
    }

    /**
     * Setter for <code>ZDB.R_ROLE_PERM.PERM_ID</code>. 「permId」- 关联权限ID
     */
    @Override
    public RRolePerm setPermId(final String permId) {
        this.permId = permId;
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ROLE_PERM.ROLE_ID</code>. 「roleId」- 关联角色ID
     */
    @Override
    public String getRoleId() {
        return this.roleId;
    }

    /**
     * Setter for <code>ZDB.R_ROLE_PERM.ROLE_ID</code>. 「roleId」- 关联角色ID
     */
    @Override
    public RRolePerm setRoleId(final String roleId) {
        this.roleId = roleId;
        return this;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RRolePerm other = (RRolePerm) obj;
        if (this.permId == null) {
            if (other.permId != null)
                return false;
        } else if (!this.permId.equals(other.permId))
            return false;
        if (this.roleId == null) {
            if (other.roleId != null)
                return false;
        } else if (!this.roleId.equals(other.roleId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.permId == null) ? 0 : this.permId.hashCode());
        result = prime * result + ((this.roleId == null) ? 0 : this.roleId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder("RRolePerm (");

        sb.append(permId);
        sb.append(", ").append(roleId);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(final IRRolePerm from) {
        setPermId(from.getPermId());
        setRoleId(from.getRoleId());
    }

    @Override
    public <E extends IRRolePerm> E into(final E into) {
        into.from(this);
        return into;
    }
}
