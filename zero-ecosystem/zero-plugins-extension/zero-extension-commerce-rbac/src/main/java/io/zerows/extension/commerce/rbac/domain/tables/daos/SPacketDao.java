/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.rbac.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.rbac.domain.tables.SPacket;
import io.zerows.extension.commerce.rbac.domain.tables.records.SPacketRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SPacketDao extends AbstractVertxDAO<SPacketRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket, String, Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>>, Future<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<SPacketRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public SPacketDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(SPacket.S_PACKET, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket.class, new JDBCClassicQueryExecutor<SPacketRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket, String>(configuration, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>RESOURCE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByResource(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.RESOURCE.in(values));
    }

    /**
     * Find records that have <code>RESOURCE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByResource(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.RESOURCE.in(values), limit);
    }

    /**
     * Find records that have <code>H_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByHType(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.H_TYPE.in(values));
    }

    /**
     * Find records that have <code>H_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByHType(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.H_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>H_MAPPING IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByHMapping(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.H_MAPPING.in(values));
    }

    /**
     * Find records that have <code>H_MAPPING IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByHMapping(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.H_MAPPING.in(values), limit);
    }

    /**
     * Find records that have <code>H_CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByHConfig(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.H_CONFIG.in(values));
    }

    /**
     * Find records that have <code>H_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByHConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.H_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>V_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByVType(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.V_TYPE.in(values));
    }

    /**
     * Find records that have <code>V_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByVType(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.V_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>V_MAPPING IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByVMapping(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.V_MAPPING.in(values));
    }

    /**
     * Find records that have <code>V_MAPPING IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByVMapping(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.V_MAPPING.in(values), limit);
    }

    /**
     * Find records that have <code>V_CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByVConfig(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.V_CONFIG.in(values));
    }

    /**
     * Find records that have <code>V_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByVConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.V_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>Q_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByQType(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.Q_TYPE.in(values));
    }

    /**
     * Find records that have <code>Q_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByQType(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.Q_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>Q_MAPPING IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByQMapping(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.Q_MAPPING.in(values));
    }

    /**
     * Find records that have <code>Q_MAPPING IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByQMapping(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.Q_MAPPING.in(values), limit);
    }

    /**
     * Find records that have <code>Q_CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByQConfig(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.Q_CONFIG.in(values));
    }

    /**
     * Find records that have <code>Q_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByQConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.Q_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>RUN_COMPONENT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByRunComponent(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.RUN_COMPONENT.in(values));
    }

    /**
     * Find records that have <code>RUN_COMPONENT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByRunComponent(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.RUN_COMPONENT.in(values), limit);
    }

    /**
     * Find records that have <code>RUN_CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByRunConfig(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.RUN_CONFIG.in(values));
    }

    /**
     * Find records that have <code>RUN_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByRunConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.RUN_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>SEEK_SYNTAX IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyBySeekSyntax(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.SEEK_SYNTAX.in(values));
    }

    /**
     * Find records that have <code>SEEK_SYNTAX IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyBySeekSyntax(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.SEEK_SYNTAX.in(values), limit);
    }

    /**
     * Find records that have <code>SEEK_CONFIG IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyBySeekConfig(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.SEEK_CONFIG.in(values));
    }

    /**
     * Find records that have <code>SEEK_CONFIG IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyBySeekConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.SEEK_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(SPacket.S_PACKET.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(SPacket.S_PACKET.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(SPacket.S_PACKET.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(SPacket.S_PACKET.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(SPacket.S_PACKET.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<SPacketRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<SPacketRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPacket, String>) super.queryExecutor();
    }
}
