/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.rbac.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.rbac.domain.tables.SPath;
import io.zerows.extension.commerce.rbac.domain.tables.records.SPathRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class SPathDao extends AbstractVertxDAO<SPathRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath, String, Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>>, Future<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<SPathRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public SPathDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(SPath.S_PATH, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath.class, new JDBCClassicQueryExecutor<SPathRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath, String>(configuration, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByName(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>PHASE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByPhase(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.PHASE.in(values));
    }

    /**
     * Find records that have <code>PHASE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByPhase(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.PHASE.in(values), limit);
    }

    /**
     * Find records that have <code>MAPPING IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByMapping(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.MAPPING.in(values));
    }

    /**
     * Find records that have <code>MAPPING IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByMapping(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.MAPPING.in(values), limit);
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByParentId(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.PARENT_ID.in(values));
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByParentId(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.PARENT_ID.in(values), limit);
    }

    /**
     * Find records that have <code>RUN_COMPONENT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByRunComponent(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.RUN_COMPONENT.in(values));
    }

    /**
     * Find records that have <code>RUN_COMPONENT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByRunComponent(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.RUN_COMPONENT.in(values), limit);
    }

    /**
     * Find records that have <code>RUN_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByRunType(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.RUN_TYPE.in(values));
    }

    /**
     * Find records that have <code>RUN_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByRunType(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.RUN_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>DM_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmType(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.DM_TYPE.in(values));
    }

    /**
     * Find records that have <code>DM_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmType(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.DM_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>DM_COMPONENT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmComponent(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.DM_COMPONENT.in(values));
    }

    /**
     * Find records that have <code>DM_COMPONENT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmComponent(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.DM_COMPONENT.in(values), limit);
    }

    /**
     * Find records that have <code>DM_CONDITION IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmCondition(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.DM_CONDITION.in(values));
    }

    /**
     * Find records that have <code>DM_CONDITION IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmCondition(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.DM_CONDITION.in(values), limit);
    }

    /**
     * Find records that have <code>DM_CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmConfig(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.DM_CONFIG.in(values));
    }

    /**
     * Find records that have <code>DM_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByDmConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.DM_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>UI_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiType(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.UI_TYPE.in(values));
    }

    /**
     * Find records that have <code>UI_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiType(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UI_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>UI_CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiConfig(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.UI_CONFIG.in(values));
    }

    /**
     * Find records that have <code>UI_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UI_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>UI_CONDITION IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiCondition(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.UI_CONDITION.in(values));
    }

    /**
     * Find records that have <code>UI_CONDITION IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiCondition(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UI_CONDITION.in(values), limit);
    }

    /**
     * Find records that have <code>UI_COMPONENT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiComponent(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.UI_COMPONENT.in(values));
    }

    /**
     * Find records that have <code>UI_COMPONENT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiComponent(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UI_COMPONENT.in(values), limit);
    }

    /**
     * Find records that have <code>UI_SURFACE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiSurface(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.UI_SURFACE.in(values));
    }

    /**
     * Find records that have <code>UI_SURFACE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiSurface(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UI_SURFACE.in(values), limit);
    }

    /**
     * Find records that have <code>UI_SORT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiSort(final Collection<Integer> values) {
        return findManyByCondition(SPath.S_PATH.UI_SORT.in(values));
    }

    /**
     * Find records that have <code>UI_SORT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUiSort(final Collection<Integer> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UI_SORT.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(SPath.S_PATH.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(SPath.S_PATH.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(SPath.S_PATH.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(SPath.S_PATH.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(SPath.S_PATH.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<SPathRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<SPathRecord, io.zerows.extension.commerce.rbac.domain.tables.pojos.SPath, String>) super.queryExecutor();
    }
}
