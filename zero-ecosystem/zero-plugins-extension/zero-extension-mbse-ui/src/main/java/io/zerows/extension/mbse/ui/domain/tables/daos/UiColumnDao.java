/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.mbse.ui.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.mbse.ui.domain.tables.UiColumn;
import io.zerows.extension.mbse.ui.domain.tables.records.UiColumnRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UiColumnDao extends AbstractVertxDAO<UiColumnRecord, io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn, String, Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>>, Future<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<UiColumnRecord, io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public UiColumnDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(UiColumn.UI_COLUMN, io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn.class, new JDBCClassicQueryExecutor<UiColumnRecord, io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn, String>(configuration, io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>TITLE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByTitle(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.TITLE.in(values));
    }

    /**
     * Find records that have <code>TITLE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByTitle(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.TITLE.in(values), limit);
    }

    /**
     * Find records that have <code>DATA_INDEX IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByDataIndex(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.DATA_INDEX.in(values));
    }

    /**
     * Find records that have <code>DATA_INDEX IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByDataIndex(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.DATA_INDEX.in(values), limit);
    }

    /**
     * Find records that have <code>POSITION IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByPosition(final Collection<Integer> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.POSITION.in(values));
    }

    /**
     * Find records that have <code>POSITION IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByPosition(final Collection<Integer> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.POSITION.in(values), limit);
    }

    /**
     * Find records that have <code>RENDER IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByRender(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.RENDER.in(values));
    }

    /**
     * Find records that have <code>RENDER IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByRender(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.RENDER.in(values), limit);
    }

    /**
     * Find records that have <code>WIDTH IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByWidth(final Collection<Integer> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.WIDTH.in(values));
    }

    /**
     * Find records that have <code>WIDTH IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByWidth(final Collection<Integer> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.WIDTH.in(values), limit);
    }

    /**
     * Find records that have <code>FIXED IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFixed(final Collection<Boolean> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.FIXED.in(values));
    }

    /**
     * Find records that have <code>FIXED IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFixed(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.FIXED.in(values), limit);
    }

    /**
     * Find records that have <code>CLASS_NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByClassName(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.CLASS_NAME.in(values));
    }

    /**
     * Find records that have <code>CLASS_NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByClassName(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.CLASS_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>SORTER IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyBySorter(final Collection<Boolean> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.SORTER.in(values));
    }

    /**
     * Find records that have <code>SORTER IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyBySorter(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.SORTER.in(values), limit);
    }

    /**
     * Find records that have <code>FILTER_TYPE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFilterType(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.FILTER_TYPE.in(values));
    }

    /**
     * Find records that have <code>FILTER_TYPE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFilterType(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.FILTER_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>FILTER_CONFIG IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFilterConfig(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.FILTER_CONFIG.in(values));
    }

    /**
     * Find records that have <code>FILTER_CONFIG IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFilterConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.FILTER_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>EMPTY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByEmpty(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.EMPTY.in(values));
    }

    /**
     * Find records that have <code>EMPTY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByEmpty(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.EMPTY.in(values), limit);
    }

    /**
     * Find records that have <code>MAPPING IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByMapping(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.MAPPING.in(values));
    }

    /**
     * Find records that have <code>MAPPING IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByMapping(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.MAPPING.in(values), limit);
    }

    /**
     * Find records that have <code>CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByConfig(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.CONFIG.in(values));
    }

    /**
     * Find records that have <code>CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>OPTION IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByOption(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.OPTION.in(values));
    }

    /**
     * Find records that have <code>OPTION IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByOption(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.OPTION.in(values), limit);
    }

    /**
     * Find records that have <code>FORMAT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFormat(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.FORMAT.in(values));
    }

    /**
     * Find records that have <code>FORMAT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByFormat(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.FORMAT.in(values), limit);
    }

    /**
     * Find records that have <code>DATUM IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByDatum(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.DATUM.in(values));
    }

    /**
     * Find records that have <code>DATUM IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByDatum(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.DATUM.in(values), limit);
    }

    /**
     * Find records that have <code>CONTROL_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByControlId(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.CONTROL_ID.in(values));
    }

    /**
     * Find records that have <code>CONTROL_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByControlId(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.CONTROL_ID.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(UiColumn.UI_COLUMN.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(UiColumn.UI_COLUMN.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<UiColumnRecord, io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<UiColumnRecord, io.zerows.extension.mbse.ui.domain.tables.pojos.UiColumn, String>) super.queryExecutor();
    }
}
