/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.mbse.basement.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.mbse.basement.domain.tables.MRelation;
import io.zerows.extension.mbse.basement.domain.tables.interfaces.IMRelation;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MRelationRecord extends UpdatableRecordImpl<MRelationRecord> implements VertxPojo, Record13<String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IMRelation {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached MRelationRecord
     */
    public MRelationRecord() {
        super(MRelation.M_RELATION);
    }

    /**
     * Create a detached, initialised MRelationRecord
     */
    public MRelationRecord(final String key, final String type, final String upstream, final String downstream, final String comments, final String sigma, final String language, final Boolean active, final String metadata, final LocalDateTime createdAt, final String createdBy, final LocalDateTime updatedAt, final String updatedBy) {
        super(MRelation.M_RELATION);

        setKey(key);
        setType(type);
        setUpstream(upstream);
        setDownstream(downstream);
        setComments(comments);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised MRelationRecord
     */
    public MRelationRecord(final io.zerows.extension.mbse.basement.domain.tables.pojos.MRelation value) {
        super(MRelation.M_RELATION);

        if (value != null) {
            setKey(value.getKey());
            setType(value.getType());
            setUpstream(value.getUpstream());
            setDownstream(value.getDownstream());
            setComments(value.getComments());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

    public MRelationRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.M_RELATION.KEY</code>. 「key」- 关系定义的主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.KEY</code>. 「key」- 关系定义的主键
     */
    @Override
    public MRelationRecord setKey(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.TYPE</code>. 「type」- 关系类型 - 来自（字典）
     */
    @Override
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.TYPE</code>. 「type」- 关系类型 - 来自（字典）
     */
    @Override
    public MRelationRecord setType(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.UPSTREAM</code>. 「upstream」- 当前关系是
     * upstream，表示上级
     */
    @Override
    public String getUpstream() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.UPSTREAM</code>. 「upstream」- 当前关系是
     * upstream，表示上级
     */
    @Override
    public MRelationRecord setUpstream(final String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.DOWNSTREAM</code>. 「downstream」- 当前关系是
     * downstream，表示下级
     */
    @Override
    public String getDownstream() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.DOWNSTREAM</code>. 「downstream」- 当前关系是
     * downstream，表示下级
     */
    @Override
    public MRelationRecord setDownstream(final String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.COMMENTS</code>. 「comments」- 关系定义的描述信息
     */
    @Override
    public String getComments() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.COMMENTS</code>. 「comments」- 关系定义的描述信息
     */
    @Override
    public MRelationRecord setComments(final String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public MRelationRecord setSigma(final String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public MRelationRecord setLanguage(final String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public MRelationRecord setActive(final Boolean value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public MRelationRecord setMetadata(final String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public MRelationRecord setCreatedAt(final LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public MRelationRecord setCreatedBy(final String value) {
        set(10, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>ZDB.M_RELATION.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>ZDB.M_RELATION.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public MRelationRecord setUpdatedAt(final LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.M_RELATION.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.M_RELATION.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public MRelationRecord setUpdatedBy(final String value) {
        set(12, value);
        return this;
    }

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    @Override
    public Row13<String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MRelation.M_RELATION.KEY;
    }

    @Override
    public Field<String> field2() {
        return MRelation.M_RELATION.TYPE;
    }

    @Override
    public Field<String> field3() {
        return MRelation.M_RELATION.UPSTREAM;
    }

    @Override
    public Field<String> field4() {
        return MRelation.M_RELATION.DOWNSTREAM;
    }

    @Override
    public Field<String> field5() {
        return MRelation.M_RELATION.COMMENTS;
    }

    @Override
    public Field<String> field6() {
        return MRelation.M_RELATION.SIGMA;
    }

    @Override
    public Field<String> field7() {
        return MRelation.M_RELATION.LANGUAGE;
    }

    @Override
    public Field<Boolean> field8() {
        return MRelation.M_RELATION.ACTIVE;
    }

    @Override
    public Field<String> field9() {
        return MRelation.M_RELATION.METADATA;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return MRelation.M_RELATION.CREATED_AT;
    }

    @Override
    public Field<String> field11() {
        return MRelation.M_RELATION.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return MRelation.M_RELATION.UPDATED_AT;
    }

    @Override
    public Field<String> field13() {
        return MRelation.M_RELATION.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getUpstream();
    }

    @Override
    public String component4() {
        return getDownstream();
    }

    @Override
    public String component5() {
        return getComments();
    }

    @Override
    public String component6() {
        return getSigma();
    }

    @Override
    public String component7() {
        return getLanguage();
    }

    @Override
    public Boolean component8() {
        return getActive();
    }

    @Override
    public String component9() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component10() {
        return getCreatedAt();
    }

    @Override
    public String component11() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component12() {
        return getUpdatedAt();
    }

    @Override
    public String component13() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getUpstream();
    }

    @Override
    public String value4() {
        return getDownstream();
    }

    @Override
    public String value5() {
        return getComments();
    }

    @Override
    public String value6() {
        return getSigma();
    }

    @Override
    public String value7() {
        return getLanguage();
    }

    @Override
    public Boolean value8() {
        return getActive();
    }

    @Override
    public String value9() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value10() {
        return getCreatedAt();
    }

    @Override
    public String value11() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value12() {
        return getUpdatedAt();
    }

    @Override
    public String value13() {
        return getUpdatedBy();
    }

    @Override
    public MRelationRecord value1(final String value) {
        setKey(value);
        return this;
    }

    @Override
    public MRelationRecord value2(final String value) {
        setType(value);
        return this;
    }

    @Override
    public MRelationRecord value3(final String value) {
        setUpstream(value);
        return this;
    }

    @Override
    public MRelationRecord value4(final String value) {
        setDownstream(value);
        return this;
    }

    @Override
    public MRelationRecord value5(final String value) {
        setComments(value);
        return this;
    }

    @Override
    public MRelationRecord value6(final String value) {
        setSigma(value);
        return this;
    }

    @Override
    public MRelationRecord value7(final String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public MRelationRecord value8(final Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public MRelationRecord value9(final String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public MRelationRecord value10(final LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public MRelationRecord value11(final String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public MRelationRecord value12(final LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public MRelationRecord value13(final String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public MRelationRecord values(final String value1, final String value2, final String value3, final String value4, final String value5, final String value6, final String value7, final Boolean value8, final String value9, final LocalDateTime value10, final String value11, final LocalDateTime value12, final String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    @Override
    public void from(final IMRelation from) {
        setKey(from.getKey());
        setType(from.getType());
        setUpstream(from.getUpstream());
        setDownstream(from.getDownstream());
        setComments(from.getComments());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IMRelation> E into(final E into) {
        into.from(this);
        return into;
    }
}
