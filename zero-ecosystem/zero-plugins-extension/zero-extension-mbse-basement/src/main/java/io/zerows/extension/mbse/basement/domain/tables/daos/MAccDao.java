/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.mbse.basement.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.mbse.basement.domain.tables.MAcc;
import io.zerows.extension.mbse.basement.domain.tables.records.MAccRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class MAccDao extends AbstractVertxDAO<MAccRecord, io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc, String, Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>>, Future<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<MAccRecord, io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public MAccDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(MAcc.M_ACC, io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc.class, new JDBCClassicQueryExecutor<MAccRecord, io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc, String>(configuration, io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByModelId(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.MODEL_ID.in(values));
    }

    /**
     * Find records that have <code>MODEL_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByModelId(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.MODEL_ID.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByModelKey(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.MODEL_KEY.in(values));
    }

    /**
     * Find records that have <code>MODEL_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByModelKey(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.MODEL_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>RECORD_JSON IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByRecordJson(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.RECORD_JSON.in(values));
    }

    /**
     * Find records that have <code>RECORD_JSON IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByRecordJson(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.RECORD_JSON.in(values), limit);
    }

    /**
     * Find records that have <code>RECORD_RAW IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByRecordRaw(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.RECORD_RAW.in(values));
    }

    /**
     * Find records that have <code>RECORD_RAW IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByRecordRaw(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.RECORD_RAW.in(values), limit);
    }

    /**
     * Find records that have <code>RECORD_UNIQUE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByRecordUnique(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.RECORD_UNIQUE.in(values));
    }

    /**
     * Find records that have <code>RECORD_UNIQUE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByRecordUnique(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.RECORD_UNIQUE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(MAcc.M_ACC.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(MAcc.M_ACC.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(MAcc.M_ACC.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(MAcc.M_ACC.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(MAcc.M_ACC.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<MAccRecord, io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<MAccRecord, io.zerows.extension.mbse.basement.domain.tables.pojos.MAcc, String>) super.queryExecutor();
    }
}
