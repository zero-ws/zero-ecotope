/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.lbs.domain.tables.pojos;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.lbs.domain.tables.interfaces.ILFloor;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LFloor implements VertxPojo, ILFloor {

    private static final long serialVersionUID = 1L;

    private String key;
    private String name;
    private String code;
    private String metadata;
    private Integer order;
    private String tentId;
    private Boolean active;
    private String sigma;
    private String language;
    private LocalDateTime createdAt;
    private String createdBy;
    private LocalDateTime updatedAt;
    private String updatedBy;

    public LFloor() {
    }

    public LFloor(final ILFloor value) {
        this.key = value.getKey();
        this.name = value.getName();
        this.code = value.getCode();
        this.metadata = value.getMetadata();
        this.order = value.getOrder();
        this.tentId = value.getTentId();
        this.active = value.getActive();
        this.sigma = value.getSigma();
        this.language = value.getLanguage();
        this.createdAt = value.getCreatedAt();
        this.createdBy = value.getCreatedBy();
        this.updatedAt = value.getUpdatedAt();
        this.updatedBy = value.getUpdatedBy();
    }

    public LFloor(
        final String key,
        final String name,
        final String code,
        final String metadata,
        final Integer order,
        final String tentId,
        final Boolean active,
        final String sigma,
        final String language,
        final LocalDateTime createdAt,
        final String createdBy,
        final LocalDateTime updatedAt,
        final String updatedBy
    ) {
        this.key = key;
        this.name = name;
        this.code = code;
        this.metadata = metadata;
        this.order = order;
        this.tentId = tentId;
        this.active = active;
        this.sigma = sigma;
        this.language = language;
        this.createdAt = createdAt;
        this.createdBy = createdBy;
        this.updatedAt = updatedAt;
        this.updatedBy = updatedBy;
    }

    public LFloor(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.KEY</code>. 「key」- 主键
     */
    @Override
    public String getKey() {
        return this.key;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.KEY</code>. 「key」- 主键
     */
    @Override
    public LFloor setKey(final String key) {
        this.key = key;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.NAME</code>. 「name」- 名称
     */
    @Override
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.NAME</code>. 「name」- 名称
     */
    @Override
    public LFloor setName(final String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.CODE</code>. 「code」- 编码
     */
    @Override
    public String getCode() {
        return this.code;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.CODE</code>. 「code」- 编码
     */
    @Override
    public LFloor setCode(final String code) {
        this.code = code;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return this.metadata;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public LFloor setMetadata(final String metadata) {
        this.metadata = metadata;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.ORDER</code>. 「order」- 排序
     */
    @Override
    public Integer getOrder() {
        return this.order;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.ORDER</code>. 「order」- 排序
     */
    @Override
    public LFloor setOrder(final Integer order) {
        this.order = order;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.TENT_ID</code>. 「tentId」- 栋ID
     */
    @Override
    public String getTentId() {
        return this.tentId;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.TENT_ID</code>. 「tentId」- 栋ID
     */
    @Override
    public LFloor setTentId(final String tentId) {
        this.tentId = tentId;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public LFloor setActive(final Boolean active) {
        this.active = active;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return this.sigma;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public LFloor setSigma(final String sigma) {
        this.sigma = sigma;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public LFloor setLanguage(final String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LFloor setCreatedAt(final LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return this.createdBy;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public LFloor setCreatedBy(final String createdBy) {
        this.createdBy = createdBy;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LFloor setUpdatedAt(final LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Getter for <code>ZDB.L_FLOOR.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    /**
     * Setter for <code>ZDB.L_FLOOR.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public LFloor setUpdatedBy(final String updatedBy) {
        this.updatedBy = updatedBy;
        return this;
    }

    @Override
    public boolean equals(final Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final LFloor other = (LFloor) obj;
        if (this.key == null) {
            if (other.key != null)
                return false;
        } else if (!this.key.equals(other.key))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        } else if (!this.name.equals(other.name))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        } else if (!this.code.equals(other.code))
            return false;
        if (this.metadata == null) {
            if (other.metadata != null)
                return false;
        } else if (!this.metadata.equals(other.metadata))
            return false;
        if (this.order == null) {
            if (other.order != null)
                return false;
        } else if (!this.order.equals(other.order))
            return false;
        if (this.tentId == null) {
            if (other.tentId != null)
                return false;
        } else if (!this.tentId.equals(other.tentId))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        } else if (!this.active.equals(other.active))
            return false;
        if (this.sigma == null) {
            if (other.sigma != null)
                return false;
        } else if (!this.sigma.equals(other.sigma))
            return false;
        if (this.language == null) {
            if (other.language != null)
                return false;
        } else if (!this.language.equals(other.language))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        } else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.createdBy == null) {
            if (other.createdBy != null)
                return false;
        } else if (!this.createdBy.equals(other.createdBy))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        } else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        if (this.updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        } else if (!this.updatedBy.equals(other.updatedBy))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.key == null) ? 0 : this.key.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.metadata == null) ? 0 : this.metadata.hashCode());
        result = prime * result + ((this.order == null) ? 0 : this.order.hashCode());
        result = prime * result + ((this.tentId == null) ? 0 : this.tentId.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.sigma == null) ? 0 : this.sigma.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.createdBy == null) ? 0 : this.createdBy.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        result = prime * result + ((this.updatedBy == null) ? 0 : this.updatedBy.hashCode());
        return result;
    }

    @Override
    public String toString() {
        final StringBuilder sb = new StringBuilder("LFloor (");

        sb.append(key);
        sb.append(", ").append(name);
        sb.append(", ").append(code);
        sb.append(", ").append(metadata);
        sb.append(", ").append(order);
        sb.append(", ").append(tentId);
        sb.append(", ").append(active);
        sb.append(", ").append(sigma);
        sb.append(", ").append(language);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(createdBy);
        sb.append(", ").append(updatedAt);
        sb.append(", ").append(updatedBy);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(final ILFloor from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setMetadata(from.getMetadata());
        setOrder(from.getOrder());
        setTentId(from.getTentId());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
    }

    @Override
    public <E extends ILFloor> E into(final E into) {
        into.from(this);
        return into;
    }
}
