/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.lbs.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.lbs.domain.tables.LLocation;
import io.zerows.extension.commerce.lbs.domain.tables.records.LLocationRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LLocationDao extends AbstractVertxDAO<LLocationRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation, String, Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>>, Future<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<LLocationRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public LLocationDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(LLocation.L_LOCATION, io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation.class, new JDBCClassicQueryExecutor<LLocationRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation, String>(configuration, io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByName(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>ADDRESS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByAddress(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.ADDRESS.in(values));
    }

    /**
     * Find records that have <code>ADDRESS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByAddress(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.ADDRESS.in(values), limit);
    }

    /**
     * Find records that have <code>CITY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCity(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.CITY.in(values));
    }

    /**
     * Find records that have <code>CITY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCity(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.CITY.in(values), limit);
    }

    /**
     * Find records that have <code>COUNTRY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCountry(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.COUNTRY.in(values));
    }

    /**
     * Find records that have <code>COUNTRY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCountry(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.COUNTRY.in(values), limit);
    }

    /**
     * Find records that have <code>REGION IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByRegion(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.REGION.in(values));
    }

    /**
     * Find records that have <code>REGION IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByRegion(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.REGION.in(values), limit);
    }

    /**
     * Find records that have <code>FULL_NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByFullName(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.FULL_NAME.in(values));
    }

    /**
     * Find records that have <code>FULL_NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByFullName(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.FULL_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>STATE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByState(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.STATE.in(values));
    }

    /**
     * Find records that have <code>STATE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByState(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.STATE.in(values), limit);
    }

    /**
     * Find records that have <code>STREET1 IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByStreet1(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.STREET1.in(values));
    }

    /**
     * Find records that have <code>STREET1 IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByStreet1(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.STREET1.in(values), limit);
    }

    /**
     * Find records that have <code>STREET2 IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByStreet2(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.STREET2.in(values));
    }

    /**
     * Find records that have <code>STREET2 IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByStreet2(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.STREET2.in(values), limit);
    }

    /**
     * Find records that have <code>STREET3 IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByStreet3(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.STREET3.in(values));
    }

    /**
     * Find records that have <code>STREET3 IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByStreet3(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.STREET3.in(values), limit);
    }

    /**
     * Find records that have <code>POSTAL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByPostal(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.POSTAL.in(values));
    }

    /**
     * Find records that have <code>POSTAL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByPostal(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.POSTAL.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>REGION_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByRegionId(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.REGION_ID.in(values));
    }

    /**
     * Find records that have <code>REGION_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByRegionId(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.REGION_ID.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(LLocation.L_LOCATION.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(LLocation.L_LOCATION.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(LLocation.L_LOCATION.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(LLocation.L_LOCATION.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(LLocation.L_LOCATION.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<LLocationRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<LLocationRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LLocation, String>) super.queryExecutor();
    }
}
