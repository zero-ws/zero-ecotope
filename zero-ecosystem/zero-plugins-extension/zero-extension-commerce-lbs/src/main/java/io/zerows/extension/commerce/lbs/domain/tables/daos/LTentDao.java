/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.lbs.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.lbs.domain.tables.LTent;
import io.zerows.extension.commerce.lbs.domain.tables.records.LTentRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class LTentDao extends AbstractVertxDAO<LTentRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent, String, Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>>, Future<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<LTentRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public LTentDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(LTent.L_TENT, io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent.class, new JDBCClassicQueryExecutor<LTentRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent, String>(configuration, io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByName(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>CONTACT_PHONE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByContactPhone(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.CONTACT_PHONE.in(values));
    }

    /**
     * Find records that have <code>CONTACT_PHONE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByContactPhone(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.CONTACT_PHONE.in(values), limit);
    }

    /**
     * Find records that have <code>CONTACT_NAME IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByContactName(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.CONTACT_NAME.in(values));
    }

    /**
     * Find records that have <code>CONTACT_NAME IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByContactName(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.CONTACT_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>ORDER IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByOrder(final Collection<Integer> values) {
        return findManyByCondition(LTent.L_TENT.ORDER.in(values));
    }

    /**
     * Find records that have <code>ORDER IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByOrder(final Collection<Integer> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.ORDER.in(values), limit);
    }

    /**
     * Find records that have <code>LOCATION_ID IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByLocationId(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.LOCATION_ID.in(values));
    }

    /**
     * Find records that have <code>LOCATION_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByLocationId(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.LOCATION_ID.in(values), limit);
    }

    /**
     * Find records that have <code>YARD_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByYardId(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.YARD_ID.in(values));
    }

    /**
     * Find records that have <code>YARD_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByYardId(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.YARD_ID.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(LTent.L_TENT.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(LTent.L_TENT.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(LTent.L_TENT.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(LTent.L_TENT.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(LTent.L_TENT.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<LTentRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<LTentRecord, io.zerows.extension.commerce.lbs.domain.tables.pojos.LTent, String>) super.queryExecutor();
    }
}
