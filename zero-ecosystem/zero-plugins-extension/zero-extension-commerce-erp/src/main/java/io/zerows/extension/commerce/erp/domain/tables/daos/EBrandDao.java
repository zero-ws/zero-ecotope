/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.erp.domain.tables.EBrand;
import io.zerows.extension.commerce.erp.domain.tables.records.EBrandRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EBrandDao extends AbstractVertxDAO<EBrandRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand, String, Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>>, Future<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<EBrandRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public EBrandDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(EBrand.E_BRAND, io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand.class, new JDBCClassicQueryExecutor<EBrandRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand, String>(configuration, io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByName(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>ALIAS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByAlias(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.ALIAS.in(values));
    }

    /**
     * Find records that have <code>ALIAS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByAlias(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.ALIAS.in(values), limit);
    }

    /**
     * Find records that have <code>COMPANY_NAME IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCompanyName(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.COMPANY_NAME.in(values));
    }

    /**
     * Find records that have <code>COMPANY_NAME IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCompanyName(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.COMPANY_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CATEGORY_CODE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCategoryCode(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.CATEGORY_CODE.in(values));
    }

    /**
     * Find records that have <code>CATEGORY_CODE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCategoryCode(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.CATEGORY_CODE.in(values), limit);
    }

    /**
     * Find records that have <code>CATEGORY_NAME IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCategoryName(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.CATEGORY_NAME.in(values));
    }

    /**
     * Find records that have <code>CATEGORY_NAME IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCategoryName(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.CATEGORY_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>AREA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByArea(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.AREA.in(values));
    }

    /**
     * Find records that have <code>AREA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByArea(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.AREA.in(values), limit);
    }

    /**
     * Find records that have <code>AREA_NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByAreaName(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.AREA_NAME.in(values));
    }

    /**
     * Find records that have <code>AREA_NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByAreaName(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.AREA_NAME.in(values), limit);
    }

    /**
     * Find records that have <code>AREA_CATEGORY IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByAreaCategory(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.AREA_CATEGORY.in(values));
    }

    /**
     * Find records that have <code>AREA_CATEGORY IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByAreaCategory(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.AREA_CATEGORY.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(EBrand.E_BRAND.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EBrand.E_BRAND.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EBrand.E_BRAND.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(EBrand.E_BRAND.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EBrand.E_BRAND.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<EBrandRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<EBrandRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EBrand, String>) super.queryExecutor();
    }
}
