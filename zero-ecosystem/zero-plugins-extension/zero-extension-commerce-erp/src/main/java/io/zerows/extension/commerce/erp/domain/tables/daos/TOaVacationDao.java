/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.erp.domain.tables.TOaVacation;
import io.zerows.extension.commerce.erp.domain.tables.records.TOaVacationRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TOaVacationDao extends AbstractVertxDAO<TOaVacationRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation, String, Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>>, Future<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<TOaVacationRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public TOaVacationDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(TOaVacation.T_OA_VACATION, io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation.class, new JDBCClassicQueryExecutor<TOaVacationRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation, String>(configuration, io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>COMMENT_EXTENSION IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByCommentExtension(final Collection<String> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.COMMENT_EXTENSION.in(values));
    }

    /**
     * Find records that have <code>COMMENT_EXTENSION IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByCommentExtension(final Collection<String> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.COMMENT_EXTENSION.in(values), limit);
    }

    /**
     * Find records that have <code>REQUEST_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByRequestBy(final Collection<String> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.REQUEST_BY.in(values));
    }

    /**
     * Find records that have <code>REQUEST_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByRequestBy(final Collection<String> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.REQUEST_BY.in(values), limit);
    }

    /**
     * Find records that have <code>CLASSIFICATION IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByClassification(final Collection<String> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.CLASSIFICATION.in(values));
    }

    /**
     * Find records that have <code>CLASSIFICATION IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByClassification(final Collection<String> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.CLASSIFICATION.in(values), limit);
    }

    /**
     * Find records that have <code>START_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByStartAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.START_AT.in(values));
    }

    /**
     * Find records that have <code>START_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByStartAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.START_AT.in(values), limit);
    }

    /**
     * Find records that have <code>END_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByEndAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.END_AT.in(values));
    }

    /**
     * Find records that have <code>END_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByEndAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.END_AT.in(values), limit);
    }

    /**
     * Find records that have <code>DAYS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByDays(final Collection<Integer> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.DAYS.in(values));
    }

    /**
     * Find records that have <code>DAYS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByDays(final Collection<Integer> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.DAYS.in(values), limit);
    }

    /**
     * Find records that have <code>REASON IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByReason(final Collection<String> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.REASON.in(values));
    }

    /**
     * Find records that have <code>REASON IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByReason(final Collection<String> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.REASON.in(values), limit);
    }

    /**
     * Find records that have <code>WORK_CONTENT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByWorkContent(final Collection<String> values) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.WORK_CONTENT.in(values));
    }

    /**
     * Find records that have <code>WORK_CONTENT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation>> findManyByWorkContent(final Collection<String> values, final int limit) {
        return findManyByCondition(TOaVacation.T_OA_VACATION.WORK_CONTENT.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<TOaVacationRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<TOaVacationRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.TOaVacation, String>) super.queryExecutor();
    }
}
