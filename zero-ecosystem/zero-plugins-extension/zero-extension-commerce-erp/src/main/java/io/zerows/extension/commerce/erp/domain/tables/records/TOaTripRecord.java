/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.erp.domain.tables.TOaTrip;
import io.zerows.extension.commerce.erp.domain.tables.interfaces.ITOaTrip;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TOaTripRecord extends UpdatableRecordImpl<TOaTripRecord> implements VertxPojo, Record11<String, String, String, LocalDateTime, LocalDateTime, Integer, String, String, String, String, String>, ITOaTrip {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached TOaTripRecord
     */
    public TOaTripRecord() {
        super(TOaTrip.T_OA_TRIP);
    }

    /**
     * Create a detached, initialised TOaTripRecord
     */
    public TOaTripRecord(final String key, final String commentExtension, final String requestBy, final LocalDateTime startAt, final LocalDateTime endAt, final Integer days, final String tripProvince, final String tripCity, final String tripAddress, final String reason, final String workContent) {
        super(TOaTrip.T_OA_TRIP);

        setKey(key);
        setCommentExtension(commentExtension);
        setRequestBy(requestBy);
        setStartAt(startAt);
        setEndAt(endAt);
        setDays(days);
        setTripProvince(tripProvince);
        setTripCity(tripCity);
        setTripAddress(tripAddress);
        setReason(reason);
        setWorkContent(workContent);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TOaTripRecord
     */
    public TOaTripRecord(final io.zerows.extension.commerce.erp.domain.tables.pojos.TOaTrip value) {
        super(TOaTrip.T_OA_TRIP);

        if (value != null) {
            setKey(value.getKey());
            setCommentExtension(value.getCommentExtension());
            setRequestBy(value.getRequestBy());
            setStartAt(value.getStartAt());
            setEndAt(value.getEndAt());
            setDays(value.getDays());
            setTripProvince(value.getTripProvince());
            setTripCity(value.getTripCity());
            setTripAddress(value.getTripAddress());
            setReason(value.getReason());
            setWorkContent(value.getWorkContent());
            resetChangedOnNotNull();
        }
    }

    public TOaTripRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.KEY</code>. 「key」- Ticket Primary Key
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.KEY</code>. 「key」- Ticket Primary Key
     */
    @Override
    public TOaTripRecord setKey(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.COMMENT_EXTENSION</code>.
     * 「commentExtension」- Extension Comment
     */
    @Override
    public String getCommentExtension() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.COMMENT_EXTENSION</code>.
     * 「commentExtension」- Extension Comment
     */
    @Override
    public TOaTripRecord setCommentExtension(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.REQUEST_BY</code>. 「requestBy」- Request
     * User
     */
    @Override
    public String getRequestBy() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.REQUEST_BY</code>. 「requestBy」- Request
     * User
     */
    @Override
    public TOaTripRecord setRequestBy(final String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.START_AT</code>. 「startAt」- From
     */
    @Override
    public LocalDateTime getStartAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.START_AT</code>. 「startAt」- From
     */
    @Override
    public TOaTripRecord setStartAt(final LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.END_AT</code>. 「endAt」- To
     */
    @Override
    public LocalDateTime getEndAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.END_AT</code>. 「endAt」- To
     */
    @Override
    public TOaTripRecord setEndAt(final LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.DAYS</code>. 「days」- Duration
     */
    @Override
    public Integer getDays() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.DAYS</code>. 「days」- Duration
     */
    @Override
    public TOaTripRecord setDays(final Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.TRIP_PROVINCE</code>. 「tripProvince」- Trip
     * Province
     */
    @Override
    public String getTripProvince() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.TRIP_PROVINCE</code>. 「tripProvince」- Trip
     * Province
     */
    @Override
    public TOaTripRecord setTripProvince(final String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.TRIP_CITY</code>. 「tripCity」- Trip City
     */
    @Override
    public String getTripCity() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.TRIP_CITY</code>. 「tripCity」- Trip City
     */
    @Override
    public TOaTripRecord setTripCity(final String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.TRIP_ADDRESS</code>. 「tripAddress」- Trip
     * Address
     */
    @Override
    public String getTripAddress() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.TRIP_ADDRESS</code>. 「tripAddress」- Trip
     * Address
     */
    @Override
    public TOaTripRecord setTripAddress(final String value) {
        set(8, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>ZDB.T_OA_TRIP.REASON</code>. 「reason」- The reason to be
     * done
     */
    @Override
    public String getReason() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>ZDB.T_OA_TRIP.REASON</code>. 「reason」- The reason to be
     * done
     */
    @Override
    public TOaTripRecord setReason(final String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.T_OA_TRIP.WORK_CONTENT</code>. 「workContent」-
     * Working Assignment Content
     */
    @Override
    public String getWorkContent() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.T_OA_TRIP.WORK_CONTENT</code>. 「workContent」-
     * Working Assignment Content
     */
    @Override
    public TOaTripRecord setWorkContent(final String value) {
        set(10, value);
        return this;
    }

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    @Override
    public Row11<String, String, String, LocalDateTime, LocalDateTime, Integer, String, String, String, String, String> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<String, String, String, LocalDateTime, LocalDateTime, Integer, String, String, String, String, String> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return TOaTrip.T_OA_TRIP.KEY;
    }

    @Override
    public Field<String> field2() {
        return TOaTrip.T_OA_TRIP.COMMENT_EXTENSION;
    }

    @Override
    public Field<String> field3() {
        return TOaTrip.T_OA_TRIP.REQUEST_BY;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return TOaTrip.T_OA_TRIP.START_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return TOaTrip.T_OA_TRIP.END_AT;
    }

    @Override
    public Field<Integer> field6() {
        return TOaTrip.T_OA_TRIP.DAYS;
    }

    @Override
    public Field<String> field7() {
        return TOaTrip.T_OA_TRIP.TRIP_PROVINCE;
    }

    @Override
    public Field<String> field8() {
        return TOaTrip.T_OA_TRIP.TRIP_CITY;
    }

    @Override
    public Field<String> field9() {
        return TOaTrip.T_OA_TRIP.TRIP_ADDRESS;
    }

    @Override
    public Field<String> field10() {
        return TOaTrip.T_OA_TRIP.REASON;
    }

    @Override
    public Field<String> field11() {
        return TOaTrip.T_OA_TRIP.WORK_CONTENT;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getCommentExtension();
    }

    @Override
    public String component3() {
        return getRequestBy();
    }

    @Override
    public LocalDateTime component4() {
        return getStartAt();
    }

    @Override
    public LocalDateTime component5() {
        return getEndAt();
    }

    @Override
    public Integer component6() {
        return getDays();
    }

    @Override
    public String component7() {
        return getTripProvince();
    }

    @Override
    public String component8() {
        return getTripCity();
    }

    @Override
    public String component9() {
        return getTripAddress();
    }

    @Override
    public String component10() {
        return getReason();
    }

    @Override
    public String component11() {
        return getWorkContent();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getCommentExtension();
    }

    @Override
    public String value3() {
        return getRequestBy();
    }

    @Override
    public LocalDateTime value4() {
        return getStartAt();
    }

    @Override
    public LocalDateTime value5() {
        return getEndAt();
    }

    @Override
    public Integer value6() {
        return getDays();
    }

    @Override
    public String value7() {
        return getTripProvince();
    }

    @Override
    public String value8() {
        return getTripCity();
    }

    @Override
    public String value9() {
        return getTripAddress();
    }

    @Override
    public String value10() {
        return getReason();
    }

    @Override
    public String value11() {
        return getWorkContent();
    }

    @Override
    public TOaTripRecord value1(final String value) {
        setKey(value);
        return this;
    }

    @Override
    public TOaTripRecord value2(final String value) {
        setCommentExtension(value);
        return this;
    }

    @Override
    public TOaTripRecord value3(final String value) {
        setRequestBy(value);
        return this;
    }

    @Override
    public TOaTripRecord value4(final LocalDateTime value) {
        setStartAt(value);
        return this;
    }

    @Override
    public TOaTripRecord value5(final LocalDateTime value) {
        setEndAt(value);
        return this;
    }

    @Override
    public TOaTripRecord value6(final Integer value) {
        setDays(value);
        return this;
    }

    @Override
    public TOaTripRecord value7(final String value) {
        setTripProvince(value);
        return this;
    }

    @Override
    public TOaTripRecord value8(final String value) {
        setTripCity(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public TOaTripRecord value9(final String value) {
        setTripAddress(value);
        return this;
    }

    @Override
    public TOaTripRecord value10(final String value) {
        setReason(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public TOaTripRecord value11(final String value) {
        setWorkContent(value);
        return this;
    }

    @Override
    public TOaTripRecord values(final String value1, final String value2, final String value3, final LocalDateTime value4, final LocalDateTime value5, final Integer value6, final String value7, final String value8, final String value9, final String value10, final String value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    @Override
    public void from(final ITOaTrip from) {
        setKey(from.getKey());
        setCommentExtension(from.getCommentExtension());
        setRequestBy(from.getRequestBy());
        setStartAt(from.getStartAt());
        setEndAt(from.getEndAt());
        setDays(from.getDays());
        setTripProvince(from.getTripProvince());
        setTripCity(from.getTripCity());
        setTripAddress(from.getTripAddress());
        setReason(from.getReason());
        setWorkContent(from.getWorkContent());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends ITOaTrip> E into(final E into) {
        into.from(this);
        return into;
    }
}
