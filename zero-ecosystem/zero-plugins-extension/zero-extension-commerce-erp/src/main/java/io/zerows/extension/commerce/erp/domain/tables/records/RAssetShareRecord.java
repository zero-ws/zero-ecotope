/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.erp.domain.tables.RAssetShare;
import io.zerows.extension.commerce.erp.domain.tables.interfaces.IRAssetShare;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RAssetShareRecord extends UpdatableRecordImpl<RAssetShareRecord> implements VertxPojo, Record5<String, String, String, String, String>, IRAssetShare {

    private static final long serialVersionUID = 1L;

    /**
     * Create a detached RAssetShareRecord
     */
    public RAssetShareRecord() {
        super(RAssetShare.R_ASSET_SHARE);
    }

    /**
     * Create a detached, initialised RAssetShareRecord
     */
    public RAssetShareRecord(final String assetId, final String entityType, final String entityId, final String linkComponent, final String comment) {
        super(RAssetShare.R_ASSET_SHARE);

        setAssetId(assetId);
        setEntityType(entityType);
        setEntityId(entityId);
        setLinkComponent(linkComponent);
        setComment(comment);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised RAssetShareRecord
     */
    public RAssetShareRecord(final io.zerows.extension.commerce.erp.domain.tables.pojos.RAssetShare value) {
        super(RAssetShare.R_ASSET_SHARE);

        if (value != null) {
            setAssetId(value.getAssetId());
            setEntityType(value.getEntityType());
            setEntityId(value.getEntityId());
            setLinkComponent(value.getLinkComponent());
            setComment(value.getComment());
            resetChangedOnNotNull();
        }
    }

    public RAssetShareRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.ASSET_ID</code>. 「assetId」- 资产ID
     */
    @Override
    public String getAssetId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.ASSET_ID</code>. 「assetId」- 资产ID
     */
    @Override
    public RAssetShareRecord setAssetId(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.ENTITY_TYPE</code>. 「entityType」- 关联类型
     */
    @Override
    public String getEntityType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.ENTITY_TYPE</code>. 「entityType」- 关联类型
     */
    @Override
    public RAssetShareRecord setEntityType(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.ENTITY_ID</code>. 「entityId」- 关联实体ID
     */
    @Override
    public String getEntityId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.ENTITY_ID</code>. 「entityId」- 关联实体ID
     */
    @Override
    public RAssetShareRecord setEntityId(final String value) {
        set(2, value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public String getLinkComponent() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public RAssetShareRecord setLinkComponent(final String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public RAssetShareRecord setComment(final String value) {
        set(4, value);
        return this;
    }

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    @Override
    public Row5<String, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<String, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return RAssetShare.R_ASSET_SHARE.ASSET_ID;
    }

    @Override
    public Field<String> field2() {
        return RAssetShare.R_ASSET_SHARE.ENTITY_TYPE;
    }

    @Override
    public Field<String> field3() {
        return RAssetShare.R_ASSET_SHARE.ENTITY_ID;
    }

    @Override
    public Field<String> field4() {
        return RAssetShare.R_ASSET_SHARE.LINK_COMPONENT;
    }

    @Override
    public Field<String> field5() {
        return RAssetShare.R_ASSET_SHARE.COMMENT;
    }

    @Override
    public String component1() {
        return getAssetId();
    }

    @Override
    public String component2() {
        return getEntityType();
    }

    @Override
    public String component3() {
        return getEntityId();
    }

    @Override
    public String component4() {
        return getLinkComponent();
    }

    @Override
    public String component5() {
        return getComment();
    }

    @Override
    public String value1() {
        return getAssetId();
    }

    @Override
    public String value2() {
        return getEntityType();
    }

    @Override
    public String value3() {
        return getEntityId();
    }

    @Override
    public String value4() {
        return getLinkComponent();
    }

    @Override
    public String value5() {
        return getComment();
    }

    @Override
    public RAssetShareRecord value1(final String value) {
        setAssetId(value);
        return this;
    }

    @Override
    public RAssetShareRecord value2(final String value) {
        setEntityType(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public RAssetShareRecord value3(final String value) {
        setEntityId(value);
        return this;
    }

    @Override
    public RAssetShareRecord value4(final String value) {
        setLinkComponent(value);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    @Override
    public RAssetShareRecord value5(final String value) {
        setComment(value);
        return this;
    }

    @Override
    public RAssetShareRecord values(final String value1, final String value2, final String value3, final String value4, final String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    @Override
    public void from(final IRAssetShare from) {
        setAssetId(from.getAssetId());
        setEntityType(from.getEntityType());
        setEntityId(from.getEntityId());
        setLinkComponent(from.getLinkComponent());
        setComment(from.getComment());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IRAssetShare> E into(final E into) {
        into.from(this);
        return into;
    }
}
