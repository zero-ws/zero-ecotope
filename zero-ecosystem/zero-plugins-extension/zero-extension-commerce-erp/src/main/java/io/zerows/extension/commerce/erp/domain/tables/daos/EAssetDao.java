/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.commerce.erp.domain.tables.EAsset;
import io.zerows.extension.commerce.erp.domain.tables.records.EAssetRecord;
import org.jooq.Configuration;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class EAssetDao extends AbstractVertxDAO<EAssetRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset, String, Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>>, Future<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<EAssetRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public EAssetDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(EAsset.E_ASSET, io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset.class, new JDBCClassicQueryExecutor<EAssetRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset, String>(configuration, io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByName(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCode(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.CODE.in(values));
    }

    /**
     * Find records that have <code>CODE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCode(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.CODE.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByType(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByStatus(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.STATUS.in(values));
    }

    /**
     * Find records that have <code>STATUS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByStatus(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.STATUS.in(values), limit);
    }

    /**
     * Find records that have <code>MODEL_NUMBER IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByModelNumber(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.MODEL_NUMBER.in(values));
    }

    /**
     * Find records that have <code>MODEL_NUMBER IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByModelNumber(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.MODEL_NUMBER.in(values), limit);
    }

    /**
     * Find records that have <code>UNIT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUnit(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.UNIT.in(values));
    }

    /**
     * Find records that have <code>UNIT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUnit(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.UNIT.in(values), limit);
    }

    /**
     * Find records that have <code>NUM IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNum(final Collection<Long> values) {
        return findManyByCondition(EAsset.E_ASSET.NUM.in(values));
    }

    /**
     * Find records that have <code>NUM IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNum(final Collection<Long> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.NUM.in(values), limit);
    }

    /**
     * Find records that have <code>NUM_DEPRECATING IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumDeprecating(final Collection<Long> values) {
        return findManyByCondition(EAsset.E_ASSET.NUM_DEPRECATING.in(values));
    }

    /**
     * Find records that have <code>NUM_DEPRECATING IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumDeprecating(final Collection<Long> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.NUM_DEPRECATING.in(values), limit);
    }

    /**
     * Find records that have <code>NUM_DEPRECATED IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumDeprecated(final Collection<Long> values) {
        return findManyByCondition(EAsset.E_ASSET.NUM_DEPRECATED.in(values));
    }

    /**
     * Find records that have <code>NUM_DEPRECATED IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumDeprecated(final Collection<Long> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.NUM_DEPRECATED.in(values), limit);
    }

    /**
     * Find records that have <code>NUM_USING IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumUsing(final Collection<Long> values) {
        return findManyByCondition(EAsset.E_ASSET.NUM_USING.in(values));
    }

    /**
     * Find records that have <code>NUM_USING IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumUsing(final Collection<Long> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.NUM_USING.in(values), limit);
    }

    /**
     * Find records that have <code>NUM_USED IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumUsed(final Collection<Long> values) {
        return findManyByCondition(EAsset.E_ASSET.NUM_USED.in(values));
    }

    /**
     * Find records that have <code>NUM_USED IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByNumUsed(final Collection<Long> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.NUM_USED.in(values), limit);
    }

    /**
     * Find records that have <code>WAY_CHANGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByWayChange(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.WAY_CHANGE.in(values));
    }

    /**
     * Find records that have <code>WAY_CHANGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByWayChange(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.WAY_CHANGE.in(values), limit);
    }

    /**
     * Find records that have <code>WAY_DEPRECATE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByWayDeprecate(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.WAY_DEPRECATE.in(values));
    }

    /**
     * Find records that have <code>WAY_DEPRECATE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByWayDeprecate(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.WAY_DEPRECATE.in(values), limit);
    }

    /**
     * Find records that have <code>WAY_ACCORDING IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByWayAccording(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.WAY_ACCORDING.in(values));
    }

    /**
     * Find records that have <code>WAY_ACCORDING IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByWayAccording(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.WAY_ACCORDING.in(values), limit);
    }

    /**
     * Find records that have <code>USED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUsedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EAsset.E_ASSET.USED_AT.in(values));
    }

    /**
     * Find records that have <code>USED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUsedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.USED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>USED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUsedBy(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.USED_BY.in(values));
    }

    /**
     * Find records that have <code>USED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUsedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.USED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>USED_STATUS IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUsedStatus(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.USED_STATUS.in(values));
    }

    /**
     * Find records that have <code>USED_STATUS IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUsedStatus(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.USED_STATUS.in(values), limit);
    }

    /**
     * Find records that have <code>V_ORIGINAL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVOriginal(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_ORIGINAL.in(values));
    }

    /**
     * Find records that have <code>V_ORIGINAL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVOriginal(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_ORIGINAL.in(values), limit);
    }

    /**
     * Find records that have <code>V_TAX IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVTax(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_TAX.in(values));
    }

    /**
     * Find records that have <code>V_TAX IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVTax(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_TAX.in(values), limit);
    }

    /**
     * Find records that have <code>V_DE_READY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVDeReady(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_DE_READY.in(values));
    }

    /**
     * Find records that have <code>V_DE_READY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVDeReady(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_DE_READY.in(values), limit);
    }

    /**
     * Find records that have <code>V_NET_JUNK IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVNetJunk(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_NET_JUNK.in(values));
    }

    /**
     * Find records that have <code>V_NET_JUNK IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVNetJunk(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_NET_JUNK.in(values), limit);
    }

    /**
     * Find records that have <code>V_NET IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVNet(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_NET.in(values));
    }

    /**
     * Find records that have <code>V_NET IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVNet(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_NET.in(values), limit);
    }

    /**
     * Find records that have <code>V_NET_AMOUNT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVNetAmount(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_NET_AMOUNT.in(values));
    }

    /**
     * Find records that have <code>V_NET_AMOUNT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVNetAmount(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_NET_AMOUNT.in(values), limit);
    }

    /**
     * Find records that have <code>V_DEPRECATED_M IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVDeprecatedM(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_DEPRECATED_M.in(values));
    }

    /**
     * Find records that have <code>V_DEPRECATED_M IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVDeprecatedM(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_DEPRECATED_M.in(values), limit);
    }

    /**
     * Find records that have <code>V_DEPRECATED_A IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVDeprecatedA(final Collection<BigDecimal> values) {
        return findManyByCondition(EAsset.E_ASSET.V_DEPRECATED_A.in(values));
    }

    /**
     * Find records that have <code>V_DEPRECATED_A IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByVDeprecatedA(final Collection<BigDecimal> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.V_DEPRECATED_A.in(values), limit);
    }

    /**
     * Find records that have <code>K_FIXED IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKFixed(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.K_FIXED.in(values));
    }

    /**
     * Find records that have <code>K_FIXED IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKFixed(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.K_FIXED.in(values), limit);
    }

    /**
     * Find records that have <code>K_DEPRECATED IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKDeprecated(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.K_DEPRECATED.in(values));
    }

    /**
     * Find records that have <code>K_DEPRECATED IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKDeprecated(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.K_DEPRECATED.in(values), limit);
    }

    /**
     * Find records that have <code>K_ASSIGNMENT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKAssignment(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.K_ASSIGNMENT.in(values));
    }

    /**
     * Find records that have <code>K_ASSIGNMENT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKAssignment(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.K_ASSIGNMENT.in(values), limit);
    }

    /**
     * Find records that have <code>K_TAX IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKTax(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.K_TAX.in(values));
    }

    /**
     * Find records that have <code>K_TAX IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKTax(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.K_TAX.in(values), limit);
    }

    /**
     * Find records that have <code>K_DEVALUE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKDevalue(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.K_DEVALUE.in(values));
    }

    /**
     * Find records that have <code>K_DEVALUE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKDevalue(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.K_DEVALUE.in(values), limit);
    }

    /**
     * Find records that have <code>K_CHANGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKChange(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.K_CHANGE.in(values));
    }

    /**
     * Find records that have <code>K_CHANGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByKChange(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.K_CHANGE.in(values), limit);
    }

    /**
     * Find records that have <code>CUSTOMER_ID IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCustomerId(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.CUSTOMER_ID.in(values));
    }

    /**
     * Find records that have <code>CUSTOMER_ID IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCustomerId(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.CUSTOMER_ID.in(values), limit);
    }

    /**
     * Find records that have <code>EXPIRED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByExpiredAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EAsset.E_ASSET.EXPIRED_AT.in(values));
    }

    /**
     * Find records that have <code>EXPIRED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByExpiredAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.EXPIRED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>EXPIRED_COMMENT IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByExpiredComment(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.EXPIRED_COMMENT.in(values));
    }

    /**
     * Find records that have <code>EXPIRED_COMMENT IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByExpiredComment(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.EXPIRED_COMMENT.in(values), limit);
    }

    /**
     * Find records that have <code>USER_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUserId(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.USER_ID.in(values));
    }

    /**
     * Find records that have <code>USER_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUserId(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.USER_ID.in(values), limit);
    }

    /**
     * Find records that have <code>STORE_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByStoreId(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.STORE_ID.in(values));
    }

    /**
     * Find records that have <code>STORE_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByStoreId(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.STORE_ID.in(values), limit);
    }

    /**
     * Find records that have <code>DEPT_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByDeptId(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.DEPT_ID.in(values));
    }

    /**
     * Find records that have <code>DEPT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByDeptId(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.DEPT_ID.in(values), limit);
    }

    /**
     * Find records that have <code>COMPANY_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCompanyId(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.COMPANY_ID.in(values));
    }

    /**
     * Find records that have <code>COMPANY_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCompanyId(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.COMPANY_ID.in(values), limit);
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByParentId(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.PARENT_ID.in(values));
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByParentId(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.PARENT_ID.in(values), limit);
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByComment(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.COMMENT.in(values));
    }

    /**
     * Find records that have <code>COMMENT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByComment(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.COMMENT.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(EAsset.E_ASSET.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>ENTER_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByEnterAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EAsset.E_ASSET.ENTER_AT.in(values));
    }

    /**
     * Find records that have <code>ENTER_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByEnterAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.ENTER_AT.in(values), limit);
    }

    /**
     * Find records that have <code>ENTER_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByEnterBy(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.ENTER_BY.in(values));
    }

    /**
     * Find records that have <code>ENTER_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByEnterBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.ENTER_BY.in(values), limit);
    }

    /**
     * Find records that have <code>ACCOUNT_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByAccountAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EAsset.E_ASSET.ACCOUNT_AT.in(values));
    }

    /**
     * Find records that have <code>ACCOUNT_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByAccountAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.ACCOUNT_AT.in(values), limit);
    }

    /**
     * Find records that have <code>ACCOUNT_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByAccountBy(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.ACCOUNT_BY.in(values));
    }

    /**
     * Find records that have <code>ACCOUNT_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByAccountBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.ACCOUNT_BY.in(values), limit);
    }

    /**
     * Find records that have <code>SCRAP_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByScrapAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EAsset.E_ASSET.SCRAP_AT.in(values));
    }

    /**
     * Find records that have <code>SCRAP_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByScrapAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.SCRAP_AT.in(values), limit);
    }

    /**
     * Find records that have <code>SCRAP_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByScrapBy(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.SCRAP_BY.in(values));
    }

    /**
     * Find records that have <code>SCRAP_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByScrapBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.SCRAP_BY.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EAsset.E_ASSET.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(EAsset.E_ASSET.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(EAsset.E_ASSET.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(EAsset.E_ASSET.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<EAssetRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<EAssetRecord, io.zerows.extension.commerce.erp.domain.tables.pojos.EAsset, String>) super.queryExecutor();
    }
}
