/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.erp.domain.tables.RCompanyCustomer;
import io.zerows.extension.commerce.erp.domain.tables.interfaces.IRCompanyCustomer;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


import static io.r2mo.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RCompanyCustomerRecord extends UpdatableRecordImpl<RCompanyCustomerRecord> implements VertxPojo, IRCompanyCustomer {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.R_COMPANY_CUSTOMER.COMPANY_ID</code>. 「companyId」-
     * 企业的ID
     */
    @Override
    public RCompanyCustomerRecord setCompanyId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_COMPANY_CUSTOMER.COMPANY_ID</code>. 「companyId」-
     * 企业的ID
     */
    @Override
    public String getCompanyId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.R_COMPANY_CUSTOMER.CUSTOMER_ID</code>. 「customerId」-
     * 客户信息的ID
     */
    @Override
    public RCompanyCustomerRecord setCustomerId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_COMPANY_CUSTOMER.CUSTOMER_ID</code>. 「customerId」-
     * 客户信息的ID
     */
    @Override
    public String getCustomerId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.R_COMPANY_CUSTOMER.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public RCompanyCustomerRecord setLinkComponent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_COMPANY_CUSTOMER.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public String getLinkComponent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.R_COMPANY_CUSTOMER.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public RCompanyCustomerRecord setComment(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_COMPANY_CUSTOMER.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRCompanyCustomer from) {
        setCompanyId(from.getCompanyId());
        setCustomerId(from.getCustomerId());
        setLinkComponent(from.getLinkComponent());
        setComment(from.getComment());
        resetTouchedOnNotNull();
    }

    @Override
    public <E extends IRCompanyCustomer> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RCompanyCustomerRecord
     */
    public RCompanyCustomerRecord() {
        super(RCompanyCustomer.R_COMPANY_CUSTOMER);
    }

    /**
     * Create a detached, initialised RCompanyCustomerRecord
     */
    public RCompanyCustomerRecord(String companyId, String customerId, String linkComponent, String comment) {
        super(RCompanyCustomer.R_COMPANY_CUSTOMER);

        setCompanyId(companyId);
        setCustomerId(customerId);
        setLinkComponent(linkComponent);
        setComment(comment);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised RCompanyCustomerRecord
     */
    public RCompanyCustomerRecord(IRCompanyCustomer value) {
        super(RCompanyCustomer.R_COMPANY_CUSTOMER);

        if (value != null) {
            setCompanyId(value.getCompanyId());
            setCustomerId(value.getCustomerId());
            setLinkComponent(value.getLinkComponent());
            setComment(value.getComment());
            resetTouchedOnNotNull();
        }
    }

        public RCompanyCustomerRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
