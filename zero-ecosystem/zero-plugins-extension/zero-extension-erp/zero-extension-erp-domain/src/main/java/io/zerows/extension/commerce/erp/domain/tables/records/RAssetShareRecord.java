/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.erp.domain.tables.RAssetShare;
import io.zerows.extension.commerce.erp.domain.tables.interfaces.IRAssetShare;

import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;


import static io.r2mo.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RAssetShareRecord extends UpdatableRecordImpl<RAssetShareRecord> implements VertxPojo, IRAssetShare {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.ASSET_ID</code>. 「assetId」- 资产ID
     */
    @Override
    public RAssetShareRecord setAssetId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.ASSET_ID</code>. 「assetId」- 资产ID
     */
    @Override
    public String getAssetId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.ENTITY_TYPE</code>. 「entityType」- 关联类型
     */
    @Override
    public RAssetShareRecord setEntityType(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.ENTITY_TYPE</code>. 「entityType」- 关联类型
     */
    @Override
    public String getEntityType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.ENTITY_ID</code>. 「entityId」- 关联实体ID
     */
    @Override
    public RAssetShareRecord setEntityId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.ENTITY_ID</code>. 「entityId」- 关联实体ID
     */
    @Override
    public String getEntityId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public RAssetShareRecord setLinkComponent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public String getLinkComponent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.R_ASSET_SHARE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public RAssetShareRecord setComment(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_ASSET_SHARE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRAssetShare from) {
        setAssetId(from.getAssetId());
        setEntityType(from.getEntityType());
        setEntityId(from.getEntityId());
        setLinkComponent(from.getLinkComponent());
        setComment(from.getComment());
        resetTouchedOnNotNull();
    }

    @Override
    public <E extends IRAssetShare> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RAssetShareRecord
     */
    public RAssetShareRecord() {
        super(RAssetShare.R_ASSET_SHARE);
    }

    /**
     * Create a detached, initialised RAssetShareRecord
     */
    public RAssetShareRecord(String assetId, String entityType, String entityId, String linkComponent, String comment) {
        super(RAssetShare.R_ASSET_SHARE);

        setAssetId(assetId);
        setEntityType(entityType);
        setEntityId(entityId);
        setLinkComponent(linkComponent);
        setComment(comment);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised RAssetShareRecord
     */
    public RAssetShareRecord(IRAssetShare value) {
        super(RAssetShare.R_ASSET_SHARE);

        if (value != null) {
            setAssetId(value.getAssetId());
            setEntityType(value.getEntityType());
            setEntityId(value.getEntityId());
            setLinkComponent(value.getLinkComponent());
            setComment(value.getComment());
            resetTouchedOnNotNull();
        }
    }

        public RAssetShareRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
