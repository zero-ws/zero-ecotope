/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.erp.domain.tables.ETeam;
import io.zerows.extension.commerce.erp.domain.tables.interfaces.IETeam;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


import static io.r2mo.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class ETeamRecord extends UpdatableRecordImpl<ETeamRecord> implements VertxPojo, IETeam {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.E_TEAM.KEY</code>. 「key」- 组主键
     */
    @Override
    public ETeamRecord setKey(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.KEY</code>. 「key」- 组主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.NAME</code>. 「name」- 组名称
     */
    @Override
    public ETeamRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.NAME</code>. 「name」- 组名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.CODE</code>. 「code」- 组编号
     */
    @Override
    public ETeamRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.CODE</code>. 「code」- 组编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.LEADER_ID</code>. 「leaderId」- 组长
     */
    @Override
    public ETeamRecord setLeaderId(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.LEADER_ID</code>. 「leaderId」- 组长
     */
    @Override
    public String getLeaderId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.LEADER_NAME</code>. 「leaderName」- 组长姓名
     */
    @Override
    public ETeamRecord setLeaderName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.LEADER_NAME</code>. 「leaderName」- 组长姓名
     */
    @Override
    public String getLeaderName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.DEPT_ID</code>. 「deptId」- 所属部门
     */
    @Override
    public ETeamRecord setDeptId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.DEPT_ID</code>. 「deptId」- 所属部门
     */
    @Override
    public String getDeptId() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.TEAM_ID</code>. 「teamId」- 父组ID
     */
    @Override
    public ETeamRecord setTeamId(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.TEAM_ID</code>. 「teamId」- 父组ID
     */
    @Override
    public String getTeamId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.COMMENT</code>. 「comment」- 组备注
     */
    @Override
    public ETeamRecord setComment(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.COMMENT</code>. 「comment」- 组备注
     */
    @Override
    public String getComment() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.BIND_ID</code>. 「bindId」- 绑定用户组ID,安全专用处理
     */
    @Override
    public ETeamRecord setBindId(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.BIND_ID</code>. 「bindId」- 绑定用户组ID,安全专用处理
     */
    @Override
    public String getBindId() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.BIND_COMPONENT</code>. 「bindComponent」-
     * 绑定扩展组件
     */
    @Override
    public ETeamRecord setBindComponent(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.BIND_COMPONENT</code>. 「bindComponent」-
     * 绑定扩展组件
     */
    @Override
    public String getBindComponent() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.BIND_CONFIG</code>. 「bindConfig」- 绑定JSON详细配置
     */
    @Override
    public ETeamRecord setBindConfig(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.BIND_CONFIG</code>. 「bindConfig」- 绑定JSON详细配置
     */
    @Override
    public String getBindConfig() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public ETeamRecord setMetadata(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public ETeamRecord setActive(Boolean value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(12);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public ETeamRecord setSigma(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public ETeamRecord setLanguage(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public ETeamRecord setCreatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public ETeamRecord setCreatedBy(String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public ETeamRecord setUpdatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>ZDB.E_TEAM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public ETeamRecord setUpdatedBy(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.E_TEAM.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IETeam from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setLeaderId(from.getLeaderId());
        setLeaderName(from.getLeaderName());
        setDeptId(from.getDeptId());
        setTeamId(from.getTeamId());
        setComment(from.getComment());
        setBindId(from.getBindId());
        setBindComponent(from.getBindComponent());
        setBindConfig(from.getBindConfig());
        setMetadata(from.getMetadata());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetTouchedOnNotNull();
    }

    @Override
    public <E extends IETeam> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ETeamRecord
     */
    public ETeamRecord() {
        super(ETeam.E_TEAM);
    }

    /**
     * Create a detached, initialised ETeamRecord
     */
    public ETeamRecord(String key, String name, String code, String leaderId, String leaderName, String deptId, String teamId, String comment, String bindId, String bindComponent, String bindConfig, String metadata, Boolean active, String sigma, String language, LocalDateTime createdAt, String createdBy, LocalDateTime updatedAt, String updatedBy) {
        super(ETeam.E_TEAM);

        setKey(key);
        setName(name);
        setCode(code);
        setLeaderId(leaderId);
        setLeaderName(leaderName);
        setDeptId(deptId);
        setTeamId(teamId);
        setComment(comment);
        setBindId(bindId);
        setBindComponent(bindComponent);
        setBindConfig(bindConfig);
        setMetadata(metadata);
        setActive(active);
        setSigma(sigma);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised ETeamRecord
     */
    public ETeamRecord(IETeam value) {
        super(ETeam.E_TEAM);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setLeaderId(value.getLeaderId());
            setLeaderName(value.getLeaderName());
            setDeptId(value.getDeptId());
            setTeamId(value.getTeamId());
            setComment(value.getComment());
            setBindId(value.getBindId());
            setBindComponent(value.getBindComponent());
            setBindConfig(value.getBindConfig());
            setMetadata(value.getMetadata());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetTouchedOnNotNull();
        }
    }

        public ETeamRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
