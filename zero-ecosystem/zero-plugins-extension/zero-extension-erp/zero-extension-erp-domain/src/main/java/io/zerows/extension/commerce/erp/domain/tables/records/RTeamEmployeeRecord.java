/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.commerce.erp.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.commerce.erp.domain.tables.RTeamEmployee;
import io.zerows.extension.commerce.erp.domain.tables.interfaces.IRTeamEmployee;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


import static io.r2mo.vertx.jooq.shared.internal.VertxPojo.*;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RTeamEmployeeRecord extends UpdatableRecordImpl<RTeamEmployeeRecord> implements VertxPojo, IRTeamEmployee {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.R_TEAM_EMPLOYEE.TEAM_ID</code>. 「teamId」- 组的ID
     */
    @Override
    public RTeamEmployeeRecord setTeamId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TEAM_EMPLOYEE.TEAM_ID</code>. 「teamId」- 组的ID
     */
    @Override
    public String getTeamId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.R_TEAM_EMPLOYEE.EMPLOYEE_ID</code>. 「employeeId」-
     * 员工ID
     */
    @Override
    public RTeamEmployeeRecord setEmployeeId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TEAM_EMPLOYEE.EMPLOYEE_ID</code>. 「employeeId」-
     * 员工ID
     */
    @Override
    public String getEmployeeId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.R_TEAM_EMPLOYEE.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public RTeamEmployeeRecord setLinkComponent(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TEAM_EMPLOYEE.LINK_COMPONENT</code>.
     * 「linkComponent」- 关联执行组件（扩展用）
     */
    @Override
    public String getLinkComponent() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.R_TEAM_EMPLOYEE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public RTeamEmployeeRecord setComment(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TEAM_EMPLOYEE.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRTeamEmployee from) {
        setTeamId(from.getTeamId());
        setEmployeeId(from.getEmployeeId());
        setLinkComponent(from.getLinkComponent());
        setComment(from.getComment());
        resetTouchedOnNotNull();
    }

    @Override
    public <E extends IRTeamEmployee> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RTeamEmployeeRecord
     */
    public RTeamEmployeeRecord() {
        super(RTeamEmployee.R_TEAM_EMPLOYEE);
    }

    /**
     * Create a detached, initialised RTeamEmployeeRecord
     */
    public RTeamEmployeeRecord(String teamId, String employeeId, String linkComponent, String comment) {
        super(RTeamEmployee.R_TEAM_EMPLOYEE);

        setTeamId(teamId);
        setEmployeeId(employeeId);
        setLinkComponent(linkComponent);
        setComment(comment);
        resetTouchedOnNotNull();
    }

    /**
     * Create a detached, initialised RTeamEmployeeRecord
     */
    public RTeamEmployeeRecord(IRTeamEmployee value) {
        super(RTeamEmployee.R_TEAM_EMPLOYEE);

        if (value != null) {
            setTeamId(value.getTeamId());
            setEmployeeId(value.getEmployeeId());
            setLinkComponent(value.getLinkComponent());
            setComment(value.getComment());
            resetTouchedOnNotNull();
        }
    }

        public RTeamEmployeeRecord(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }
}
