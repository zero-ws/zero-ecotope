/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.ambient.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.ambient.domain.tables.XMenu;
import io.zerows.extension.runtime.ambient.domain.tables.records.XMenuRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class XMenuDao extends AbstractVertxDAO<XMenuRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu, String, Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>>, Future<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<XMenuRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public XMenuDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(XMenu.X_MENU, io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu.class, new JDBCClassicQueryExecutor<XMenuRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu, String>(configuration, io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByName(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>ICON IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByIcon(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.ICON.in(values));
    }

    /**
     * Find records that have <code>ICON IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByIcon(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.ICON.in(values), limit);
    }

    /**
     * Find records that have <code>TEXT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByText(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.TEXT.in(values));
    }

    /**
     * Find records that have <code>TEXT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByText(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.TEXT.in(values), limit);
    }

    /**
     * Find records that have <code>URI IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByUri(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.URI.in(values));
    }

    /**
     * Find records that have <code>URI IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByUri(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.URI.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByType(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>ORDER IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByOrder(final Collection<Long> values) {
        return findManyByCondition(XMenu.X_MENU.ORDER.in(values));
    }

    /**
     * Find records that have <code>ORDER IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByOrder(final Collection<Long> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.ORDER.in(values), limit);
    }

    /**
     * Find records that have <code>LEVEL IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByLevel(final Collection<Long> values) {
        return findManyByCondition(XMenu.X_MENU.LEVEL.in(values));
    }

    /**
     * Find records that have <code>LEVEL IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByLevel(final Collection<Long> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.LEVEL.in(values), limit);
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByParentId(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.PARENT_ID.in(values));
    }

    /**
     * Find records that have <code>PARENT_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByParentId(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.PARENT_ID.in(values), limit);
    }

    /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByAppId(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.APP_ID.in(values));
    }

    /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByAppId(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.APP_ID.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(XMenu.X_MENU.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(XMenu.X_MENU.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(XMenu.X_MENU.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(XMenu.X_MENU.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(XMenu.X_MENU.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<XMenuRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<XMenuRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XMenu, String>) super.queryExecutor();
    }
}
