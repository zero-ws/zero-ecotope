/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.ambient.domain.tables.pojos;


import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.runtime.ambient.domain.tables.interfaces.IRTagObject;
/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RTagObject implements VertxPojo, IRTagObject {

    private static final long serialVersionUID = 1L;

    private String tagId;
    private String entityType;
    private String entityId;
    private String linkComponent;
    private String comment;

    public RTagObject() {}

    public RTagObject(IRTagObject value) {
        this.tagId = value.getTagId();
        this.entityType = value.getEntityType();
        this.entityId = value.getEntityId();
        this.linkComponent = value.getLinkComponent();
        this.comment = value.getComment();
    }

    public RTagObject(
        String tagId,
        String entityType,
        String entityId,
        String linkComponent,
        String comment
    ) {
        this.tagId = tagId;
        this.entityType = entityType;
        this.entityId = entityId;
        this.linkComponent = linkComponent;
        this.comment = comment;
    }

        public RTagObject(io.vertx.core.json.JsonObject json) {
                this();
                fromJson(json);
        }

    /**
     * Getter for <code>ZDB.R_TAG_OBJECT.TAG_ID</code>. 「tagId」- 标签ID
     */
    @Override
    public String getTagId() {
        return this.tagId;
    }

    /**
     * Setter for <code>ZDB.R_TAG_OBJECT.TAG_ID</code>. 「tagId」- 标签ID
     */
    @Override
    public RTagObject setTagId(String tagId) {
        this.tagId = tagId;
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TAG_OBJECT.ENTITY_TYPE</code>. 「entityType」- 关联类型
     */
    @Override
    public String getEntityType() {
        return this.entityType;
    }

    /**
     * Setter for <code>ZDB.R_TAG_OBJECT.ENTITY_TYPE</code>. 「entityType」- 关联类型
     */
    @Override
    public RTagObject setEntityType(String entityType) {
        this.entityType = entityType;
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TAG_OBJECT.ENTITY_ID</code>. 「entityId」- 关联实体ID
     */
    @Override
    public String getEntityId() {
        return this.entityId;
    }

    /**
     * Setter for <code>ZDB.R_TAG_OBJECT.ENTITY_ID</code>. 「entityId」- 关联实体ID
     */
    @Override
    public RTagObject setEntityId(String entityId) {
        this.entityId = entityId;
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TAG_OBJECT.LINK_COMPONENT</code>. 「linkComponent」-
     * 关联执行组件（扩展用）
     */
    @Override
    public String getLinkComponent() {
        return this.linkComponent;
    }

    /**
     * Setter for <code>ZDB.R_TAG_OBJECT.LINK_COMPONENT</code>. 「linkComponent」-
     * 关联执行组件（扩展用）
     */
    @Override
    public RTagObject setLinkComponent(String linkComponent) {
        this.linkComponent = linkComponent;
        return this;
    }

    /**
     * Getter for <code>ZDB.R_TAG_OBJECT.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public String getComment() {
        return this.comment;
    }

    /**
     * Setter for <code>ZDB.R_TAG_OBJECT.COMMENT</code>. 「comment」- 关系备注
     */
    @Override
    public RTagObject setComment(String comment) {
        this.comment = comment;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final RTagObject other = (RTagObject) obj;
        if (this.tagId == null) {
            if (other.tagId != null)
                return false;
        }
        else if (!this.tagId.equals(other.tagId))
            return false;
        if (this.entityType == null) {
            if (other.entityType != null)
                return false;
        }
        else if (!this.entityType.equals(other.entityType))
            return false;
        if (this.entityId == null) {
            if (other.entityId != null)
                return false;
        }
        else if (!this.entityId.equals(other.entityId))
            return false;
        if (this.linkComponent == null) {
            if (other.linkComponent != null)
                return false;
        }
        else if (!this.linkComponent.equals(other.linkComponent))
            return false;
        if (this.comment == null) {
            if (other.comment != null)
                return false;
        }
        else if (!this.comment.equals(other.comment))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tagId == null) ? 0 : this.tagId.hashCode());
        result = prime * result + ((this.entityType == null) ? 0 : this.entityType.hashCode());
        result = prime * result + ((this.entityId == null) ? 0 : this.entityId.hashCode());
        result = prime * result + ((this.linkComponent == null) ? 0 : this.linkComponent.hashCode());
        result = prime * result + ((this.comment == null) ? 0 : this.comment.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("RTagObject (");

        sb.append(tagId);
        sb.append(", ").append(entityType);
        sb.append(", ").append(entityId);
        sb.append(", ").append(linkComponent);
        sb.append(", ").append(comment);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IRTagObject from) {
        setTagId(from.getTagId());
        setEntityType(from.getEntityType());
        setEntityId(from.getEntityId());
        setLinkComponent(from.getLinkComponent());
        setComment(from.getComment());
    }

    @Override
    public <E extends IRTagObject> E into(E into) {
        into.from(this);
        return into;
    }
}
