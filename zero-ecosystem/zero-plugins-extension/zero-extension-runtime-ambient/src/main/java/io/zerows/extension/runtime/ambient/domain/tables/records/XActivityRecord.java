/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.ambient.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.runtime.ambient.domain.tables.XActivity;
import io.zerows.extension.runtime.ambient.domain.tables.interfaces.IXActivity;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record19;
import org.jooq.Row19;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class XActivityRecord extends UpdatableRecordImpl<XActivityRecord> implements VertxPojo, Record19<String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String>, IXActivity {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.X_ACTIVITY.KEY</code>. 「key」- 操作行为主键
     */
    @Override
    public XActivityRecord setKey(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.KEY</code>. 「key」- 操作行为主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.TYPE</code>. 「type」- 操作类型
     */
    @Override
    public XActivityRecord setType(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.TYPE</code>. 「type」- 操作类型
     */
    @Override
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.SERIAL</code>. 「serial」- 变更记录号
     */
    @Override
    public XActivityRecord setSerial(final String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.SERIAL</code>. 「serial」- 变更记录号
     */
    @Override
    public String getSerial() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.DESCRIPTION</code>. 「description」- 操作描述信息
     */
    @Override
    public XActivityRecord setDescription(final String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.DESCRIPTION</code>. 「description」- 操作描述信息
     */
    @Override
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.MODEL_ID</code>. 「modelId」-
     * 组所关联的模型identifier，用于描述
     */
    @Override
    public XActivityRecord setModelId(final String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.MODEL_ID</code>. 「modelId」-
     * 组所关联的模型identifier，用于描述
     */
    @Override
    public String getModelId() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.MODEL_KEY</code>. 「modelKey」-
     * 组所关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public XActivityRecord setModelKey(final String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.MODEL_KEY</code>. 「modelKey」-
     * 组所关联的模型记录ID，用于描述哪一个Model中的记录
     */
    @Override
    public String getModelKey() {
        return (String) get(5);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.MODEL_CATEGORY</code>. 「modelCategory」-
     * 关联的category记录，只包含叶节点
     */
    @Override
    public XActivityRecord setModelCategory(final String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.MODEL_CATEGORY</code>. 「modelCategory」-
     * 关联的category记录，只包含叶节点
     */
    @Override
    public String getModelCategory() {
        return (String) get(6);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.TASK_NAME</code>. 「taskName」- 任务名称
     */
    @Override
    public XActivityRecord setTaskName(final String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.TASK_NAME</code>. 「taskName」- 任务名称
     */
    @Override
    public String getTaskName() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.TASK_SERIAL</code>. 「taskSerial」- 任务单号
     */
    @Override
    public XActivityRecord setTaskSerial(final String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.TASK_SERIAL</code>. 「taskSerial」- 任务单号
     */
    @Override
    public String getTaskSerial() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.RECORD_OLD</code>. 「recordOld」-
     * 变更之前的数据（用于回滚）
     */
    @Override
    public XActivityRecord setRecordOld(final String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.RECORD_OLD</code>. 「recordOld」-
     * 变更之前的数据（用于回滚）
     */
    @Override
    public String getRecordOld() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.RECORD_NEW</code>. 「recordNew」-
     * 变更之后的数据（用于更新）
     */
    @Override
    public XActivityRecord setRecordNew(final String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.RECORD_NEW</code>. 「recordNew」-
     * 变更之后的数据（用于更新）
     */
    @Override
    public String getRecordNew() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public XActivityRecord setSigma(final String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.SIGMA</code>. 「sigma」- 用户组绑定的统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XActivityRecord setLanguage(final String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XActivityRecord setActive(final Boolean value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public XActivityRecord setMetadata(final String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.METADATA</code>. 「metadata」- 附加配置数据
     */
    @Override
    public String getMetadata() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XActivityRecord setCreatedAt(final LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XActivityRecord setCreatedBy(final String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XActivityRecord setUpdatedAt(final LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>ZDB.X_ACTIVITY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XActivityRecord setUpdatedBy(final String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_ACTIVITY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record19 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row19<String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> fieldsRow() {
        return (Row19) super.fieldsRow();
    }

    @Override
    public Row19<String, String, String, String, String, String, String, String, String, String, String, String, String, Boolean, String, LocalDateTime, String, LocalDateTime, String> valuesRow() {
        return (Row19) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return XActivity.X_ACTIVITY.KEY;
    }

    @Override
    public Field<String> field2() {
        return XActivity.X_ACTIVITY.TYPE;
    }

    @Override
    public Field<String> field3() {
        return XActivity.X_ACTIVITY.SERIAL;
    }

    @Override
    public Field<String> field4() {
        return XActivity.X_ACTIVITY.DESCRIPTION;
    }

    @Override
    public Field<String> field5() {
        return XActivity.X_ACTIVITY.MODEL_ID;
    }

    @Override
    public Field<String> field6() {
        return XActivity.X_ACTIVITY.MODEL_KEY;
    }

    @Override
    public Field<String> field7() {
        return XActivity.X_ACTIVITY.MODEL_CATEGORY;
    }

    @Override
    public Field<String> field8() {
        return XActivity.X_ACTIVITY.TASK_NAME;
    }

    @Override
    public Field<String> field9() {
        return XActivity.X_ACTIVITY.TASK_SERIAL;
    }

    @Override
    public Field<String> field10() {
        return XActivity.X_ACTIVITY.RECORD_OLD;
    }

    @Override
    public Field<String> field11() {
        return XActivity.X_ACTIVITY.RECORD_NEW;
    }

    @Override
    public Field<String> field12() {
        return XActivity.X_ACTIVITY.SIGMA;
    }

    @Override
    public Field<String> field13() {
        return XActivity.X_ACTIVITY.LANGUAGE;
    }

    @Override
    public Field<Boolean> field14() {
        return XActivity.X_ACTIVITY.ACTIVE;
    }

    @Override
    public Field<String> field15() {
        return XActivity.X_ACTIVITY.METADATA;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return XActivity.X_ACTIVITY.CREATED_AT;
    }

    @Override
    public Field<String> field17() {
        return XActivity.X_ACTIVITY.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field18() {
        return XActivity.X_ACTIVITY.UPDATED_AT;
    }

    @Override
    public Field<String> field19() {
        return XActivity.X_ACTIVITY.UPDATED_BY;
    }

    @Override
    public String component1() {
        return getKey();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getSerial();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public String component5() {
        return getModelId();
    }

    @Override
    public String component6() {
        return getModelKey();
    }

    @Override
    public String component7() {
        return getModelCategory();
    }

    @Override
    public String component8() {
        return getTaskName();
    }

    @Override
    public String component9() {
        return getTaskSerial();
    }

    @Override
    public String component10() {
        return getRecordOld();
    }

    @Override
    public String component11() {
        return getRecordNew();
    }

    @Override
    public String component12() {
        return getSigma();
    }

    @Override
    public String component13() {
        return getLanguage();
    }

    @Override
    public Boolean component14() {
        return getActive();
    }

    @Override
    public String component15() {
        return getMetadata();
    }

    @Override
    public LocalDateTime component16() {
        return getCreatedAt();
    }

    @Override
    public String component17() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component18() {
        return getUpdatedAt();
    }

    @Override
    public String component19() {
        return getUpdatedBy();
    }

    @Override
    public String value1() {
        return getKey();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getSerial();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public String value5() {
        return getModelId();
    }

    @Override
    public String value6() {
        return getModelKey();
    }

    @Override
    public String value7() {
        return getModelCategory();
    }

    @Override
    public String value8() {
        return getTaskName();
    }

    @Override
    public String value9() {
        return getTaskSerial();
    }

    @Override
    public String value10() {
        return getRecordOld();
    }

    @Override
    public String value11() {
        return getRecordNew();
    }

    @Override
    public String value12() {
        return getSigma();
    }

    @Override
    public String value13() {
        return getLanguage();
    }

    @Override
    public Boolean value14() {
        return getActive();
    }

    @Override
    public String value15() {
        return getMetadata();
    }

    @Override
    public LocalDateTime value16() {
        return getCreatedAt();
    }

    @Override
    public String value17() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value18() {
        return getUpdatedAt();
    }

    @Override
    public String value19() {
        return getUpdatedBy();
    }

    @Override
    public XActivityRecord value1(final String value) {
        setKey(value);
        return this;
    }

    @Override
    public XActivityRecord value2(final String value) {
        setType(value);
        return this;
    }

    @Override
    public XActivityRecord value3(final String value) {
        setSerial(value);
        return this;
    }

    @Override
    public XActivityRecord value4(final String value) {
        setDescription(value);
        return this;
    }

    @Override
    public XActivityRecord value5(final String value) {
        setModelId(value);
        return this;
    }

    @Override
    public XActivityRecord value6(final String value) {
        setModelKey(value);
        return this;
    }

    @Override
    public XActivityRecord value7(final String value) {
        setModelCategory(value);
        return this;
    }

    @Override
    public XActivityRecord value8(final String value) {
        setTaskName(value);
        return this;
    }

    @Override
    public XActivityRecord value9(final String value) {
        setTaskSerial(value);
        return this;
    }

    @Override
    public XActivityRecord value10(final String value) {
        setRecordOld(value);
        return this;
    }

    @Override
    public XActivityRecord value11(final String value) {
        setRecordNew(value);
        return this;
    }

    @Override
    public XActivityRecord value12(final String value) {
        setSigma(value);
        return this;
    }

    @Override
    public XActivityRecord value13(final String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public XActivityRecord value14(final Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public XActivityRecord value15(final String value) {
        setMetadata(value);
        return this;
    }

    @Override
    public XActivityRecord value16(final LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public XActivityRecord value17(final String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public XActivityRecord value18(final LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public XActivityRecord value19(final String value) {
        setUpdatedBy(value);
        return this;
    }

    @Override
    public XActivityRecord values(final String value1, final String value2, final String value3, final String value4, final String value5, final String value6, final String value7, final String value8, final String value9, final String value10, final String value11, final String value12, final String value13, final Boolean value14, final String value15, final LocalDateTime value16, final String value17, final LocalDateTime value18, final String value19) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(final IXActivity from) {
        setKey(from.getKey());
        setType(from.getType());
        setSerial(from.getSerial());
        setDescription(from.getDescription());
        setModelId(from.getModelId());
        setModelKey(from.getModelKey());
        setModelCategory(from.getModelCategory());
        setTaskName(from.getTaskName());
        setTaskSerial(from.getTaskSerial());
        setRecordOld(from.getRecordOld());
        setRecordNew(from.getRecordNew());
        setSigma(from.getSigma());
        setLanguage(from.getLanguage());
        setActive(from.getActive());
        setMetadata(from.getMetadata());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IXActivity> E into(final E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XActivityRecord
     */
    public XActivityRecord() {
        super(XActivity.X_ACTIVITY);
    }

    /**
     * Create a detached, initialised XActivityRecord
     */
    public XActivityRecord(final String key, final String type, final String serial, final String description, final String modelId, final String modelKey, final String modelCategory, final String taskName, final String taskSerial, final String recordOld, final String recordNew, final String sigma, final String language, final Boolean active, final String metadata, final LocalDateTime createdAt, final String createdBy, final LocalDateTime updatedAt, final String updatedBy) {
        super(XActivity.X_ACTIVITY);

        setKey(key);
        setType(type);
        setSerial(serial);
        setDescription(description);
        setModelId(modelId);
        setModelKey(modelKey);
        setModelCategory(modelCategory);
        setTaskName(taskName);
        setTaskSerial(taskSerial);
        setRecordOld(recordOld);
        setRecordNew(recordNew);
        setSigma(sigma);
        setLanguage(language);
        setActive(active);
        setMetadata(metadata);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised XActivityRecord
     */
    public XActivityRecord(final io.zerows.extension.runtime.ambient.domain.tables.pojos.XActivity value) {
        super(XActivity.X_ACTIVITY);

        if (value != null) {
            setKey(value.getKey());
            setType(value.getType());
            setSerial(value.getSerial());
            setDescription(value.getDescription());
            setModelId(value.getModelId());
            setModelKey(value.getModelKey());
            setModelCategory(value.getModelCategory());
            setTaskName(value.getTaskName());
            setTaskSerial(value.getTaskSerial());
            setRecordOld(value.getRecordOld());
            setRecordNew(value.getRecordNew());
            setSigma(value.getSigma());
            setLanguage(value.getLanguage());
            setActive(value.getActive());
            setMetadata(value.getMetadata());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

    public XActivityRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
