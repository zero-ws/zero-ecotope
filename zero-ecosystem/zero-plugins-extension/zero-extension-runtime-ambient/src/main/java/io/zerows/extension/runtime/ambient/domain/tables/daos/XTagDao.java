/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.ambient.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.ambient.domain.tables.XTag;
import io.zerows.extension.runtime.ambient.domain.tables.records.XTagRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class XTagDao extends AbstractVertxDAO<XTagRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag, String, Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>>, Future<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<XTagRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public XTagDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(XTag.X_TAG, io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag.class, new JDBCClassicQueryExecutor<XTagRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag, String>(configuration, io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByName(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByType(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>ICON IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByIcon(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.ICON.in(values));
    }

    /**
     * Find records that have <code>ICON IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByIcon(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.ICON.in(values), limit);
    }

    /**
     * Find records that have <code>COLOR IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByColor(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.COLOR.in(values));
    }

    /**
     * Find records that have <code>COLOR IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByColor(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.COLOR.in(values), limit);
    }

    /**
     * Find records that have <code>SORT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyBySort(final Collection<Long> values) {
        return findManyByCondition(XTag.X_TAG.SORT.in(values));
    }

    /**
     * Find records that have <code>SORT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyBySort(final Collection<Long> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.SORT.in(values), limit);
    }

    /**
     * Find records that have <code>SHOW IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByShow(final Collection<Boolean> values) {
        return findManyByCondition(XTag.X_TAG.SHOW.in(values));
    }

    /**
     * Find records that have <code>SHOW IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByShow(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.SHOW.in(values), limit);
    }

    /**
     * Find records that have <code>DESCRIPTION IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByDescription(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.DESCRIPTION.in(values));
    }

    /**
     * Find records that have <code>DESCRIPTION IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByDescription(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.DESCRIPTION.in(values), limit);
    }

    /**
     * Find records that have <code>UI_STYLE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUiStyle(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.UI_STYLE.in(values));
    }

    /**
     * Find records that have <code>UI_STYLE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUiStyle(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.UI_STYLE.in(values), limit);
    }

    /**
     * Find records that have <code>UI_CONFIG IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUiConfig(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.UI_CONFIG.in(values));
    }

    /**
     * Find records that have <code>UI_CONFIG IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUiConfig(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.UI_CONFIG.in(values), limit);
    }

    /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByAppId(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.APP_ID.in(values));
    }

    /**
     * Find records that have <code>APP_ID IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByAppId(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.APP_ID.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(XTag.X_TAG.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(XTag.X_TAG.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(XTag.X_TAG.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(XTag.X_TAG.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(XTag.X_TAG.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<XTagRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<XTagRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XTag, String>) super.queryExecutor();
    }
}
