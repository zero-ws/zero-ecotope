/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.ambient.domain.tables.daos;


import io.r2mo.vertx.jooq.classic.jdbc.JDBCClassicQueryExecutor;
import io.r2mo.vertx.jooq.shared.internal.AbstractVertxDAO;
import io.vertx.core.Future;
import io.zerows.extension.runtime.ambient.domain.tables.XLinkage;
import io.zerows.extension.runtime.ambient.domain.tables.records.XLinkageRecord;
import org.jooq.Configuration;

import java.time.LocalDateTime;
import java.util.Collection;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class XLinkageDao extends AbstractVertxDAO<XLinkageRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage, String, Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>>, Future<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>, Future<Integer>, Future<String>> implements io.r2mo.vertx.jooq.classic.VertxDAO<XLinkageRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage, String> {

    /**
     * @param configuration The Configuration used for rendering and query
     *                      execution.
     * @param vertx         the vertx instance
     */
    public XLinkageDao(final Configuration configuration, final io.vertx.core.Vertx vertx) {
        super(XLinkage.X_LINKAGE, io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage.class, new JDBCClassicQueryExecutor<XLinkageRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage, String>(configuration, io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage.class, vertx));
    }

    @Override
    protected String getId(final io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage object) {
        return object.getKey();
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByName(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.NAME.in(values));
    }

    /**
     * Find records that have <code>NAME IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByName(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.NAME.in(values), limit);
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByType(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.TYPE.in(values));
    }

    /**
     * Find records that have <code>TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByType(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>ALIAS IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByAlias(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.ALIAS.in(values));
    }

    /**
     * Find records that have <code>ALIAS IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByAlias(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.ALIAS.in(values), limit);
    }

    /**
     * Find records that have <code>REGION IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByRegion(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.REGION.in(values));
    }

    /**
     * Find records that have <code>REGION IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByRegion(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.REGION.in(values), limit);
    }

    /**
     * Find records that have <code>LINK_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLinkKey(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.LINK_KEY.in(values));
    }

    /**
     * Find records that have <code>LINK_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLinkKey(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.LINK_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>LINK_TYPE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLinkType(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.LINK_TYPE.in(values));
    }

    /**
     * Find records that have <code>LINK_TYPE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLinkType(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.LINK_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>LINK_DATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLinkData(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.LINK_DATA.in(values));
    }

    /**
     * Find records that have <code>LINK_DATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLinkData(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.LINK_DATA.in(values), limit);
    }

    /**
     * Find records that have <code>SOURCE_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySourceKey(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.SOURCE_KEY.in(values));
    }

    /**
     * Find records that have <code>SOURCE_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySourceKey(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.SOURCE_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>SOURCE_TYPE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySourceType(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.SOURCE_TYPE.in(values));
    }

    /**
     * Find records that have <code>SOURCE_TYPE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySourceType(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.SOURCE_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>SOURCE_DATA IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySourceData(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.SOURCE_DATA.in(values));
    }

    /**
     * Find records that have <code>SOURCE_DATA IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySourceData(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.SOURCE_DATA.in(values), limit);
    }

    /**
     * Find records that have <code>TARGET_KEY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByTargetKey(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.TARGET_KEY.in(values));
    }

    /**
     * Find records that have <code>TARGET_KEY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByTargetKey(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.TARGET_KEY.in(values), limit);
    }

    /**
     * Find records that have <code>TARGET_TYPE IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByTargetType(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.TARGET_TYPE.in(values));
    }

    /**
     * Find records that have <code>TARGET_TYPE IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByTargetType(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.TARGET_TYPE.in(values), limit);
    }

    /**
     * Find records that have <code>TARGET_DATA IN (values)</code>
     * asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByTargetData(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.TARGET_DATA.in(values));
    }

    /**
     * Find records that have <code>TARGET_DATA IN (values)</code>
     * asynchronously limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByTargetData(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.TARGET_DATA.in(values), limit);
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySigma(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.SIGMA.in(values));
    }

    /**
     * Find records that have <code>SIGMA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyBySigma(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.SIGMA.in(values), limit);
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLanguage(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.LANGUAGE.in(values));
    }

    /**
     * Find records that have <code>LANGUAGE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByLanguage(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.LANGUAGE.in(values), limit);
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByActive(final Collection<Boolean> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.ACTIVE.in(values));
    }

    /**
     * Find records that have <code>ACTIVE IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByActive(final Collection<Boolean> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.ACTIVE.in(values), limit);
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByMetadata(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.METADATA.in(values));
    }

    /**
     * Find records that have <code>METADATA IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByMetadata(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.METADATA.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByCreatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.CREATED_AT.in(values));
    }

    /**
     * Find records that have <code>CREATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByCreatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.CREATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByCreatedBy(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.CREATED_BY.in(values));
    }

    /**
     * Find records that have <code>CREATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByCreatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.CREATED_BY.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByUpdatedAt(final Collection<LocalDateTime> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.UPDATED_AT.in(values));
    }

    /**
     * Find records that have <code>UPDATED_AT IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByUpdatedAt(final Collection<LocalDateTime> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.UPDATED_AT.in(values), limit);
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByUpdatedBy(final Collection<String> values) {
        return findManyByCondition(XLinkage.X_LINKAGE.UPDATED_BY.in(values));
    }

    /**
     * Find records that have <code>UPDATED_BY IN (values)</code> asynchronously
     * limited by the given limit
     */
    public Future<List<io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage>> findManyByUpdatedBy(final Collection<String> values, final int limit) {
        return findManyByCondition(XLinkage.X_LINKAGE.UPDATED_BY.in(values), limit);
    }

    @Override
    public JDBCClassicQueryExecutor<XLinkageRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage, String> queryExecutor() {
        return (JDBCClassicQueryExecutor<XLinkageRecord, io.zerows.extension.runtime.ambient.domain.tables.pojos.XLinkage, String>) super.queryExecutor();
    }
}
