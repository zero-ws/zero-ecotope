/*
 * This file is generated by jOOQ.
 */
package io.zerows.extension.runtime.ambient.domain.tables.records;


import io.r2mo.vertx.jooq.shared.internal.VertxPojo;
import io.zerows.extension.runtime.ambient.domain.tables.XCategory;
import io.zerows.extension.runtime.ambient.domain.tables.interfaces.IXCategory;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.time.LocalDateTime;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class XCategoryRecord extends UpdatableRecordImpl<XCategoryRecord> implements VertxPojo, IXCategory {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>ZDB.X_CATEGORY.KEY</code>. 「key」- 类型主键
     */
    @Override
    public XCategoryRecord setKey(final String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.KEY</code>. 「key」- 类型主键
     */
    @Override
    public String getKey() {
        return (String) get(0);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.NAME</code>. 「name」- 类型名称
     */
    @Override
    public XCategoryRecord setName(final String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.NAME</code>. 「name」- 类型名称
     */
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.CODE</code>. 「code」- 类型编号
     */
    @Override
    public XCategoryRecord setCode(final String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.CODE</code>. 「code」- 类型编号
     */
    @Override
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.ICON</code>. 「icon」- 类型图标
     */
    @Override
    public XCategoryRecord setIcon(final String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.ICON</code>. 「icon」- 类型图标
     */
    @Override
    public String getIcon() {
        return (String) get(3);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.TYPE</code>. 「type」- 类型的分类
     */
    @Override
    public XCategoryRecord setType(final String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.TYPE</code>. 「type」- 类型的分类
     */
    @Override
    public String getType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.SORT</code>. 「sort」- 排序信息
     */
    @Override
    public XCategoryRecord setSort(final Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.SORT</code>. 「sort」- 排序信息
     */
    @Override
    public Integer getSort() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.LEAF</code>. 「leaf」- 是否叶节点
     */
    @Override
    public XCategoryRecord setLeaf(final Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.LEAF</code>. 「leaf」- 是否叶节点
     */
    @Override
    public Boolean getLeaf() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.PARENT_ID</code>. 「parentId」- 父类ID
     */
    @Override
    public XCategoryRecord setParentId(final String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.PARENT_ID</code>. 「parentId」- 父类ID
     */
    @Override
    public String getParentId() {
        return (String) get(7);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.IDENTIFIER</code>. 「identifier」-
     * 当前类型描述的Model的标识
     */
    @Override
    public XCategoryRecord setIdentifier(final String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.IDENTIFIER</code>. 「identifier」-
     * 当前类型描述的Model的标识
     */
    @Override
    public String getIdentifier() {
        return (String) get(8);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.COMMENT</code>. 「comment」- 备注信息
     */
    @Override
    public XCategoryRecord setComment(final String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.COMMENT</code>. 「comment」- 备注信息
     */
    @Override
    public String getComment() {
        return (String) get(9);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.APP_ID</code>. 「id」- 关联的应用程序ID
     */
    @Override
    public XCategoryRecord setAppId(final String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.APP_ID</code>. 「id」- 关联的应用程序ID
     */
    @Override
    public String getAppId() {
        return (String) get(10);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.TREE_COMPONENT</code>. 「treeComponent」-
     * 目录组件，构造树专用
     */
    @Override
    public XCategoryRecord setTreeComponent(final String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.TREE_COMPONENT</code>. 「treeComponent」-
     * 目录组件，构造树专用
     */
    @Override
    public String getTreeComponent() {
        return (String) get(11);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.TREE_CONFIG</code>. 「treeConfig」-
     * 目录组件运行配置，特殊场景专用
     */
    @Override
    public XCategoryRecord setTreeConfig(final String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.TREE_CONFIG</code>. 「treeConfig」-
     * 目录组件运行配置，特殊场景专用
     */
    @Override
    public String getTreeConfig() {
        return (String) get(12);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.RUN_COMPONENT</code>. 「runComponent」-
     * 执行组件
     */
    @Override
    public XCategoryRecord setRunComponent(final String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.RUN_COMPONENT</code>. 「runComponent」-
     * 执行组件
     */
    @Override
    public String getRunComponent() {
        return (String) get(13);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.RUN_CONFIG</code>. 「runConfig」- 执行组件相关配置
     */
    @Override
    public XCategoryRecord setRunConfig(final String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.RUN_CONFIG</code>. 「runConfig」- 执行组件相关配置
     */
    @Override
    public String getRunConfig() {
        return (String) get(14);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public XCategoryRecord setActive(final Boolean value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.ACTIVE</code>. 「active」- 是否启用
     */
    @Override
    public Boolean getActive() {
        return (Boolean) get(15);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public XCategoryRecord setSigma(final String value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.SIGMA</code>. 「sigma」- 统一标识
     */
    @Override
    public String getSigma() {
        return (String) get(16);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public XCategoryRecord setMetadata(final String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.METADATA</code>. 「metadata」- 附加配置
     */
    @Override
    public String getMetadata() {
        return (String) get(17);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public XCategoryRecord setLanguage(final String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.LANGUAGE</code>. 「language」- 使用的语言
     */
    @Override
    public String getLanguage() {
        return (String) get(18);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public XCategoryRecord setCreatedAt(final LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.CREATED_AT</code>. 「createdAt」- 创建时间
     */
    @Override
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public XCategoryRecord setCreatedBy(final String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.CREATED_BY</code>. 「createdBy」- 创建人
     */
    @Override
    public String getCreatedBy() {
        return (String) get(20);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public XCategoryRecord setUpdatedAt(final LocalDateTime value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.UPDATED_AT</code>. 「updatedAt」- 更新时间
     */
    @Override
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(21);
    }

    /**
     * Setter for <code>ZDB.X_CATEGORY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public XCategoryRecord setUpdatedBy(final String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>ZDB.X_CATEGORY.UPDATED_BY</code>. 「updatedBy」- 更新人
     */
    @Override
    public String getUpdatedBy() {
        return (String) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(final IXCategory from) {
        setKey(from.getKey());
        setName(from.getName());
        setCode(from.getCode());
        setIcon(from.getIcon());
        setType(from.getType());
        setSort(from.getSort());
        setLeaf(from.getLeaf());
        setParentId(from.getParentId());
        setIdentifier(from.getIdentifier());
        setComment(from.getComment());
        setAppId(from.getAppId());
        setTreeComponent(from.getTreeComponent());
        setTreeConfig(from.getTreeConfig());
        setRunComponent(from.getRunComponent());
        setRunConfig(from.getRunConfig());
        setActive(from.getActive());
        setSigma(from.getSigma());
        setMetadata(from.getMetadata());
        setLanguage(from.getLanguage());
        setCreatedAt(from.getCreatedAt());
        setCreatedBy(from.getCreatedBy());
        setUpdatedAt(from.getUpdatedAt());
        setUpdatedBy(from.getUpdatedBy());
        resetChangedOnNotNull();
    }

    @Override
    public <E extends IXCategory> E into(final E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached XCategoryRecord
     */
    public XCategoryRecord() {
        super(XCategory.X_CATEGORY);
    }

    /**
     * Create a detached, initialised XCategoryRecord
     */
    public XCategoryRecord(final String key, final String name, final String code, final String icon, final String type, final Integer sort, final Boolean leaf, final String parentId, final String identifier, final String comment, final String appId, final String treeComponent, final String treeConfig, final String runComponent, final String runConfig, final Boolean active, final String sigma, final String metadata, final String language, final LocalDateTime createdAt, final String createdBy, final LocalDateTime updatedAt, final String updatedBy) {
        super(XCategory.X_CATEGORY);

        setKey(key);
        setName(name);
        setCode(code);
        setIcon(icon);
        setType(type);
        setSort(sort);
        setLeaf(leaf);
        setParentId(parentId);
        setIdentifier(identifier);
        setComment(comment);
        setAppId(appId);
        setTreeComponent(treeComponent);
        setTreeConfig(treeConfig);
        setRunComponent(runComponent);
        setRunConfig(runConfig);
        setActive(active);
        setSigma(sigma);
        setMetadata(metadata);
        setLanguage(language);
        setCreatedAt(createdAt);
        setCreatedBy(createdBy);
        setUpdatedAt(updatedAt);
        setUpdatedBy(updatedBy);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised XCategoryRecord
     */
    public XCategoryRecord(final io.zerows.extension.runtime.ambient.domain.tables.pojos.XCategory value) {
        super(XCategory.X_CATEGORY);

        if (value != null) {
            setKey(value.getKey());
            setName(value.getName());
            setCode(value.getCode());
            setIcon(value.getIcon());
            setType(value.getType());
            setSort(value.getSort());
            setLeaf(value.getLeaf());
            setParentId(value.getParentId());
            setIdentifier(value.getIdentifier());
            setComment(value.getComment());
            setAppId(value.getAppId());
            setTreeComponent(value.getTreeComponent());
            setTreeConfig(value.getTreeConfig());
            setRunComponent(value.getRunComponent());
            setRunConfig(value.getRunConfig());
            setActive(value.getActive());
            setSigma(value.getSigma());
            setMetadata(value.getMetadata());
            setLanguage(value.getLanguage());
            setCreatedAt(value.getCreatedAt());
            setCreatedBy(value.getCreatedBy());
            setUpdatedAt(value.getUpdatedAt());
            setUpdatedBy(value.getUpdatedBy());
            resetChangedOnNotNull();
        }
    }

    public XCategoryRecord(final io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }
}
