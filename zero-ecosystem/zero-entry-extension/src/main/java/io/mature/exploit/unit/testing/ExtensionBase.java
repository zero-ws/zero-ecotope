package io.mature.exploit.unit.testing;

import io.vertx.core.json.JsonObject;
import io.zerows.unity.Ux;
import io.zerows.common.program.Kv;
import io.zerows.core.constant.KName;
import io.zerows.core.database.jooq.operation.UxJoin;
import io.zerows.core.testing.JooqBase;
import io.zerows.core.util.Ut;
import io.zerows.core.web.model.extension.HExtension;
import io.zerows.module.metadata.atom.configuration.modeling.MDConnect;

import java.util.Objects;

/**
 * @author lang : 2024-10-25
 */
public abstract class ExtensionBase extends JooqBase {
    static {
        HExtension.initialize();
    }

    protected String inId(final String filename) {
        final JsonObject inFile = this.ioJObject(filename + ".json");
        return Ut.valueString(inFile, KName.ID);
    }

    protected JsonObject inData(final String filename) {
        final JsonObject inFile = this.ioJObject(filename + ".json");
        return Ut.valueJObject(inFile, "params");
    }

    protected UxJoin inJoin(final String filename) {
        final JsonObject config = this.ioJObject(filename + "-join.json");
        // 主表子表
        final MDConnect active = HExtension.connect(Ut.valueString(config, KName.ACTIVE));
        Objects.requireNonNull(active);
        final MDConnect standBy = HExtension.connect(Ut.valueString(config, "standby"));
        Objects.requireNonNull(standBy);
        // 连接点
        final Kv<String, String> kvJoin = Kv.create(
            Ut.valueString(config, "active.field"),
            Ut.valueString(config, "standby.field")
        );
        // 匿名
        return Ux.Join.bridge(active, standBy, kvJoin, Ut.valueJObject(config, KName.ALIAS));
    }
}
